{"componentChunkName":"component---src-pages-search-jsx","path":"/search/","result":{"data":{"allMarkdownRemark":{"nodes":[{"excerpt":"트레이딩뷰 파인 스크립트로 포지션 매수 타이밍을 계산하고 이를 웹훅(Webhook)으로 서버에 알리면 자동 매수 애플리케이션을 만들 수 있지 않을까 생각되어 만들어본 파이썬 코드. 문제는... 적절한 매수 타이밍을 도저히 계산할 수가 없다... 😭 파이썬 Flask 웹 서버를 사용하여 트레이딩뷰 웹훅 메시지를 받아 처리하는 코드를 정리한 글입니다. ⏰ 트…","fields":{"slug":"/coin/using-tradingview-webhook/"},"frontmatter":{"date":"June 02, 2024","title":"트레이딩뷰 웹훅 얼러트 사용하기","description":"트레이딩뷰 파인 스크립트 간단 정리","tags":["bitcoin"],"series":"비트코인","previewImage":"bitcoin.jpg","isPrivate":null},"rawMarkdownBody":"\n![Webhook](./images/webhook.webp)\n\n트레이딩뷰 파인 스크립트로 포지션 매수 타이밍을 계산하고 이를 웹훅(Webhook)으로 서버에 알리면 자동 매수 애플리케이션을 만들 수 있지 않을까 생각되어 만들어본 파이썬 코드. 문제는... 적절한 매수 타이밍을 도저히 계산할 수가 없다... 😭\n\n파이썬 Flask 웹 서버를 사용하여 트레이딩뷰 웹훅 메시지를 받아 처리하는 코드를 정리한 글입니다.\n\n\n## ⏰ 트레이딩뷰 웹훅 알림 설정\n\n1. 얼러트 메뉴에서 알림 조건을 적절히 설정한 후 메시지에 JSON 데이터를 작성합니다. 트레이딩뷰에서 제공하는 변수를 쓸 수 있고 원하는 메시지를 작성할 수도 있습니다.\n\n```json\n{\n  \"ticker\": \"{{ticker}}\",\n  \"close\": \"{{close}}\",\n  \"open\": \"{{open}}\",\n  \"high\": \"{{high}}\",\n  \"low\": \"{{low}}\",\n  \"volume\": \"{{volume}}\",\n  \"time\": \"{{time}}\",\n  \"msg\": \"Custom trading view message\"\n}\n```\n\n2. 알림 탭의 웹훅 URL 항목에 웹훅 메시지를 받을 서버의 웹 주소를 입력합니다. 이 때 웹 서버의 http(s) 접속 포트는 반드시 80(443)이어야 합니다.\n\n\n## 🧑‍💻 Flask 웹 서버 구축\n\n먼저 `pip3 install flask` 명령어로 Flask 패키지를 설치합니다.\n\n### Hello World 서버 구축\n\nFlask 서버 구축은 처음이므로 접속 시 Hello World! 메시지를 출력하는 Flask 서버를 생성해봅니다. 🙂\n\n```python\nfrom flask import Flask, request, jsonify\n\napp = Flask(__name__)\n\n@app.route('/')\ndef hello_world():\n    return 'Hello World!'\n\nif __name__ == '__main__':\n    app.run(debug=True, host=\"0.0.0.0\", port=80)\n```\n\n### 트레이딩뷰 서버만 접속 허용하기\n\n엉뚱한 곳에서 웹훅 메시지를 보내면 큰일(😅?) 나므로 트레이딩뷰 IP 4개만 접속을 허용해줍니다.\n\n```python\n# 트레이딩뷰 서버만 접속 허용\nALLOWED_IPS = [\"52.89.214.238\", \"34.212.75.30\", \"54.218.53.128\", \"52.32.178.7\"]\n\n@app.before_request\ndef limit_remote_addr():\n    client_ip = request.remote_addr\n    if client_ip not in ALLOWED_IPS:\n        return jsonify({\"status\": \"failure\", \"message\": \"Access denied.\"}), 403\n```\n\n### 웹훅 메시지 전달받아 처리하기\n\n전달 받은 웹훅 메시지는 딕셔너리 자료형에 맞게 처리하면 됩니다. 😎\n\n```python\n# http://SERVER_IP/webhook 주소로 POST 요청 받기\n@app.route('/webhook', methods=['POST'])\ndef webhook():\n    if request.method == 'POST':\n        data = request.json             # 전송받은 데이터는\n        print(f\"Time: {data['time']}\")  # 딕셔너리 자료형에 맞게 처리\n        print(f\"Ticker: {data['ticker']}\")\n        print(f\"Open: {data['open']}\")\n        print(f\"High: {data['high']}\")\n        print(f\"Low: {data['high']}\")\n        print(f\"Volume: {data['volume']}\")\n        print(f\"Message: {data['msg']}\")\n        return jsonify({\"status\": \"success\"}), 200\n    else:\n        return jsonify({\"status\": \"failure\", \"message\": \"Invalid request method\"}), 400\n```\n\n### 전체 코드\n\n```python\nfrom flask import Flask, request, jsonify\n\napp = Flask(__name__)\n\n# 트레이딩뷰 서버만 접속 허용\nALLOWED_IPS = [\"52.89.214.238\", \"34.212.75.30\", \"54.218.53.128\", \"52.32.178.7\"]\n\n@app.before_request\ndef limit_remote_addr():\n    client_ip = request.remote_addr\n    if client_ip not in ALLOWED_IPS:\n        return jsonify({\"status\": \"failure\", \"message\": \"Access denied.\"}), 403\n\n# @app.route('/')\n# def hello_world():\n#     return 'Hello World!'\n\n@app.route('/webhook', methods=['POST'])\ndef webhook():\n    if request.method == 'POST':\n        data = request.json             # 전송받은 데이터는\n        print(f\"Time: {data['time']}\")  # 딕셔너리 자료형에 맞게 처리\n        print(f\"Ticker: {data['ticker']}\")\n        print(f\"Open: {data['open']}\")\n        print(f\"High: {data['high']}\")\n        print(f\"Low: {data['high']}\")\n        print(f\"Volume: {data['volume']}\")\n        print(f\"Message: {data['msg']}\")\n        return jsonify({\"status\": \"success\"}), 200\n    else:\n        return jsonify({\"status\": \"failure\", \"message\": \"Invalid request method\"}), 400\n\nif __name__ == '__main__':\n    app.run(debug=True, host=\"0.0.0.0\", port=80)\n```"},{"excerpt":"(주의!) 아래 코드는 사전에 충분히 검증한 후 활용해야 합니다. 파이썬의 ccxt 패키지를 사용하여 OKX 거래소 선물 자동거래를 하기 위한 코드를 정리한 글입니다. 🔑 API 발급 https://www.okx.com/account/my-api 에서 API를 발급받습니다. Secret Key는 한 번 확인 후 다시는 확인할 수 없으니 꼭 별도로 보관해둡…","fields":{"slug":"/coin/okx-futures-python-code/"},"frontmatter":{"date":"June 01, 2024","title":"파이썬으로 OKX 거래소 선물 거래하는 코드","description":"파이썬으로 OKX 거래소 선물 거래하는 코드","tags":["bitcoin"],"series":"비트코인","previewImage":"bitcoin.jpg","isPrivate":null},"rawMarkdownBody":"\n![](./images/chart-addict.jpeg)\n\n**(주의!) 아래 코드는 사전에 충분히 검증한 후 활용해야 합니다.**\n\n파이썬의 ccxt 패키지를 사용하여 OKX 거래소 선물 자동거래를 하기 위한 코드를 정리한 글입니다.\n\n\n## 🔑 API 발급\n\nhttps://www.okx.com/account/my-api 에서 API를 발급받습니다. Secret Key는 한 번 확인 후 다시는 확인할 수 없으니 꼭 별도로 보관해둡니다. Permission에 Trade를 추가하고, Passphrase에 비밀번호를 입력합니다.\n\n발급받은 API Key와 Secret Key 및 Passphrase는 환경변수로 만들어 사용하려 합니다. 파이썬 프로젝트 최상위 경로에 `.env` 파일을 만든 후 키 값을 입력합니다. 이렇게 만든 환경변수는 python-dotenv 패키지를 사용하여 불러올 수 있습니다.\n\n```python\nOKX_API_KEY = \"oKxApIkEy\"\nOKX_API_SECRET_KEY = \"oKxApIsEcReTkEy\"\nOKX_API_PASSPHRASE = \"oKxApIpAsSpHrAsE\"\n```\n\n\n## 🧹 초기화\n\n```python\nimport ccxt;\nimport os;\nfrom dotenv import load_dotenv\n\n# 환경\nload_dotenv()\nOKX_API_KEY = os.environ.get(\"OKX_API_KEY\")\nOKX_API_SECRET_KEY = os.environ.get(\"OKX_API_SECRET_KEY\")\nOKX_API_PASSPHRASE = os.environ.get(\"OKX_API_PASSPHRASE\")\n\nokx = ccxt.okx({\n    'apiKey': OKX_API_KEY,\n    'secret': OKX_API_SECRET_KEY,\n    'password': OKX_API_PASSPHRASE,\n    'enableRateLimit': True,\n})\n```\n\n\n## 🔍 선물 잔고 조회\n\n```python\nbalance = okx.fetch_balance()\nprint(balance['USDT'])\n```\n\n\n## 💸 레버리지 설정\n\n```python\n# 교차(cross) 레버리지 설정\nokx.set_margin_mode('cross', 'BTC-USDT-SWAP', params={\n    'lever': 10,\n})\n\n# 격리(isolated) 레버리지 설정\nokx.set_margin_mode('isolated', 'BTC-USDT-SWAP', params={\n    'lever': 10,\n})\n```\n\n\n## ☑️ 시장가 체결\n\n```python\nsymbol = 'BTC-USDT-SWAP'  # OKX BTCUSDT Perpetual\ntrade_mode = 'cross'      # 교차(cross) 모드\norder_type = 'market'     # market: 시장가 체결\norder_side = 'buy'        # buy: 공매수(Long) 포지션\namount = 0.1              # 0.1이 최소 주문 수량(2024. 5월 기준 0.1 입력 시 0.001 BTC 물량이 체결됨)\nprice = None              # 시장가 체결이므로...\nsl_price = 10000          # Stop Loss(손절) 가격\ntp_price = 100000         # Take Profit(수익실현) 가격\nparams={\n    'tdMode': trade_mode,\n    'stopLoss': {    \n        'type': 'market',         # triggerPrice 도달 시 시장가로 손절\n        'triggerPrice': sl_price  # Stop Loss(손절) 가격\n    },\n    'takeProfit': {\n        'type': 'market',         # triggerPrice 도달 시 시장가로 수익실현\n        'triggerPrice': tp_price  # Take Profit(수익실현) 가격\n    }\n}\n\norder = okx.create_order(symbol, order_type, order_side, amount, price=None, params=params)\nprint(order)\n```\n\n\n## ✅ 지정가 체결\n\n```python\nsymbol = 'BTC-USDT-SWAP'  # OKX BTCUSDT Perpetual\ntrade_mode = 'isolated'   # 격리(isolated) 모드\norder_type = 'limit'      # limit: 지정가 체결\norder_side = 'sell'       # sell: 공매도(Short) 포지션\namount = 0.1              # 0.1이 최소 주문 수량(2024. 5월 기준 0.1 입력 시 0.001 BTC 물량이 체결됨)\nprice = 50000             # 체결 가격\nsl_price = 100000         # Stop Loss(손절) 가격\ntp_price = 10000          # Take Profit(수익실현) 가격\nparams={\n    'tdMode': trade_mode,\n    'stopLoss': {    \n        'type': 'market',         # triggerPrice 도달 시 시장가로 손절\n        'triggerPrice': sl_price  # Stop Loss(손절) 가격\n    },\n    'takeProfit': {\n        'type': 'market',         # triggerPrice 도달 시 시장가로 수익실현\n        'triggerPrice': tp_price  # Take Profit(수익실현) 가격\n    }\n}\n\norder = okx.create_order(symbol, order_type, order_side, amount, price, params=params)\nprint(order)\n```\n\n\n## ❗ 참고 사이트\n\n[ccxt - StopLoss And TakeProfit Orders Attached To A Position](https://github.com/ccxt/ccxt/wiki/Manual#stoploss-and-takeprofit-orders-attached-to-a-position)"},{"excerpt":"Github Pages와 Gatsby-Starter-Haon v1.0.1 테마를 사용하여 만든 정적 블로그입니다. gatsby-starter-bee 테마와 데브시스터즈 기술블로그의 CSS 일부 스타일을 차용하여 커스터마이징 했습니다. 미세하게 바꾸고는 있지만 자꾸 조금씩 뭔가 맘에 안듦... 사용한 Gatsby 버전은 5.13.1, node 버전은 20.…","fields":{"slug":"/default/about/"},"frontmatter":{"date":"May 26, 2024","title":"Hello GitHub Pages! (with Gatsby-Starter-Haon)","description":"Gatsby-Starter-Haon 템플릿을 사용하여 Gatsby 기반 정적 블로그 생성 방법 설명","tags":["blogging"],"series":"블로그 운영","previewImage":"setting.png","isPrivate":null},"rawMarkdownBody":"\n![Gatsby-Starter-Haon](theme.png)\n\nGithub Pages와 [Gatsby-Starter-Haon](https://github.com/msung99/Gatsby-Starter-Haon) v1.0.1 테마를 사용하여 만든 정적 블로그입니다.\n\n[gatsby-starter-bee](https://github.com/JaeYeopHan/gatsby-starter-bee) 테마와 [데브시스터즈 기술블로그](https://tech.devsisters.com)의 CSS 일부 스타일을 차용하여 커스터마이징 했습니다. 미세하게 바꾸고는 있지만 자꾸 조금씩 뭔가 맘에 안듦...\n\n사용한 Gatsby 버전은 5.13.1, node 버전은 20.13.1 입니다.\n\n\n## 🤔 구축과정\n\n1. GitHub에 <GITHUB_ID>.github.io 라는 이름의 리포지토리를 만듭니다.\n2. git clone <GITHUB_REPOSITORY_LINK> 명령어로 위에서 만든 리포지토리를 로컬로 복제해옵니다.\n3. `npx gatsby new temp https://github.com/msung99/Gatsby-Starter-Haon` 명령어로 Gatsby-Starter-Haon 테마를 temp 폴더에 설치합니다.\n4. 생성된 Gatsby-Starter-Haon 테마 파일을 리포지토리 경로로 복사합니다.\n5. `npm run develop` 명령어를 실행한 후 http://localhost:8000 주소로 접속이 잘 되는지 확인합니다.\n\n\n## ⚙️ 설정\n\n### 블로그 정보 설정\n\n`meta-config.js` 파일 내용을 수정합니다.\n\n### 이미지 위아래가 잘려나오는 경우\n\n`gatsby-config.js` 파일을 열어 gatsby-remark-images 플러그인 옵션을 주석 처리합니다.\n\n```js\n{\n  resolve: `gatsby-remark-images`,\n  options: {\n    // maxWidth: 700,\n    // maxHeight: 400,\n  },\n},\n```\n\n### 일부 첨부파일이 표시되지 않는 경우\n\n일부 첨부파일(gif, mp4 등)이 표시되지 않는 경우 [gatsby-remark-copy-linked-files](https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-remark-copy-linked-files#readme) 플러그인을 추가해야 합니다. `package.json` 파일을 열어 dependencies 하위에 아래와 같이 한 줄 추가한 후\n\n```json\n\"dependencies\": {\n  \"gatsby-remark-copy-linked-files\": \"^6.13.1\",\n},\n```\n\n`npm i --legacy-peer-deps` 명령어를 실행하여 플러그인을 설치합니다. `--legacy-peer-deps` 옵션을 붙이는 이유는 해당 테마에서 사용 중인 gatsby-plugin-advanced-sitemap 플러그인 2.1.4 버전이 Gatsby 5 버전에서 호환성 문제를 일으키기 때문에 의존성 충돌을 무시하기 위함입니다.\n\n`gatsby-config.js` 파일을 열어 gatsby-remark-copy-linked-files 플러그인을 사용하기 위한 코드를 추가합니다.\n\n```js\n`gatsby-plugin-sharp`,\n{\n   resolve: `gatsby-transformer-remark`,\n   options: {\n     plugins: [\n       // 생략...\n       {\n         resolve: `gatsby-remark-autolink-headers`\n       },\n       // 이곳에 아래 코드 추가\n       {\n         resolve: `gatsby-remark-copy-linked-files`,\n         options: {\n           destinationDir: `path/to/dir`,\n           // ignoreFileExtensions: [`png`, `jpg`, `jpeg`, `bmp`, `tiff`],\n         },\n       }\n     ],\n   },\n},\n```\n\n### CSS 스타일링\n\n블로그 전체에 대한 CSS를 수정하려면 `src/styles/index.jsx` 파일을 수정합니다.\n\n메인 화면 프로필에 대한 CSS를 수정하려면 `src/components/profile/index.jsx` 파일을 수정합니다.\n\n글 내용에 대한 CSS를 수정하려면 `src/components/post/post-content/post-style/index.jsx` 파일을 수정합니다.\n\n\n## 글 작성\n\n마크다운 파일을 만드는 방법은 두 가지가 있습니다. 마크다운 파일명을 **index.md**로 만드는 경우와 그렇지 않은 경우인데요. 예시를 들어 설명하자면 다음과 같습니다.\n\n1. `components/contents/posts/blogging/hello-world` 경로에 **index.md** 마크다운 파일을 만들었다면, 위와 동일하게 해당 포스트의 URL은 `https://<YOUR_DOMAIN>/blogging/hello-world`가 됩니다.\n2. `components/contents/posts/blogging` 경로에 **hello-world.md** 마크다운 파일을 만들었다면, 해당 포스트의 URL은 `https://<YOUR_DOMAIN>/blogging/hello-world`가 됩니다.\n\n마크다운 파일 내용 최상단에 아래 YAML 형식의 속성 값이 들어가야 합니다. previewImage는 static 폴더에 있는 이미지를 글 목록 썸네일에 표시되며, 생략하면 기본 썸네일 이미지가 표시됩니다.\n\n```txt\n---\ntitle: 글 제목\ndescription: 글 설명\ndate: 2024-05-26 12:34:56\ntags:\n  - tag1\n  - tag2\nseries: 블로그 운영\npreviewImage: \"setting.png\"\n// isPrivate: true\n---\n```\n\n위 속성들은 Gatsby 테마에 따라 사용되는 종류가 달라집니다. Gatsby 테마를 변경한 후 에러가 난다면, 테마에서 필요로 하는 위의 속성 값들이 빠지지 않았는지 확인해야 합니다.\n\n이후 마크다운 문법을 사용하여 글을 작성하면 됩니다.\n\n\n## Github Pages로 배포\n\n`package.json` 파일에 아래 스크립트를 추가합니다. 보유한 도메인이 없다면 아래 `cp CNAME ./public &&`을 삭제합니다.\n\n```json\n\"scripts\": {\n    \"deploy\": \"gatsby build && cp CNAME ./public && gh-pages -d public\"\n}\n```\n\n`npm i gh-pages --legacy-peer-deps` 명령어를 실행하여 gh-pages를 설치합니다.\n\n이제 `npm run deploy` 명령어를 실행하면 public 폴더의 파일들이 깃허브 리포지토리의 gh-pages 브랜치에 배포됩니다. 깃허브 리포지토리 Settings 메뉴 → pages 메뉴에 들어간 다음, Branch를 gh-pages로 수정합니다.\n\n\n## 🔗 접속\n\n이제 [https://<GITHUB_ID>.github.io](https://<GITHUB_ID>.github.io) 주소로 블로그 접속이 가능합니다. 보유한 도메인이 있다면 보유한 도메인 주소로 접속하면 됩니다. 😎"},{"excerpt":"재테크는 잘 되지 않고 손실은 발생하고 있고 경제적 자유 실현은 요원하고 이 와중에 비트코인 가격은 1억을 돌파하니 FOMO가 와버렸습니다. 그래서 벼락거지(?)가 돼 버렸습니다. 😭 그래서 이열치열, 열은 열로 다스리듯 손해는 손해로 다스린다는 정신승리법 논리(?)로 해외여행을 계획했습니다. 작년에 갔던 도쿄 여행을 날씨 때문에 대차게 말아먹은 적이 있…","fields":{"slug":"/travel/2024-03-takamatsu-travel/"},"frontmatter":{"date":"April 15, 2024","title":"2024년 3월 다카마쓰 병맛 여행기","description":"2024년 3월 다카마쓰 병맛 여행기","tags":["travel"],"series":"병맛 여행기","previewImage":"travel.jpeg","isPrivate":null},"rawMarkdownBody":"\n[![억까심정](./images/2024-03-takamatsu/25jw_eokka.jpeg)](https://www.instagram.com/25_jw)\n\n재테크는 잘 되지 않고 손실은 발생하고 있고 경제적 자유 실현은 요원하고 이 와중에 비트코인 가격은 1억을 돌파하니 FOMO가 와버렸습니다. 그래서 벼락거지(?)가 돼 버렸습니다. 😭\n\n그래서 이열치열, 열은 열로 다스리듯 손해는 손해로 다스린다는 정신승리법 논리(?)로 해외여행을 계획했습니다. 작년에 갔던 도쿄 여행을 날씨 때문에 대차게 말아먹은 적이 있어서 이번엔 날씨와 상관없이 가능한 식도락 여행을 가기로 정했고, 우동으로 유명한 다카마쓰로 4박 5일 간 여행을 갔습니다.\n\n아니나다를까 이번 여행 내내 비가 내렸습니다. 하필 외투를 하나만 가져갔는데 왜이리 추웠는지... 비가 와서 가보고 싶던 곳도 못가고... 작년 도쿄 여행 때도 그러더만 왜이리 날씨가 나를 억까하는 거냐! 😡\n\n먹는 걸로만 따지면 성공한 여행이었지만 내가 여행 가는 날에만 비가 내리는 게 너무 억울합니다. 여행을 다녀올수록 우울해지기만 하니 이젠 여행 가기가 두렵습니다.\n\n\n## ❗ 다카마쓰 여행 팁\n\n### 우동 주문 방법\n\n우동 종류는 여러가지가 있습니다.\n\n* 가케 우동(かけうどん): 우동 면에 뜨거운 국물을 붓고 고명 등을 얹어 먹는 우동\n* 가마타마 우동(釜玉うどん): 뜨거운 우동 면을 날계란과 섞어 먹는 우동\n* 붓가케 우동(ぶっかけうどん): 우동 면에 쯔유를 조금씩 부어가며 먹는 우동\n* 가마아게 우동(釜揚げうどん): 우동 면과 면수를 같은 그릇에 담고, 쯔유에 찍어먹는 우동\n* 자루 우동(ざるうどん): 우동 면을 찬 물에 씻어 체에 담아 내는 우동\n\n우동 주문 시에 사용하는 용어는 다음과 같습니다.\n\n* 타마(玉): 우동 사리(다발)\n* 소(小, 쇼) = 1玉(히토타마) / 중(中, 쥬-) = 2玉(후타타마) / 특대(特大, 토쿠다이) = 3玉(산타마) / 보통(並, 헤이)\n* 뜨겁다(温かい, 아타타카이) / 차갑다(冷たい, 츠메타이)\n\n여러 우동집을 다닐 계획이라면 소(小) 사이즈인 히토타마를, 적당히 한 끼를 먹으려면 중(中) 또는 보통(並) 사이즈인 후타타마를 먹는 게 좋습니다. 산타마는 안 먹어봤지만 양이 너무 많을 듯합니다. 저는 최대한 많은 우동 가게를 가기 위해 주로 히토타마로 주문해서 먹었습니다.\n\n예를 들어 가케우동 소 사이즈를 주문하려면 **가케우동 쇼 사이즈 오네가이시마스** 또는 **가케우동 히토타마 오네가이시마스** 라고 얘기하면 됩니다. 현지인처럼 주문하려면 **가마 쇼** 라고 얘기하면 됩니다만... 아마 티가 날겁니다. 😅\n\n몇몇 우동집은 셀프로 면을 데치고 고명도 올려야 하는데 어떻게 하는지는 드라마 [고독한 미식가](https://youtu.be/qck7tqhLc5Q?si=wjKzeuc5gvewXu5e&t=404)를 보면 나옵니다.\n\n### 호네츠키도리\n\n호네츠키도리(骨付鶏)는 닭다리 구이입니다. 닭다리 구이라는 게 별게 있나 싶지만 우리나라에서 흔히 먹는 치킨 닭다리와는 다르게 생긴 음식입니다. 영계로 만들어 부드러운 히나도리(雛どり)와 노계로 만들어 질기지만 씹는 맛이 일품인 오야도리(親どり) 두 종류가 있습니다.\n\n호네츠키도리 두 종류 중에 하나를 먹는다면 오야도리를 추천합니다. 우리나라에서 영계를 먹을 기회는 흔하지만 노계를 먹을 기회는 많지 않기 때문입니다. 이럴 때 맛봐야하지 않겠습니까... 물론 제일 좋은 방법은 둘 다 먹는 겁니다. 😂\n\n### 각종 패스권\n\n[붓쇼잔 온천](https://maps.app.goo.gl/RDhmHebJkacVN2Fc9)을 간다면 고토덴이 정차하는 역(타카마츠칫코역 등)에서 붓쇼잔 패스를 구매하는 게 좋습니다. 붓쇼잔 패스를 구매하면 부채를 주는데 이 부채를 역무원에게 보여주면 고토덴을 하루동안 무제한 탑승할 수 있습니다. 또한 붓쇼잔 온천에서 부채를 보여주면 타월을 줍니다. 혹시 붓쇼잔 패스를 안 샀다고 해도 붓쇼잔 온천에 있는 키오스크로 입장권과 기타 물품을 구입할 수 있습니다.\n\n[고토히라](https://maps.app.goo.gl/bQDCmh4YCV3wFo777)를 간다면 고토덴이 정차하는 역에서 고토덴 1일 패스를 구매하는 게 좋습니다. 이 패스권 값이 다카마쓰에서 고토히라까지의 왕복 비용과 비슷해서 구입하는 게 좋습니다. 다만 저는 JR 전철을 타며 우동집을 이곳저곳 다녀온 후 고토히라를 갈 계획이어서 사지는 않았습니다.\n\n### 다카마쓰 여행 쿠폰북 왜 더 이상은 네이버...\n\n예전에 에어 서울에서 다카마쓰 여행 쿠폰북을 줬었지만 이젠 안 줍니다. 가끔 이벤트로 푸는 듯한데 그게 내 여행 일정이랑 겹칠 확률은...? 🙄 아무튼 쿠폰을 받을 수만 있다면 리무진 버스, 리츠린 공원 입장권, 쇼도시마 페리 탑승 비용 등 4,000엔 이상을 절약할 수 있을 듯합니다.\n\n### 꼭 가보길 추천하는 식당\n\n* [미야가와 제면소](https://maps.app.goo.gl/5kg9JYggi3XszYQH9): 지금까지 가본 가케 우동집 중 원탑. 접근성이 좋진 않지만 여행 일정에 여유가 있고 가케우동을 먹으러 간다면 추천합니다.\n* [우동 바카이치다이](https://maps.app.goo.gl/9ox4pzzM8HXLhFUw9): 가마타마 우동(정확히는 가마버터 우동)을 먹으러 간다면 추천합니다. 츠유 넣는걸 잊고 먹었는데도 너무 맛있었습니다.\n* [와라야](https://maps.app.goo.gl/DMiRc5oFJkASztgu9): 자루 우동을 먹으러 간다면 추천합니다. 떡 같은 우동 사리 맛이 새로웠습니다.\n* [란마루](https://maps.app.goo.gl/k92dMuTdY6e36YFL8): 호네츠키도리를 먹으러 간다면 추천합니다. 사누키요이마이라는 사케도 곁들어 먹으면 더욱 좋구요. 여행 다녀온 후 알았지만 두부 샐러드도 아주 맛있다고 합니다.\n\n### 그 외\n\n* 다카마쓰 공항 ↔ 다카마쓰 역 버스 시간표: https://www.kotoden.co.jp/publichtm/bus/limousine/index-en.html \n* 고토덴야시마 역 ↔ 야시마 정상행 버스 시간표: https://www.kotoden.co.jp/publichtm/bus/rosen/yashima/index.html\n* 쇼도시마 버스 노선 및 시간표: https://www.shodoshima-olive-bus.com/dia\n* 쇼도시마 엔젤로드 길 열리는 시간 알아보는 사이트: https://www.town.tonosho.kagawa.jp/kanko/index.html\n\n\n## 😲 이번 여행으로 알게된 사실\n\n**(현대카드 네이버 카드 기준?) 일본의 선불형 교통카드인 스이카는 애플워치보다 아이폰에 등록하여 사용하는 게 편리합니다.**  아이폰에 등록된 스이카는 지갑 앱에서 충전이 가능하지만 애플워치에 등록된 스이카는 이유는 모르겠지만 충전이 불가하기 때문입니다. 물론 편의점 가서 충전하면 되긴 하지만 귀찮습니다.\n\n**2023년 하반기부터 SKT에서 비정상 유심기변 차단정책이란 걸 시행중입니다.** 이 때문에 귀국 후 국내 SKT eSIM 서비스가 안 돼서 애를 먹었습니다. 별 짓을 해도 개통이 안되길래 인천공항 SKT 로밍센터에 가서 문의했더니 USIM 교체 시 스마트폰을 끄고 교체해야 기존 USIM 차단이 되지 않는다고 합니다. eSIM은 스마트폰을 끄고 교체할 수 없는데 이 경우 어떻게 해야 하는지 문의하니 아직 방법이 없다고 합니다. 대안을 마련해놓고 좀 정책을 시행해주시지...\n\n그런데 아래와 같이 해보면 국내 SKT eSIM 차단이 되지 않을 수도 있을 듯합니다. 나중에 해외여행 가게 되면 테스트 해보겠지만 언제 또 가게 될지...\n\n1. 국내 SKT eSIM 비활성화\n2. 스마트폰을 끈 후 다시 켜기\n3. 해외 eSIM 활성화\n\n**일본의 시골에 있는 전철역엔 교통카드 단말기가 없는 경우가 있습니다.** 모든 전철역에 교통카드 단말기가 있는 줄 알았다가 단말기가 어딨는지 이리저리 찾다가 헤매기도 했습니다. 이런 곳에선 현금을 내고 승차권을 구입해서 탑승해야 합니다.\n\n\n## ✏️ 여행기\n\n<div style=\"text-align: center;\">\n   <iframe width=\"315\" height=\"560\" src=\"https://youtube.com/embed/PmP5aEZQ9NI\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n</div>\n\n### 2024-03-22(금): 다카마쓰 중앙 여행\n\n여행경로: [다카마쓰 심볼 타워](https://maps.app.goo.gl/Yt9yTknEH2BedS6T9) → [치쿠세이 우동 본점](https://maps.app.goo.gl/vC8VKqVMLZUjiQUj9) → [사카에다 우동 미나미신마치점](https://maps.app.goo.gl/zyv73s7iyQA6DcLv6) → [리츠린 공원](https://maps.app.goo.gl/3zJXMquU42Kamy9j6) → [붓쇼잔 온천](https://maps.app.goo.gl/RDhmHebJkacVN2Fc9) → [신페이 우동](https://maps.app.goo.gl/UgTUniSFdASTfJPA8) → [잇카쿠 다카마쓰점](https://maps.app.goo.gl/1vbY4u8XLBD7yhUeA)\n\n다카마쓰 공항에 내리면 다카마쓰 역으로 향하는 버스 승차권을 구입합니다. 가이드 분이 있어서 안내 받고 구입하면 됩니다. 아니면 1,000엔 충전된 교통카드(스이카나 파스모 등) 찍고 타면 됩니다.\n\n다카마쓰 역 도착. 입구가 귀욤귀욤하군요.\n\n![다카마쓰역](./images/2024-03-takamatsu/20240322_114710_TakamatsuStation.webp)\n\n역 근처에 있는 [심볼 타워](https://maps.app.goo.gl/Yt9yTknEH2BedS6T9) 29층(30층 아님) 전망대에서 다카마쓰 시내를 내려다 봤습니다. 이렇게 날씨가 맑은데 오늘만 맑을 예정이라니 야속하기만 합니다. 😞\n\n![다카마쓰 심볼타워 29층 전망대](./images/2024-03-takamatsu/20240322_120529_SymbolTower29.webp)\n\n![다카마쓰 심볼타워 29층 전망대](./images/2024-03-takamatsu/20240322_120608_SymbolTower29.webp)\n\n![다카마쓰 심볼타워 29층 전망대](./images/2024-03-takamatsu/20240322_120616_SymbolTower29.webp)\n\n[위베이스 다카마쓰 호텔](https://maps.app.goo.gl/wqmi6FzcP8T91rx58) 체크인 시간이 남아서 호텔 카운터에 짐만 먼저 맡겨놓고 다카마쓰 시내를 싸돌아(?) 다니기로 했습니다. 호텔 여기저기에 고양이 그림이 그려져 있는 걸 보면 여기 사장님이 왠지 냥이 덕후인 것 같아...\n\n![위베이스 다카마쓰 호텔](./images/2024-03-takamatsu/20240322_160823_WeBaseHotel.webp)\n\n다카마쓰에 와서 먹은 첫 우동은 [치쿠세이 우동 본점](https://maps.app.goo.gl/vC8VKqVMLZUjiQUj9)의 가케 우동입니다. 치쿠와도 같이 곁들여 먹었습니다.\n\n![치쿠세이 우동 본점](./images/2024-03-takamatsu/20240322_125000_ChikuseiUdon_Entry.webp)\n\n![치쿠세이 우동 본점 가케 우동과 치쿠와](./images/2024-03-takamatsu/20240322_125649_ChikuseiUdon_KakeUdon.webp)\n\n![치쿠세이 우동 본점 가케 우동 먹는 중](./images/2024-03-takamatsu/20240322_131225_ChikuseiUdon_KakeUdon_Eating.webp)\n\n우동 사리가 생각보다 탱탱하진 않지만 진한 다시 국물이 좋았습니다. 굳!\n\n![치쿠세이 우동 본점 가케 우동 다 먹음](./images/2024-03-takamatsu/20240322_130431_ChikuseiUdon_KakeUdon_EatAll.webp)\n\n그 다음 [사카에다 우동 미나미신마치점](https://maps.app.goo.gl/zyv73s7iyQA6DcLv6)에서 명란버터 우동을 먹었습니다. 간장을 많이 부어서 그런지 모르겠으나 먹으면 먹을수록 짭니다. 다른 손님들 대부분 가케 우동을 먹던데 다 이유가 있는 듯합니다.\n\n![사카에다 우동 미나미신마치점](./images/2024-03-takamatsu/20240322_135356_SakaedaUdon_Entry.webp)\n\n![사카에다 우동 미나미신마치점 명란버터우동](./images/2024-03-takamatsu/20240322_134106_SakaedaUdon_MyeongranUdon.webp)\n\n![사카에다 우동 미나미신마치점 명란버터우동 먹는 중](./images/2024-03-takamatsu/20240322_135159_SakaedaUdon_MyeongranUdon_Eating.webp)\n\n다 먹긴 했는데 어우... 짜다. 😵 개인적으로 명란버터 우동은 비추합니다.\n\n![사카에다 우동 미나미신마치점 명란버터우동 다 먹음](./images/2024-03-takamatsu/20240322_134944_SakaedaUdon_MyeongranUdon_EatAll.webp)\n\n[리츠린 공원](https://maps.app.goo.gl/3zJXMquU42Kamy9j6)은 왠지 부모님 모시고 오면 엄청 좋아할 것 같은(?) 여행지입니다. 주변이 온통 녹색 천지라 공원을 거닐다 보면 눈이 정화되고 마음에 여유가 생깁니다. 사실 리츠린 공원은 여행하다가 남는 시간에 가려고 했었는데 날씨가 맑았던 첫 날에 오길 정말 잘 했습니다.\n\n![리츠린 공원 입구](./images/2024-03-takamatsu/20240322_142619_RitsurinPark_Entry.webp)\n\n![리츠린 공원](./images/2024-03-takamatsu/20240322_143139_RitsurinPark.webp)\n\n![리츠린 공원](./images/2024-03-takamatsu/20240322_151759_RitsurinPark.webp)\n\n리츠린 공원 내부엔 키쿠게츠테이라는 곳이 있습니다. \n\n![키쿠게츠테이](./images/2024-03-takamatsu/20240322_151047_RitsurinPark_Kukugetsutei.webp)\n\n여기서 말차와 화과자를 맛보며 경치를 즐길 수 있습니다. 화과자를 2~3조각으로 나누어 먹다가 단 맛이 느껴지면 말차로 입을 씻어내듯 마시고 말차 마지막 잔은 다 마셨다는 걸 알리기 위해 호로록 소리를 내며 마셔야 하는 걸로 아는데, 저 혼자 먹는 거니 맛만 좋게 먹으면 그만 아닐까요... 🤣\n\n![키쿠게츠테이의 말차와 화과자](./images/2024-03-takamatsu/20240322_145708_RitsurinPark_Kukugetsutei_Malcha.webp)\n\n여기서 다도를 즐기며 들었던 생각은... 이렇게 경치 좋고 넓은 집에서 살면 눈은 호강하겠지만 겨울에 너무 추워서 못 살 것 같습니다. 🥶\n\n![키쿠게츠테이](./images/2024-03-takamatsu/20240322_150126_RitsurinPark_Kukugetsutei.webp)\n\n나룻배도 타볼 수 있는데, 탈까말까 하다가 안 탔습니다... 라고 할 때 타볼 걸... 😫\n\n![리츠린 공원 나룻배](./images/2024-03-takamatsu/20240322_151116_RitsurinPark_Boat.webp)\n\n호텔 체크인 시간이 지나 호텔로 돌아와 잠깐 쉰 후 아케이드 상점가를 돌아다녀 봤습니다. [루이비통 다카마쓰점](https://maps.app.goo.gl/ManFFNuTiWkiEhHX7) 건너편에 피아노가 있군요. 아쉽게 연주 가능한 시간이 지나서 연주해보진 못했습니다. 며칠 후에 다시 가봤을 땐 비가 많이 와서 그런지 연주 가능한 시간임에도 연주를 하지 못하게 막아놨습니다. 😢\n\n![다카마쓰 아케이드 상점가 피아노](./images/2024-03-takamatsu/20240322_174421_ArcadePiano.webp)\n\n[카타하라마치 역](https://maps.app.goo.gl/zG9uBNi4oqp57QbVA)에서 붓쇼잔 패스를 구입한 후 [붓쇼잔 온천](https://maps.app.goo.gl/RDhmHebJkacVN2Fc9)으로 갔습니다. 냉탕과 온탕 둘 다 있는데 너무 뜨겁지도 차갑지도 않아 좋습니다. 온천욕을 즐기고 나니 피부가 미끌미끌한 느낌이 듭니다.\n\n![붓쇼잔 온천 입구](./images/2024-03-takamatsu/20240322_183010_ButshozanOnten_Entry.webp)\n\n![붓쇼잔 온천 로비](./images/2024-03-takamatsu/20240322_194411_ButshozanOnten_Lobby.webp)\n\n붓쇼잔 패스를 사면 부채를 주는데 이걸 역무원에게 보여주면 고토덴(전철)을 탈 수 있습니다. 이 부채를 붓쇼잔 온천 직원에게 보여주면 타올을 줍니다. 붓쇼잔 패스를 구입하지 않아도 붓쇼잔 온천에 있는 키오스크로 입장권과 물품을 구입할 수 있습니다.\n\n![붓쇼잔 패스 부채](./images/2024-03-takamatsu/20240322_181948_ButshozanOnten_Fan.webp)\n\n다시 다카마쓰 시내로 돌아온 후 [신페이 우동](https://maps.app.goo.gl/UgTUniSFdASTfJPA8) 집에서 자루 우동을 먹었습니다. 이 가게는 QR 코드로 주문을 하는데 라인 앱이 설치되어 있어야만 주문이 가능합니다. 하지만 전 라인 가입이 안 되어 있어서 직원에게 직접 주문했습니다.\n\n![신페이 우동 입구](./images/2024-03-takamatsu/20240322_203127_ShinpeiUdon_Entry.webp)\n\n![신페이 우동 자루 우동](./images/2024-03-takamatsu/20240322_205310_ShinpeiUdon_ZaruUdon.webp)\n\n![신페이 우동 자루 우동 먹는 중](./images/2024-03-takamatsu/20240322_205512_ShinpeiUdon_ZaruUdon_Eating.webp)\n\n당연하지만 역시 차가운 우동이 따뜻한 우동보다 면이 더 탱탱합니다!\n\n![신페이 우동 자루 우동 먹는 중](./images/2024-03-takamatsu/20240322_205944_ShinpeiUdon_ZaruUdon_EatAll.webp)\n\n너무 우동만 먹고 다닌 것 같아 [잇카쿠 다카마쓰점](https://maps.app.goo.gl/1vbY4u8XLBD7yhUeA)에서 호네츠키도리를 먹으러 갔습니다. 히나도리(영계)와 오야도리(노계) 중 뭘 먹을까 고민하다가 둘 다 먹어보기로 했습니다. 식당 안에서 먹으려면 1시간 이상 기다려야 해서 포장해왔습니다.\n\n![잇카쿠 다카마쓰점 입구](./images/2024-03-takamatsu/20240322_212403_Itkaku_Entry.webp)\n\n히나도리는 오야도리보다 부드럽고 양이 더 많습니다. 오야도리는 히나도리보다 질기지만 쫄깃한 맛이 일품입니다. 양배추도 기름에 찍어서 먹으면 별미입니다.\n\n![잇카쿠 다카마쓰점 히나도리(위쪽)와 오야도리(아래쪽)](./images/2024-03-takamatsu/20240322_215948_Itkaku_Honetsukidori.webp)\n\n그런데 여기 호네츠키도리는 너무 짭니다. 🤮 둘 중 하나만 먹었다면 짭잘한 맛에 별미를 먹었다는 느낌이 들었을 것 같지만 너무 짜다보니 둘 다 먹기가 너무 힘듭니다. 진리의 둘 다는 가끔은 진리가 아님을 이번에 깨달았...\n\n### 2024-03-23(토): 다카마쓰 서쪽 여행\n\n여행경로: [가모 우동](https://maps.app.goo.gl/hdtycD9hf9d8U2ru6)(실패) → [미야가와 제면소](https://maps.app.goo.gl/5kg9JYggi3XszYQH9) → [나가타 in 카노카](https://maps.app.goo.gl/hfmair1quiW3ztw57) → [고토히라 궁](https://maps.app.goo.gl/5GU1VYVzeBkJFqnEA) → [치치부가하마](https://maps.app.goo.gl/WEBTZPfD6fp96K3R8)(포기) → [세토노마츠리 스시 효고마치](https://maps.app.goo.gl/ho9EZKTgwNiuonKKA)\n\n오늘부터 귀국일까지 비가 온다는 일기예보가 있었는데 역시나 매일 비가 왔습니다. 식도락 여행을 온 것이라 날씨가 아무리 나빠도 상관없다고 되뇌어도 막상 해뜬날 한 번 없이 흐리기만 하니 짜증을 넘어서 우울해집니다. 😢\n\nJR 전철을 타고 [가모 우동](https://maps.app.goo.gl/hdtycD9hf9d8U2ru6)이라는 가게에 갔습니다. 소설가 무라카미 하루키 씨가 극찬한 우동집이어서 큰 기대를 갖고 찾아갔지만 하필 매주 토요일마다 임시휴업하고 있어서 되돌아가야 했습니다. 이곳에서 우동 한 그릇 못 먹고 간 게 너무 아쉽습니다. 여기 뚜벅이가 찾아가기 힘든 곳인데... 😭\n\n![가모 우동 입구](./images/2024-03-takamatsu/20240323_111219_GamoUdon.webp)\n\n허탈한 마음을 가지며 [미야가와 제면소](https://maps.app.goo.gl/5kg9JYggi3XszYQH9)라는 우동 가게에 갔습니다. 여기도 뚜벅이가 찾아가기 만만찮은 곳이지만 [사장님이 우동 반죽을 직접 밟을수록 귀여워진다고 해서](https://youtu.be/n-88nRvhQ8s?si=fDWDeBsXJAiyg1EL&t=566) 🤣 한번 가봤습니다. 점원 분들이 일본어만 할 줄 아셔서 주문하기가 어려웠지만 대충 눈치껏 알아들으며 가케 우동을 주문했습니다.\n\n![미야가와 제면소 입구](./images/2024-03-takamatsu/20240323_125340_Miyagawa_Entry.webp)\n\n![미야가와 제면소 가케 우동](./images/2024-03-takamatsu/20240323_125643_Miyagawa_KakeUdon.webp)\n\n![미야가와 제면소 가케 우동 먹는 중](./images/2024-03-takamatsu/20240323_130732_Miyagawa_KakeUdon_Eating.webp)\n\n세상에... 지금까지 먹어본 가케 우동 중 가장 맛있었습니다. 개운하고 찐~한 국물이 미쳤따리. 게다가 가격까지 저렴해! (히토타마 기준 250엔) 지금까지 다녀온 우동 가게 중 원탑입니다. 소 사이즈만 먹고 나온 게 너무 아쉬울 정도입니다. 여행 일정에 여유가 있다면 꼭 가보길 추천합니다.\n\n![미야가와 제면소 가케 우동 다 먹음](./images/2024-03-takamatsu/20240323_130128_Miyagawa_KakeUdon_EatAll.webp)\n\n그 다음에 [나가타 in 카노카](https://maps.app.goo.gl/hfmair1quiW3ztw57)라는 우동 가게에 갔습니다. 도착하고 보니 엄청난 대기행렬... 😵 40분 가량 기다린 후 가마아게 우동을 주문했습니다. 가모 우동 가게에서 못 먹고 나온 몫까지 더해서 소 사이즈가 아닌 중 사이즈를 주문했습니다.\n\n![나가타 in 카노카 입구](./images/2024-03-takamatsu/20240323_143135_NagataInKanoka_Entry.webp)\n\n![나가타 in 카노카 가마아게 우동](./images/2024-03-takamatsu/20240323_142116_NagataInKanoka_KamaageUdon.webp)\n\n![나가타 in 카노카 가마아게 우동 먹는 중](./images/2024-03-takamatsu/20240323_143158_NagataInKanoka_KamaageUdon_Eating.webp)\n\n가마아게 우동을 먹다가 치명적인 단점을 느꼈는데, 그건 바로 먹을수록 츠유가 묽어진다는 점입니다. 이게 별로라면 자루 우동을 먹으면 되지만, 가마아게 우동은 따뜻하고 자루 우동은 차가운 우동이라 그냥 취향껏 먹으면 됩니다. 아니면 처음에 쯔유를 조금 부었다가 묽어지면 좀 더 붓는 방식으로 먹어도 되고요. 물론 이 집 우동이 맛없다는 건 아니고 쯔유가 정말 맛있었습니다. 쯔유가 묽어지면 홀짝홀짝 마셔보는 매력도 있구요.\n\n![나가타 in 카노카 가마아게 우동 다 먹음](./images/2024-03-takamatsu/20240323_142805_NagataInKanoka_KamaageUdon_EatAll.webp)\n\n이제 배도 적당히 채웠겠다 [고토히라 궁](https://maps.app.goo.gl/5GU1VYVzeBkJFqnEA)으로 갑니다. 고토히라 궁은 해발 500 미터 가량에 있고 785개의 계단을 오르면 갈 수 있습니다. 계단을 오르기 전 지팡이를 빌려 쓸 수도 있지만 전 그냥 쭉 올라가봤습니다.\n\n<div style=\"text-align: center;\">\n   <iframe width=\"315\" height=\"560\" src=\"https://youtube.com/embed/v6OLhYZIS6U\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n</div>\n\n![고토히라 궁 계단](./images/2024-03-takamatsu/20240323_155011_Kotohira_Stairs.webp)\n\n![고토히라 궁 올라가는 계단](./images/2024-03-takamatsu/20240323_160031_Kotohira_ClimbUp.webp)\n\n드더이(?) 올라온 고토히라 궁. 비오는 날에 굳이 찾아올만한지 의문이 듭니다.\n\n![고토히라 궁](./images/2024-03-takamatsu/20240323_160932_Kotohira.webp)\n\n전망대에서 본 다카마쓰 풍경. 원래 여기서 다카마쓰 전망을 감상하려 했지만 안개가 자욱히 끼는 바람에 망했습니다. 매일 비가 오니 앞으로 어딜 여행가든 이런 풍경만을 볼 겁니다. 😭\n\n![고토히라 궁 전망대](./images/2024-03-takamatsu/20240323_162937_Kotohira_Observatory.webp)\n\n에마(소원 등을 적어넣는 나무판)가 있군요. 합격, 결혼 등등... 에마를 보면서 사람들이 어떤 소원들을 적었는지 보는 재미를 느낄 수 있습니다.\n\n![고토히라 궁 에마](./images/2024-03-takamatsu/20240323_162345_Kotohira_Ema.webp)\n\n저도 처음으로 에마를 남겨봅니다. 아무래도 돈에 미친 놈인듯... 🤦\n\n![고토히라 궁에 남기고 온 에마](./images/2024-03-takamatsu/20240323_163905_Kotohira_Ema_Write.webp)\n\n하산(?) 하다가 아이스크림에 간장을 뿌려 팔길래 궁금해서 사먹어 봤습니다. 가마타마 소프트 아이스크림이라는 건데 한 입 먹어보면 웃음이 절로 나옵니다. 정말... 아이스크림에 간장 뿌린 맛입니다. 다음 번엔 사먹지 않을 듯한데, 맛이 없어서 그런 게 아니라 한 번 쯤은 색다르고 오묘한 맛을 경험해봐야 하지 않겠어요...? ☺️\n\n![가마타마 소프트 아이스크림](./images/2024-03-takamatsu/20240323_170414_KamatamaSoftIceCream.webp)\n\n날씨가 맑았으면 석양 시간에 맞춰 [치치부가하마](https://maps.app.goo.gl/ATM2ukfFsmtQqaqe8)에 가려고 했습니다. 여긴 바닷물 웅덩이가 거울처럼 비치는 곳인데요. 비 오는 날엔 갈 필요가 전혀 없기 때문에 깔끔히 포기했습니다. 이런 18... 😡\n\n다카마쓰 역으로 돌아왔습니다. 라이트 모드가 다크 모드로 바꼈습니다(?)\n\n![밤에 촬영한 다카마쓰 역](./images/2024-03-takamatsu/20240323_184710_TakamatsuStation_Dark.webp)\n\n(결국 못 갔지만) 며칠 후에 갈 예정인 쇼도시마 페리 시간표를 얻으러 다카마쓰 항에 갔는데 장난을 잘 치는 타카기 양 영화 포스터가 붙어있군요. 2024년 5월 31일 개봉 예정이라니... 원작인 만화책 주인공들은 중학생인데 왜 영화 주인공들은 성인일까요... 설마 중학생...? 🤔🤔🤔\n\n![장난을 잘 치는 타카기 양 영화 포스터](./images/2024-03-takamatsu/20240323_185900_Takagisan_Poster.webp)\n\n우동을 연달아 먹었으니 이번엔 초밥을 먹으러 [세토노마츠리 스시 효고마치](https://maps.app.goo.gl/ho9EZKTgwNiuonKKA)라는 식당에 갔습니다. 초밥 기본세트와 모듬회 그리고 초밥 단품 몇가지와 사케를 주문해서 먹었습니다.\n\n![세토노마츠리 스시 효고마치](./images/2024-03-takamatsu/20240323_195340_SetonomatsuriSushiHyogomachi_Entry.webp)\n\n![세토노마츠리 스시 효고마치 초밥 기본세트](./images/2024-03-takamatsu/20240323_200920_SetonomatsuriSushiHyogomachi_DefaultSet.webp)\n\n![세토노마츠리 스시 효고마치 모듬회](./images/2024-03-takamatsu/20240323_201332_SetonomatsuriSushiHyogomachi_Sasimi.webp)\n\n[에노시마](https://maps.app.goo.gl/JKcL7oZdmku3t2es5)에 다시 가보기 전까진 나마시라스(생멸치)를 먹어볼 기회가 없을 줄 알았는데 여기서 우연히 맛보게 되어 좋았습니다!\n\n![](./images/2024-03-takamatsu/20240323_202509_SetonomatsuriSushiHyogomachi_NamaShiasuSushi.webp)\n\n![세토노마츠리 스시 효고마치 다 먹음](./images/2024-03-takamatsu/20240323_203330_SetonomatsuriSushiHyogomachi_EatlAll.webp)\n### 2024-03-24(일): 다카마쓰 동쪽 여행\n\n여행경로: [우동 세토바레](https://maps.app.goo.gl/BQkWbCTjKgpHZtV57) → [우동 야마다야 본점](https://maps.app.goo.gl/ExpJcc1kcTLPDTJV8) → [야시마](https://maps.app.goo.gl/NSPD8Ko61nMvGSxh7) → [와라야](https://maps.app.goo.gl/DMiRc5oFJkASztgu9) → [란마루](https://maps.app.goo.gl/k92dMuTdY6e36YFL8)\n\n이 날은 어제보다 비가 더 많이 왔습니다. 가끔 소나기가 오기도 했구요. 어제도 비가 와서 빡쳤는데 이날은 비가 더 많이 오니 하아... 그래도 숙소에서 뒹굴수만은 없지 않겠어요...? 먹으러 가즈아.\n\n다카마쓰 동쪽에 있는 우동집에 가려는 중에 만난 [가와라마치 역](https://maps.app.goo.gl/iM4hZ2SSexwukdYk7) 내 피아노. 10시 30분 ~ 19시 30분 사이에 연주할 수 있습니다. 아직 시간이 안 돼서 우동 먹으러 다녀오고나서 연주해보겠습니다!\n\n![가와라마치 역 피아노](./images/2024-03-takamatsu/20240324_092214_KawaramachiStation_Piano.webp)\n\n아니 전철을 이렇게 타는 사람이 있다고...? 😳\n\n![전철을 무리해서 타지 마세요.](./images/2024-03-takamatsu/20240324_173450_Kotoden_DontCrossTooHard.webp)\n\n이날 처음 가본 우동집은 [우동 세토바레](https://maps.app.goo.gl/BQkWbCTjKgpHZtV57)입니다. 여긴 대기줄이 생각보다 길지 않아 보였지만 회전율이 낮아 1시간을 넘게 기다렸습니다. 이날 온도가 10~12도 가량 됐었는데도 생각보다 되게 추웠습니다. 🥶\n\n![우동 세토바레 입구](./images/2024-03-takamatsu/20240324_101021_UdonSetobare_Waiting.webp)\n\n오랫동안 기다린 후 따뜻한 생간장(生じょうゆ) 우동을 주문해서 먹었습니다.\n\n![우동 세토바레 따뜻한 생간장 우동](./images/2024-03-takamatsu/20240324_112147_UdonSetobare_ShouUdon.webp)\n\n![우동 세토바레 따뜻한 생간장 우동 먹는 중](./images/2024-03-takamatsu/20240324_113334_UdonSetobare_ShouUdon_Eating.webp)\n\n맛은... 1시간 이상 기다린 고생을 보상받는 맛이었습니다. 적당히 짭조름한 게 후루룩 넘어가는 맛이었습니다.\n\n![우동 세토바레 따뜻한 생간장 우동 다 먹음](./images/2024-03-takamatsu/20240324_113034_UdonSetobare_ShouUdon_EatAll.webp)\n\n다음 우동집으로 [우동 야마다야 본점](https://maps.app.goo.gl/ExpJcc1kcTLPDTJV8)에 갔습니다. 여기도 대기줄이 있었지만 가게가 엄청 커서 그런지 회전율이 빨랐습니다. 기다리면서 가게 내부를 구경해볼 수 있어서 직전에 다녀왔던 우동집에서 대기하는 것보다 덜 지루했습니다.\n\n![우동 야마다야 본점 입구](./images/2024-03-takamatsu/20240324_115718_UdonYamadaya_Entry.webp)\n\n여긴 사이즈가 정해진 단품 메뉴만 파는 것 같습니다. 소 사이즈 우동 메뉴는 없는 듯합니다. 30분 가량 대기한 후 따뜻한 가마 붓카케 우동을 주문해서 먹었습니다.\n\n![우동 야마다야 본점 가마 붓카케 우동](./images/2024-03-takamatsu/20240324_123606_UdonYamadaya_KamaButkakeUdon.webp)\n\n![우동 야마다야 본점 가마 붓카케 우동 먹는 중](./images/2024-03-takamatsu/20240324_124711_UdonYamadaya_KamaButkakeUdon_Eating.webp)\n\n짜지 않고 부드러운 목넘김이 일품이었습니다!\n\n![우동 야마다야 본점 가마 붓카케 우동 다 먹음](./images/2024-03-takamatsu/20240324_124654_UdonYamadaya_KamaButkakeUdon_EatAll.webp)\n\n이제 [야시마](https://maps.app.goo.gl/NSPD8Ko61nMvGSxh7)라는 곳으로 갑니다. 사실 여기도 다카마쓰 전망을 보고 싶어 가본 곳인데 비가 오니 전망이 어떨지 불 보듯 뻔합니다. 아니, 비가 오니 물 보듯 뻔한 건가...? 🤣\n\n[고토덴야시마 역](https://maps.app.goo.gl/HKr8hptmGyGyS4We6)에 내려 야시마로 향하는 버스를 탑니다. 버스는 1~2시간에 1대 꼴로 도착합니다.\n\n![고토덴야시마 역 앞쪽](./images/2024-03-takamatsu/20240324_133346_KotodenYashimaStation_BusStation.webp)\n\n버스를 타고 야시마에 도착하니 안개가 자욱했습니다. 버스에 내리자마자 데자뷰가 엄습했습니다. 작년에 하코네에 갔을 때도 딱 이런 풍경이었는데... PTSD 오려 합니다. 🫠\n\n![야시마 버스](./images/2024-03-takamatsu/20240324_141155_YashimaBus.webp)\n\nPTSD를 극복(?)하고 길대로 걸어가니 절이 나옵니다.\n\n![야시마지](./images/2024-03-takamatsu/20240324_141731_Yashimaji_Entry.webp)\n\n절 안에 빨간 도리이 같은 게 연달아 있는데 들어가보니 너구리를 모시는 듯하군요. \n\n![야시마이나리](./images/2024-03-takamatsu/20240324_142214_Yashimainari.webp)\n\n![야시마이나리](./images/2024-03-takamatsu/20240324_142302_Yashimainari.webp)\n\n여긴 에마 값이 고토히라 궁의 반값이여서 여기서도 에마를 구입해서 달아봤습니다. 이번 에마에도 돈과 관련된 걸 적었는데요. 잘난 게 없으니 돈이라도 많아야하지 않겠습니까... 🙏🙏🙏\n\n![야시마지 에마](./images/2024-03-takamatsu/20240324_151202_Yashimaji_Ema.webp)\n\n좀 더 길을 나서니 야시마루라는 곳에 도착했습니다. 곡선 구조로 된 건물 안엔 전시관과 카페 등이 있습니다.\n\n![야시마루](./images/2024-03-takamatsu/20240324_142859_Yashimaru.webp)\n\n여기서 좀 쉬다가 다카마쓰 전망을 봤는데 역시나 예상했던 그대로입니다. 왜 내가 여행 갈 때만 전망이 이 따위지... 2차 PTSD가 와버렸습니다. 😫\n\n![야시마루 전망대](./images/2024-03-takamatsu/20240324_143110_Yashimaru.webp)\n\n이제 다시 되돌아가야 할 시간. 되돌아가면서 수족관이 있길래 가볼까 했지만 입장료가 비싼 것 같아 가지 않았습니다. 그런데 돈이야 벌면 그만인데 돈이 아까워 경험을 해보지 못했다는 생각이 들어 후회 중입니다. 이런 고민을 안 할 만큼 돈이 많았으면 하는 생각도 듭니다. 🤑\n\n![야시마 수족관](./images/2024-03-takamatsu/20240324_144324_YashimaAquarium.webp)\n\n야시마에서 내려와서 [와라야](https://maps.app.goo.gl/DMiRc5oFJkASztgu9)라는 우동 가게에 갔습니다. 내부에 손님이 제법 있었지만 대기줄은 없어서 금방 주문할 수 있었습니다. 자루 우동을 주문해봤습니다.\n\n![와라야 입구](./images/2024-03-takamatsu/20240324_155219_Waraya_Entry.webp)\n\n![와라야 자루 우동](./images/2024-03-takamatsu/20240324_160734_Waraya_ZaruUdon.webp)\n\n![와라야 자루 우동 먹는 중](./images/2024-03-takamatsu/20240324_161836_Waraya_ZaruUdon_Eating.webp)\n\n오호... 면을 씹어보니 마치 떡처럼 느껴집니다. 빠르게 먹다 보면 이빨이 살짝 아플 수도 있을 것 같습니다. 츠유는 냄새가 살짝 비릿하면서도 맛은 비리지가 않아요. 자루 우동 맛보기 괜찮은 곳입니다!\n\n![와라야 자루 우동 다 먹음](./images/2024-03-takamatsu/20240324_161724_Waraya_ZaruUdon_EatlAll.webp)\n\n와라야 우동 가게 옆엔 [시코쿠무라](https://maps.app.goo.gl/xVo7rp7PePGNKkn9A)라는 민가 박물관이 있습니다. 우리나라의 한국민속촌...? 과 비슷한 곳이라 보면 될지 모르겠습니다. 입장료가 꽤 비싼 편임에도(1,600엔) 한번 가보려 했지만 비가 너무 많이 오고 너무 추워서 포기하고 다카마쓰 시내로 돌아갔습니다. 🥶 \n\n오전에 연주해보지 못했던 피아노를 연주하러 가와라마치 역으로 갔습니다. 요즘 연습 중인 프란츠 리스트의 사랑의 꿈 3번을 연주해봤는데 아직 암보를 못해서 망했고, 쇼팽 녹턴 2번을 그나마 좀 연주하고 왔습니다.\n\n![가와라마치 역 피아노](./images/2024-03-takamatsu/20240324_170350_KawaramachiStation_Piano.webp)\n\n<div style=\"text-align: center;\">\n   <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/vEDlN1S-s9g?si=gJQ5IWvLdDo4tvYu\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n</div>\n\n\n이제 저녁을 먹으러 갑니다. 뭘 먹을까 고민하다가... 며칠 전 먹었던 호네츠키도리가 너무 짜서 다른 식당에서도 파는 호네츠키도리도 짠지 궁금해서 [란마루](https://maps.app.goo.gl/k92dMuTdY6e36YFL8)라는 식당에 갔습니다. 여기도 대기줄이 있어서 1시간 좀 안되게 기다렸습니다.\n\n들어가자마자 직원 분이 한국인이냐고 물었습니다. 그렇다고 하니 영어 메뉴를 주셨습니다. 네이티브 코리안은 말하지 않아도 티가 나는 건가 싶던 찰나에 대기 명단에 적었던 이름을 보고 추측한 게 아닐까 싶기도 합니다.\n\n여기서 오야도리와 생맥주 그리고 사누키요이마이라는 사케 한 잔을 먹었습니다.\n\n![란마루 입구](./images/2024-03-takamatsu/20240324_192917_Ranmaru_Entry.webp)\n\n![란마루 오야도리](./images/2024-03-takamatsu/20240324_203052_Ranmaru_Oyadori.webp)\n\n![란마루 오야도리 먹는 중](./images/2024-03-takamatsu/20240324_204224_Ranmaru_Oyadori_Eating.webp)\n\n무엇보다 준마이 사누키요이마이라는 사케 맛이 정말 압권이었습니다. 이 사케는 소주보다 도수는 약하면서 쓴 맛이 약하고 달달합니다. 그냥 맛있어요. 생맥주 다 마신후 이 사케를 마시니 기분이 그렇게 좋을 수 없었습니다. 한 잔 더 마실 걸. 껄껄껄... 기회가 되면 이 사케를 꼭 구해보고 싶지만 온라인으로 구매하는 건 불가한 것 같고 사누키(다카마쓰의 옛 지명)라는 이름이 붙은 걸 보면 혹시 이 동네에서만 맛볼 수 있는 게 아닌가 싶습니다. 술이 맛있다고 한 적은 아마 처음인 것 같습니다. 🤤\n\n![준마이 사누키요이마이](./images/2024-03-takamatsu/20240324_202120_Raumaru_Sanukiyoimai.webp)\n\n이틀 전 먹었던 호네츠키도리는 너무 짜서 먹기 힘들었지만 여기 호네츠키도리는 덜 짜고 훨씬 맛있었습니다. 호네츠키도리가 원래 이렇게 짠가에 대한 오해가 풀렸습니다.\n\n![란마루 오야도리 다 먹음](./images/2024-03-takamatsu/20240324_204856_Ranmaru_Oyadori_EatAll.webp)\n\n### 2024-03-25(월): 쇼도시마 여행 취소 후 다카마쓰 시내 여행\n\n여행경로: [마츠시타 제면소](https://maps.app.goo.gl/1SkaCreZ6jfnoR1U6) → [사누키우동 우에하라야 본점](https://maps.app.goo.gl/9LgTwwAd1pgDbU8P9) → [카페 미니](https://maps.app.goo.gl/odxD8gtStkHgjo9j6) → [우동 바카이치다이](https://maps.app.goo.gl/9ox4pzzM8HXLhFUw9) → [테우치우동 츠루마루](https://maps.app.goo.gl/TJQUA62GEkXZpYjh9)(실패) → [고에몬](https://maps.app.goo.gl/kWEGV29dFpPVxFBW9) → [교자야](https://maps.app.goo.gl/DaBhKsjhPV1us9dL8)\n\n이날도 어김없이 비가 왔습니다. 새벽 일찍 다카마쓰 항에서 페리를 타고 쇼도시마에 가려 했지만 마음을 접었습니다. 쇼도시마가 제법 큰 섬이기도 한데 비가 오면 다녀오기 쉽지 않을 것 같았고 비가 많이와서 페리가 결항되면 섬에서 못 나올 수 있지 않을까 하는 생각이 들었기 때문입니다.\n\n그런데 쇼도시마에 들어올 땐 마음대로였겠지만 나갈 땐 아닌 경우(?)는 없었을 것 같습니다. 아침에 비가 제법 왔지만 점점 비가 그쳤기 때문입니다. 낮 12시에라도 쇼도시마에 갈까말까 정말 많은 고민을 하다가 결국 가지 않은 걸 크게 후회하고 있습니다. 😰\n\n아침에 쇼도시마를 갈지 말지 고민하며 시간을 허비하다가 [마츠시타 제면소](https://maps.app.goo.gl/1SkaCreZ6jfnoR1U6)라는 우동 가게에 갔습니다.\n\n![마츠시타 제면소 입구](./images/2024-03-takamatsu/20240325_103749_Matsushita_Entry.webp)\n\n![마츠시타 제면소 가케 우동](./images/2024-03-takamatsu/20240325_103808_Matsushita_KakeUdon.webp)\n\n![마츠시타 제면소 가케 우동 먹는 중](./images/2024-03-takamatsu/20240325_104214_Matsushita_KakeUdon_Eating.webp)\n\n여긴 드라마 [고독한 미식가](https://youtu.be/qck7tqhLc5Q?si=msQEQ4lYkwhTL77A)에서 고로 상이 우동을 먹으러 갔던 가게인데요. 가케 우동을 먹어봤는데 고로 상이 왜 만족했는지 알 것 같은 맛이었습니다.\n\n![마츠시타 제면소 가케 우동 다 먹음](./images/2024-03-takamatsu/20240325_104713_Matsushita_KakeUdon_EatAll.webp)\n\n그 다음 [사누키우동 우에하라야 본점](https://maps.app.goo.gl/9LgTwwAd1pgDbU8P9)에서도 가케우동을 먹었습니다.\n\n![사누키우동 우에하라야 본점](./images/2024-03-takamatsu/20240325_120241_Ueharaya_Entry.webp)\n\n![사누키우동 우에하라야 본점 가케 우동](./images/2024-03-takamatsu/20240325_115406_Ueharaya_KakeUdon.webp)\n\n![사누키우동 우에하라야 본점 가케 우동 먹는 중](./images/2024-03-takamatsu/20240325_115445_Ueharaya_KakeUdon_Eating.webp)\n\n평범한 가케 우동 맛인 듯한데, 타마네기라는 튀김이 달달하니 특히나 맛있었습니다.\n\n![사누키우동 우에하라야 본점 가케 우동 다 먹음](./images/2024-03-takamatsu/20240325_120052_Ueharaya_KakeUdon_EatlAll.webp)\n\n아직까지도 쇼도시마에 갈지말지 망설이며 다카마쓰 항에 갔습니다. 12시 45분에 쇼도시마로 출항하는 페리가 정착해있네요.\n\n* 지금 가봤자 몇 시간 있지 못할텐데 \n* 혹시 저녁에 비 많이 오면 섬에 갖히는 거 아냐...?\n\n이러면서 갈지말지 고민하다가 안 갔는데 땅을 치고 후회 중입니다... 🤦 이제부터 계획상 쇼도시마에서 시간을 보내야 했지만 그러지 못했으니 다카마쓰 시내를 거닐며 못 가본 식당을 가보기로 했습니다.\n\n![다카마쓰 항 쇼도시마 페리](./images/2024-03-takamatsu/20240325_124450_ShodoshimaFerry.webp)\n\n[카페 미니](https://maps.app.goo.gl/odxD8gtStkHgjo9j6) 입니다. 간판을 보면 한자 숫자 32(三二)라고 써있는 것 같지만 가타카나 미니(ミニ) 입니다. 😅\n\n![카페 미니 입구](./images/2024-03-takamatsu/20240325_141302_CafeMini_Entry.webp)\n\n여긴 주인 아주머니께서 직접 얼음을 깨서 아이스 커피를 만들어 주시는 게 시그니처인데요. 옆 테이블 손님에게 아이스 커피를 만드시는 걸 보니 우유를 따라 주시길래 유당불내증이 있는 저는 핫 커피를 주문했습니다.\n\n![카페 미니 내부](./images/2024-03-takamatsu/20240325_135040_CafeMini_Internal.webp)\n\n핫 커피는 우유를 따로 따라먹을 수 있게 해줬는데 사실 아이스 커피도 얘기하면 따로 주실 겁니다.\n\n![카페 미니 핫 커피](./images/2024-03-takamatsu/20240325_140046_CafeMini_HotCoffee.webp)\n\n주인 아주머니께서 노련하고 입담이 있으시던데 저는 일본어를 잘 못하기에 커피를 마시며 대화에 끼지 못해 아쉽습니다.\n\n![카페 미니 핫 커피 다 마심](./images/2024-03-takamatsu/20240325_141003_CafeMini_HotCoffee_DrinkAll.webp)\n\n[우동 바카이치다이](https://maps.app.goo.gl/9ox4pzzM8HXLhFUw9)입니다. 가마버터 우동을 주문해서 먹었습니다.\n\n![우동 바카이치다이 입구](./images/2024-03-takamatsu/20240325_172149_Bakaichidai_Entry.webp)\n\n![우동 바카이치다이 가마버터 우동](./images/2024-03-takamatsu/20240325_174335_Bakaichidai_KamaButterUdon.webp)\n\n뜨거운 우동 면에 날계란을 넣어 쓱쓱...\n\n![우동 바카이치다이 가마버터 우동 먹는 중](./images/2024-03-takamatsu/20240325_174424_Bakaichidai_KamaButterUdon_Eating.webp)\n\n버터가 계란의 맛을 증폭시켜주는 듯합니다. 쯔유를 실수로 안 넣고 반쯤 먹었는데도 맛있었습니다. 쯔유를 넣고 먹으니 더 맛있구요. 가마타마 우동을 먹으러 간다면 이곳을 우선 추천합니다!\n\n![우동 바카이치다이 가마버터 우동 다 먹음](./images/2024-03-takamatsu/20240325_175302_Bakaichidai_KamaButterUdon_EatAll.webp)\n\n전철 타고 이동하다가 본 포스터. 봄 일루미네이션이라... 일주일만 늦게 왔었더라면... 😭\n\n![봄 일루미네이션 포스터](./images/2024-03-takamatsu/20240325_184857_SpringIllumination.webp)\n\n저녁이 되고 [테우치우동 츠루마루](https://maps.app.goo.gl/TJQUA62GEkXZpYjh9)라는 식당에서 카레 우동을 먹어보려 했지만 대기줄이 엄청났습니다. 1시간 이상 기다려야 할 것 같아서 [고에몬](https://maps.app.goo.gl/kWEGV29dFpPVxFBW9)이라는 식당에서 카레 우동을 먹어봤습니다.\n\n![고에몬 입구](./images/2024-03-takamatsu/20240325_203735_Goemon_Entry.webp)\n\n![고에몬 카레 우동](./images/2024-03-takamatsu/20240325_205412_Goemon_CurryUdon.webp)\n\n![고에몬 카레 우동 먹는 중](./images/2024-03-takamatsu/20240325_205525_Goemon_CurryUdon_Eating.webp)\n\n맛은... 카레 우동 맛. 제가 카레를 좋아하는 편은 아니어서 맛이 특별하다고 느끼진 못했습니다. 그리고 해장용으로 카레 우동을 먹는다고 들었는데 먹어보니 글쎄... 🤔 이걸로 정말 해장이 될 것 같은 느낌이 들지 않아요. 안 취해서 그런가(?)\n\n![고에몬 카레 우동 다 먹음](./images/2024-03-takamatsu/20240325_210328_Goemon_CurryUdon_EatAll.webp)\n\n이번 다카마쓰 여행 중 마지막으로 간 식당은 [교자야](https://maps.app.goo.gl/DaBhKsjhPV1us9dL8) 입니다. 사실 카레 우동은 해장용으로 많이들 먹는다길래 이 식당에서 술 좀 마신 후 카레 우동을 먹으러 가려 했었지만 이 식당에 사람이 꽉 차있어서 어쩔 수 없이 카레 우동을 먼저 먹으러 갔습니다.\n\n이 식당은 교자를 주문하면 교자를 바로 빚어 튀겨줍니다. 맛은... 적당한 겉바. 그리고 속촉!\n\n![교자야 입구](./images/2024-03-takamatsu/20240325_203006_Kyozaya_Entry.webp)\n\n![교자야 교자](./images/2024-03-takamatsu/20240325_211308_Kyozaya_Kyoza.webp)\n\n![교자야 교자 먹는 중](./images/2024-03-takamatsu/20240325_211406_Kyozaya_Kyoza_Eating.webp)\n\n대략 천 엔으로 혼술이 가능하다니! 우리 동네에도 이런 가게가 있었으면...\n\n![교자야 교자 다 먹음](./images/2024-03-takamatsu/20240325_211954_Kyozaya_Kyoza_EatAll.webp)\n\n### 2024-03-26(화): 귀국일\n\n아쉽게도 다카마쓰에서 인천공항으로 떠나는 귀국 비행기는 오전에만 있습니다. 오후에도 있으면 오전에 좀 더 여행을 즐길 수 있을텐데... 아쉽습니다.\n\n다카마쓰 역에 가서 다카마쓰 공항행 버스를 탔습니다. 탑승 티켓은 어디서 사는지 몰라서 스이카를 사용했습니다. 오전 8시쯤 갔는데도 사람들이 제법 많은 걸 보니 가능하면 기점(첫 정류장)에서 버스를 타는 게 좋을 듯합니다.\n\n다카마쓰 공항 2층에 우동 국물이 나오는 수도꼭지가 있군요. 맛은 그럭저럭인데...\n\n![다카마쓰 공항 2층 우동 수도꼭지](./images/2024-03-takamatsu/20240326_092110_TakamatsuAirport_UdonFaucet.webp)\n\n종이컵에 우동 국물을 따라보니 건강검진 받으러 가서 소변검사 하는 것 같군요. 😅\n\n![다카마쓰 공항 2층 우동 수도꼭지](./images/2024-03-takamatsu/20240326_092539_TakamatsuAirport_UdonFaucet.webp)\n\n공항 3층엔 전망대가 있습니다. 여행 마지막 날조차 안개 낀 전망을 보게 되다니... 3차 PTSD가 올 것 같아 금방 내려왔습니다.\n\n![다카마쓰 공항 3층 전망대](./images/2024-03-takamatsu/20240326_093134_TakamatsuAirport_3rdFloorObservationDeck.webp)\n\n다시 일상으로 복귀. 다음번 여행에도 비가 많이 오겠죠...? 🤦\n\n![귀국 비행기](./images/2024-03-takamatsu/20240326_112151_TakamatsuAirport_BoardingWay.webp)\n"},{"excerpt":"아래 사이트 보고 배운 파인 스크립트 정리 글(정리 중...) https://wikidocs.net/book/8535 https://wikidocs.net/book/9388 🔖 목차 🔖 목차 🤔 파인 스크립트란? 🥡 변수 기본 변수 내장 변수 날짜와 시간 네임스페이스 📊 자료 구조 시리즈(Series) 배열(Array) ❓ 조건문 🔁 반복문 🏹 함수 주요…","fields":{"slug":"/coin/pine-script-summary/"},"frontmatter":{"date":"February 19, 2024","title":"트레이딩뷰 파인 스크립트 간단 정리","description":"트레이딩뷰 파인 스크립트 간단 정리","tags":["bitcoin"],"series":"비트코인","previewImage":"bitcoin.jpg","isPrivate":null},"rawMarkdownBody":"\n![Pine script](./images/pine-script.webp)\n\n아래 사이트 보고 배운 파인 스크립트 정리 글(정리 중...)\n\n* https://wikidocs.net/book/8535\n* https://wikidocs.net/book/9388\n\n\n## 🔖 목차\n\n- [🔖 목차](#-목차)\n- [🤔 파인 스크립트란?](#-파인-스크립트란)\n- [🥡 변수](#-변수)\n  - [기본 변수](#기본-변수)\n  - [내장 변수](#내장-변수)\n  - [날짜와 시간](#날짜와-시간)\n  - [네임스페이스](#네임스페이스)\n- [📊 자료 구조](#-자료-구조)\n  - [시리즈(Series)](#시리즈series)\n  - [배열(Array)](#배열array)\n- [❓ 조건문](#-조건문)\n- [🔁 반복문](#-반복문)\n- [🏹 함수](#-함수)\n  - [주요 내장 함수](#주요-내장-함수)\n- [🎯 전략](#-전략)\n\n\n## 🤔 파인 스크립트란?\n\n파인 스크립트(Pine Script)는 트레이딩뷰에 사이트나 앱 내에서 사용하는 프로그래밍 언어. 주식, 코인 차트 등에 사용하는 지표나 전략을 개발하기 위해 사용함.\n\n또한 여러 가지 보조지표 조건에 부합하는 알림 등을 설정하려면 파인 스크립트를 사용해야 함. 예를 들어 RSI 과매도인 경우와 거래량이 평균 대비 터진 경우 전자와 후자 각각에 대해 알림을 설정할 순 있지만, 두 조건 모두 만족할 때 알림을 보내도록 설정할 수 없음. 이 때 파인 스크립트를 사용해야 함.\n\n파인 스크립트는 차트의 각 바(타임 프레임에서 한 개의 데이터. 막대 또는 캔들이라고 불러도 될 듯)마다 실행됨.\n\n```js\n//@version=5\nindicator(\"My script\")\n\nhline(50000) // 50000 값으로 가로선 그리기\n```\n\n\n## 🥡 변수\n\n### 기본 변수\n\n파인 스크립트의 기본 데이터 타입은 정수, 실수, 문자열임.\n\n* 정수(int): -3, -2, -1, 0, 1, 2, 3, ...\n* 실수(float): 0.02, 0.03, 3.14, ...\n* 문자열(string): 'pine', \"script\", ...\n\n변수 선언 시 변수명 앞에 데이터 타입을 명시하지 않고 그냥 선언하면 됨. var나 varip 키워드를 사용할 수 있는데 차이점은 다음과 같음. **(사실 뭔 차인지 잘 이해가 안 됨 😵‍💫)**\n\n* 키워드 미사용: 변수가 각 바에서 초기화되고, 이전 바의 값이 유지되지 않음\n* var: 첫번째 바에서만 초기화되고, 그 후 각 바에서 변수의 값은 이전 바의 값에 따라 업데이트됨\n* varip: var와 유사하지만, 변수는 이전 바의 값과 함께 초기화됨. 이를 통해 이전 바에서의 값이 계산에 사용됨.\n\n```js\nnum1 = 1\n```\n\n이미 선언된 변수 값을 변경하려면 `:=` 기호를 사용해야 함.\n\n```js\nnum1 = 1\nnum1 := 2\n```\n\n사칙연산은 일반 프로그래밍 언어와 비슷함.\n\n```js\n//@version=5\nindicator(\"비트코인 원화 기준 가격\")\n\nbtc_usdt = 50000\nusd_krw = 1350\nbtc_krw = btc_usdt * usd_krw // 사칙연산(+, -, *, /) 가능\nhline(total)\n```\n\n파인 스크립트에서 차트에 문자열을 출력하려면 `plotshape()` 함수를 사용하여 차트에 출력하거나\n\n```js\n//@version=5\nindicator(\"문자열 차트에 출력하기\")\n\nlang_a = \"Pine\"\nlang_b = \"Script\"\nlang = lang_a + \" \" + lang_b // 문자열 결합도 + 연산자 사용\nplotshape(barstate.islast, text=lang) // 현재 바의 마지막인지에 대한 데이터\n```\n\nlog 네임스페이스의 info, warning, error 함수를 사용하여 파인 로그 화면에 출력하면 됨.\n\n```js\n//@version=5\nindicator(\"로그 출력하기\")\n\ntext = \"Pine Script\"\nlog.info(\"{0}\", text)\n```\n\n### 내장 변수\n\n내장 변수는 파인 스크립트가 기본적으로 제공하는 변수.\n\n* open: 현재 바의 시가\n* high: 현재 바의 고가\n* low: 현재 바의 저가\n* close: 현재 바의 종가\n* volume: 현재 바의 거래량\n\nbar_index 내장 변수는 차트의 각 캔들에 대한 인덱스임. 첫 번째 캔들의 bar_index 값은 0이고 각 캔들마다 값이 1씩 증가함. 가장 최근 캔들의 bar_index 값은 최대값임.\n\n### 날짜와 시간\n\n날짜와 시간을 사용하려면 timestamp를 사용하면 됨.\n\n```js\n//@version=5\nindicator(\"My script\")\n\ncurrent_time = timestamp(\"UTC+9\", year, month, dayofmonth, hour, minute, second) // 현재 시간\nstart_time = timestamp(\"UTC+9\", 2024, 2, 18, 13, 0, 0)\nend_time = timestamp(\"UTC+9\", 2024, 2, 18, 14, 0, 0)\ntime_window = (time >= start_time and time < end_time) ? 1 : 0\n\nplot(time_window)\n```\n\n### 네임스페이스\n\n네임스페이스는 비슷한 성격의 변수나 함수를 모아놓은 것.\n\n```js\ncolor.red         // color 네임스페이스의 red 변수\nta.rsi(close, 14) // ta 네임스페이스의 rsi 함수\n```\n\n주요 네임스페이스는 다음과 같음.\n\n* color: red, green, blue 등\n* currency: KRW, JPY, USD 등\n* ta: sma(), rsi(), macd() 등\n* math: abs(), log(), max() 등\n\n## 📊 자료 구조\n\n### 시리즈(Series)\n\nSeries는 비슷한 성격의 여러 데이터(타임 프레임)을 모아놓은 자료구조. open, high, low, close, volume 등과 같은 내장 변수가 Series 타입임.\n\nSeries 간 사칙연산이 가능하며, 사칙연산 시 모든 타임 프레임 값이 계산됨.\n\n```js\n//@version=5\nindicator(\"캔들 몸통 크기 계산하기\")\n\ncandle_body = math.abs(open-close)\nplot(candle_body)\n```\n\nSeries의 특정 위치 값을 찾으려면 인덱스를 사용하면 됨. 예를 들어 `close[0]`은 현재 종가, `close[1]`은 현재 바로 직전의 종가임.\n\n```js\n//@version=5\nindicator(\"3일 이동평균선\")\n\nmy_ma3 = (close[2]+close[1]+close[0]) / 3 // ta.sma(close, 3)와 같음\nplot(my_ma3)\n```\n\n### 배열(Array)\n\n배열은 동일한 타입의 여러 데이터를 저장할 수 있는 자료구조.\n\n```js\n//@version=5\nindicator(\"배열 실습\")\n\na = array.new_int(3)  // 크기가 3인 int 타입 배열  생성\narray.set(a, 0, 1)    // 배열 a의 0번째 인덱스에 1 저장\narray.set(a, 1, 2)    // 배열 a의 1번째 인덱스에 2 저장\nval = array.get(a, 0) // 배열 a의 0번째 인덱스 값 꺼내오기\n```\n\nArray 관련 함수는 다음과 같음.\n\n* array.push(name, value): array의 마지막에 값 추가\n* array.pop(name): array의 마지막 부분의 원소 제거\n* array.unshift(name, value): array의 시작에 값 추가\n* array.shift(name): array의 시작 부분의 원소 제거\n* array.insert(name, index, value): array의 특정 위치에 값 추가\n* array.remove(name, index): array의 특정 위치의 원소 제거\n* array.clear(name): array의 모든 원소 제거\n\n\n## ❓ 조건문\n\n조건문은 `if, else if, else` 키워드를 사용함.\n\n```js\n//@version=5\nindicator(\"조건문 실습\")\n\nmy_color = color(na)\nif close < 50000\n    my_color := color.red\nelse if color < 51000\n    my_color := color.green\nelse\n    my_color := color.blue\nplot(close, color=my_color)\n```\n\n삼항 연산자는 if ~ else 조건문을 한 줄로 작성할 때 사용함. `조건문 ? 조건이 참일 때 실행할 코드 : 조건이 거짓일 때 실행할 코드` 형태로 사용하면 됨.\n\n```js\n//@version=5\n\nindicator(\"삼항 연산자 실습\")\nmy_color = (close > 50000) ? color.green : color.red\nplot(close, color=my_color)\n```\n\n논리 연산자는 여러 조건들을 묶을 때 사용함. `and`, `or` 또는 `not`을 사용함\n\n```js\n//@version=5\nindicator(\"도지 캔들 판별\")\n\ndogi_up = (open > close) and (open < close * 1.005)\ndogi_down = (open < close) and (open > close * 1.005)\ndogi = dogi_up or dogi_down\nplotshape(dogi, color=color.blue, style=shape.circle, location = location.abovebar)\n```\n\n```js\n//@version=5\nindicator(\"인걸핑 패턴 판별\", overlay = true)\n\n// 베어리시 인걸핑(현재 음봉의 몸통이 직전 양봉의 몸통보다 큰 패턴)\nbear_engulfing1 = (close[1] > open[1]) and (close < open)\nbear_engulfing2 = (open > close[1]) and (close < open[1])\nbear_engulfing = bear_engulfing1 and bear_engulfing2\nplotshape(bear_engulfing, text=\"bear engulfing\")\n\n// 불리시 인걸핑(현재 양봉의 몸통이 직전 음봉의 몸통보다 큰 패턴)\nbullish1 = (close[1] < open[1]) and (close > open)  // 전봉 음봉, 현재봉 양봉\nbullish2 = (open < close[1]) and (close > open[1])  // 몸통 비교\nbullish_engulfing = bullish1 and bullish2\n\nplotshape(bullish_engulfing, text=\"bullish engulfing\")\n```\n\n\n## 🔁 반복문\n\n파인 스크립트도 다른 프로그래밍 언어와 똑같이 for 또는 while 키워드로 반복문을 사용함. 하지만 반복문을 사용할 일이 많지 않음. Series 자료구조를 사용하면 각 캔들 데이터에 대한 반복 처리를 알아서 해주기 때문.\n\n```js\n//@version=5\nindicator(\"반복문\")\n\ndiff = high - low // 각 시간대별 캔들 데이터 처리를 알아서 반복 처리해줌\nplot(diff)\n```\n\nfor 문은 `for offset=시작인덱스 to 끝인덱스`로 사용함\n\n```js\n//@version=5\nindicator(\"3일 이동평균선을 for 문으로 만들어보기\")\n\nPERIOD = 3\nsum_close = 0.0\n\nfor offset=0 to PERIOD-1\n    sum_close := sum_close + close[offset]\n\nmy_ma3 = sum_close / PERIOD\nplot(my_ma3)\n```\n\nwhile 문은 while 키워드 뒤에 반복 실행할 조건을 명시해주면 됨.\n\n```js\n//@version=5\nindicator(\"3일 이동평균선을 while 문으로 만들어보기\")\n\nPERIOD = 3\nsum_close = 0.0\noffset = 0\n\nwhile offset < PERIOD\n    sum_close := sum_close + close[offset]\n    offset := offset + 1\n\nmy_ma3 = sum_close / PERIOD\nplot(my_ma3)\n```\n\n\n## 🏹 함수\n\n함수를 호출하는 건 다른 프로그래밍 언어와 큰 차이가 없음. 함수를 사용할 때 Ctrl + Space 키를 누르면 도움말을 볼 수 있음.\n\n```js\n//@version=5\nindicator(\"함수 호출\")\n\nrsi = ta.rsi(close, 14)\nplot(rsi)\n```\n\n함수 만드는 건 자바스크립트의 화살표 함수 만들듯이 하면 되는 듯.\n\n```js\n//@version=5\nindicator(\"매개변수 받지 않는 함수 만들기\", overlay = false)\n\nsma3() =>\n    temp = close[2] + close[1] + close[0]\n    temp / 3\n\nmy_sma3 = sma3()\nplot(my_sma3)\n```\n\n```js\n//@version=5\nindicator(\"매개변수 받는 함수 만들기\", overlay = false)\n\nsma3(a, b, c) =>\n    temp = a + b + c\n    temp / 3\n\nmy_sma3 = sma3(100, 200, 300)\nhline(my_sma3)\n```\n\n### 주요 내장 함수\n\n`hline()` 함수는 고정된 가격을 사용하여 가로선을 그림.\n\n```js\nhline(price=52000, title=\"가로선임\", color=color.blue, linestyle=hline.style_solid, linewidth=2)\n```\n\n`fill()` 함수는 두 개의 hline이나 plot 사이를 색으로 채우는 함수.\n\n```js\n//@version=5\nindicator(\"RSI 30~70 사이 색칠하기\")\n\n// RSI 그래프\nrsi = ta.rsi(close, 14)\nplot(rsi)\n\n// RSI 과매도, 과매수 표시\nh1 = hline(70)\nh2 = hline(30)\nfill(h1, h2, color=color.new(color.gray, 90)) // 투명도 90\n```\n\n`plot()` 함수는 Series 데이터를 차트로 그리는 함수.\n\n```js\nplot(series=차트로_그릴_데이터, color=색상, linewidth=라인_너비, style=플롯_스타일, offset=플롯을_왼쪽_또는_오른쪽으로_지정된_수_만큼_이동_후_그릴_때_사용)\n```\n\n`plotshape()` 함수는 Series bool 타입의 데이터를 차트에 표시하는 함수. 간단한 문자열을 표시할 때도 사용함.\n\n```js\ndata = close >= open\nplotshape(data, style=shape.xcross)             // 양봉에 X 표시\nplotshape(barstate.islast, text=\"Hello World!\") // 맨 마지막 봉에 Hello World! 표시\n```\n\n`plotchar()` 함수는 한 글자의 문자를 표시하는 함수.\n\n```js\ndata = close >= open\nplotchar(data, char=\"U\", location=location.abovebar)\n```\n\n`ta.crossover(ma1, ma2)` 함수는 ma1 이동평균선이 ma2 이동평균선을 상향 돌파 시 true를 반환하는 함수. ta.crossunder(ma1, ma2)` 함수는 이와 반대로 하향 돌파 시 true를 반환하는 함수.\n\n```js\n//@version=5\nindicator(\"My script\", overlay = true)\n\nsma5 = ta.sma(close, 5)\nsma20 = ta.sma(close, 20)\nplot(sma5, color = color.red)\nplot(sma20, color = color.blue)\n\ncrossover = ta.crossover(sma5, sma20)\ncrossunder = ta.crossunder(sma5, sma20)\nplotshape(crossover, style=shape.circle, location=location.abovebar)\nplotshape(crossunder, style=shape.circle, location=location.abovebar)\n```\n\n`request.security()` 함수는 다른 타임프레임의 데이터에 접근하는 함수.\n\n```js\nrequest.security(symbol, timeframe, expression, gaps, lookahead, ignore_invalid_symbol, currency) → series <type>\n```\n\n> * **symbol:** 데이터를 요청할 자산의 심볼 또는 티커입니다 (예: \"AAPL\"). 차트의 심볼에서 데이터를 요청하려면 syminfo.tickerid를 사용하십시오.\n> * **timeframe:** 데이터를 요청할 타임프레임입니다 (예: \"D\"는 일일, \"W\"는 주간, \"240\"은 4시간 등). 차트의 타임프레임을 사용하려면 빈 문자열이나 timeframe.period 변수를 사용하세요.\n> * **expression:** 요청된 데이터를 사용하여 수행할 표현식 또는 계산입니다 (예: close, ta.sma(close, 50) 등).\n> * **gaps:** 반환된 값이 차트 막대에서 병합되는 방식을 지정합니다. barmerge.gaps_on을 사용하면 함수의 컨텍스트에서 처음 사용할 수 있을 때만 현재 차트 표시줄에 값이 나타납니다. 그렇지 않으면 na가 반환됩니다>(따라서 \"갭\"이 발생함). 디폴트 값인 barmerge.gaps_off를 사용하면 na 값을 피하면서, 반환된 최신 알려진 값으로 간격이 채워집니다.\n> * **lookahead:** barmerge.lookahead_on으로 설정을 하면 히스토리 바에서만 타임프레임 내부 데이터를 리턴합니다. 파인 스크립트 버전 3 부터 디폴트는 barmerge.lookahead_off 입니다.\n> * **ignore_invalid_symbol:** 지정된 심볼을 찾을 수 없는 경우 함수의 동작을 결정합니다.\n> * **currency:** 통화 단위 (open, high, low, close 등)입니다. \n>\n\n```js\n//@version=5\nindicator(\"비트코인 원화 가격 계산\", overlay=false)\n\nbinance_btc = request.security(\"BINANCE:BTCUSDT\", \"\", close)\nusd_krw = request.security(\"FX_IDC:USDKRW\", \"\", close)\nplot(binance_btc * usd_krw)\n```\n\n`input()` 함수는 값을 입력받을 때 사용. 예를 들어 이동평균 계산에 사용하는 데이터의 길이를 변경할 때 input 함수를 사용함.\n\n```js\n//@version=5\nindicator(\"My script\", overlay = false)\n\ndata_len = input(defval=20, title=\"데이터 길이\")        // title 값은 지표 설정 메뉴에 나타나는 제목임\n// data_len = input.int(defval=20, title=\"데이터 길이\") // 사실 input.int() 함수를 사용하는 것인 듯\nsma = ta.sma(close, length=data_len)                 // input 함수로 입력받은 값을 매개변수로 전달\nplot(sma)\n```\n\n문자열을 입력받으려면 `input.string()` 함수를 사용해야 함.\n\n```js\n//@version=5\nindicator(\"My script\")\n\ntype = input.string(defval=\"SMA\", title=\"Type\", options=['SMA', 'EMA'])\n\nma = 0.0\nif type == \"SMA\"\n    ma := ta.sma(close, 20)\nelse\n    ma := ta.ema(close, 20)\n\nplot(close)\n```\n\n테이블에 문자열 출력은 다음과 같이...\n\n```js\n//@version=5\nindicator(\"My script\", overlay = true)\n\nprint(txt) => \n    var table table_id = table.new(position.top_right, 1, 1) // 1행 1열의 테이블 생성\n    table.cell(table_id, 0, 0, txt, bgcolor=color.yellow)    // 테이블 행열 인덱스는 0부터 시작함\n\nprint(syminfo.tickerid)\n```\n\n\n## 🎯 전략\n\n전략을 사용하면 파인 스크립트로 만든 자동매매 전략을 테스트해볼 수 있음.\n\n```js\n//@version=5\nstrategy(\"정배열, 역배열 자동매매 전략\", overlay = false)\n\nsma5 = ta.sma(close, 5)\nsma20 = ta.sma(close, 20)\n\nentry_point = ta.crossover(sma5, sma20)  // 골든 크로스(정배열)\nexit_point = ta.crossunder(sma5, sma20)  // 데드 크로스(역배열)\n\nif entry_point                           // 골든 크로스가 되면\n    strategy.entry(\"buy\", strategy.long) // 롱 포지션 진입\nif exit_point                            // 데드 크로스가 되면\n    strategy.close(\"buy\")                // 롱 포지션 정리\n\nplot(strategy.position_size)\n```\n\n포지션 종료 시 `strategy.exit()` 함수를 사용한다는데, 어떻게 쓰는 건지 잘...\n\n```js\nstrategy.exit(id=\"exit\", from_entry=\"long\", profit=10, loss=5)\n```\n\n> * **profit:** 지정한 이익금액 도달 시 수익 실현\n> * **limit:** 지정가로 포지션 종료\n> * **loss:** 지정한 손실금액 도달 시 손절\n> * **stop:** 지정가로 포지션 종료\n\n"},{"excerpt":"자바스크립트를 왜 쓰는가? HTML을 조작하거나 변경하기 위해 사용. 그럼 왜 조작하거나 변경하나? 웹 페이지 UI 제작용 입력 받은 데이터 검증용 서버로 데이터 요청용 등 DOM과 셀렉터 DOM(Document Object Model)은 HTML 요소를 프로그래밍 언어로 제어할 수 있게 해주는 모델. 웹 브라우저는 HTML을 Javascript Obje…","fields":{"slug":"/web/js-summary/"},"frontmatter":{"date":"February 04, 2024","title":"JavaScript 간단 정리","description":"JavaScript 간단 정리","tags":["web"],"series":"web","previewImage":"web.jpg","isPrivate":null},"rawMarkdownBody":"\n![JavaScript meme](./images/js-meme.webp)\n\n## 자바스크립트를 왜 쓰는가?\n\nHTML을 조작하거나 변경하기 위해 사용. 그럼 왜 조작하거나 변경하나?\n\n* 웹 페이지 UI 제작용\n* 입력 받은 데이터 검증용\n* 서버로 데이터 요청용 등\n\n\n## DOM과 셀렉터\n\nDOM(Document Object Model)은 HTML 요소를 프로그래밍 언어로 제어할 수 있게 해주는 모델. 웹 브라우저는 HTML을 Javascript Object와 비슷한 자료형에 담아두는데, 이 자료를 Javascript로 제어할 수 있음.\n\n셀렉터를 사용하면 DOM을 조작할 수 있음.\n\n* getElementByX 셀렉터는 HTML 요소 하나를 선택해 줌.\n* getElementsByX 셀렉터는 일치하는 모든 HTML 요소를 찾아줌. 따라서 개별 요소에 접근하려면 인덱스를 사용해야 함.\n* querySelector는 CSS 문법을 사용하여 HTML 요소 하나를 선택해 줌.\n* querySelectorAll는 CSS 문법을 사용하여 일치하는 모든 HTML 요소를 찾아 줌. 개별 요소에 접근하려면 인덱스를 사용해야 함.\n\n```html\n<h1 id=\"hello\">안녕요?</h1>\n<h1 class=\"hi\">저는 HTML로 코딩해요.</h1>\n\n<script>\n  document.getElementById(\"hello\").innerHTML = \"HTML은 프로그래밍 언어가 아닙니다!\";\n  document.getElementByClassName(\"hi\").style.fontSize = \"16px\";\n\n  document.getElementsByClassName(\"hello\")[0].innerHTML = \"HTML은 프로그래밍 언어가 아닙니다!\"\n  document.getElementsByTagName(\"h1\")[0].style.fontSize = \"16px\";\n\n  document.querySelector('#hello').innerHTML = \"HTML은 프로그래밍 언어가 아닙니다!\"\n  document.querySelectorAll('.hi')[0].style.fontSize = \"16px\";\n</script>\n```\n\n```js\ndocument.querySelectorAll('.box h4'); // id=\"box\"인 요소 내 h4 태그 모두 선택\n```\n\n\n## HTML 요소 조작\n\n자바스크립트로 HTML을 만드는 방법은 html 객체를 만들어 붙이거나\n\n```js\nvar pTag = document.createElement('p'); // p 태그 요소 생성\npTag.innerHTML = '안녕';                 // p 태그 내용 입력\npTag.classList.add('hello');            // p 태그에 class명 입력\ndocument.querySelector('#test').appendChild(pTag); // id=\"test\"인 요소에 p 태그 추가\n```\n\nhtml을 직접 작성한 후 붙이는 방법이 있음.\n\n```js\nvar pTag = '<p>안녕<p>';\ndocument.querySelector('#test').insertAdjacentHTML('beforeend', pTag); // beforeend: 안쪽 맨 밑에 추가\n```\n\nhtml을 통으로 교체하려면 innerHTML 속성 값을 바꿔주면 됨.\n\n```js\nvar pTag = '<p>안녕<p>';\ndocument.querySelector('#test').innerHTML = pTag;\n```\n\nclass 부착(toggle)식으로 개발하면 나중에 재사용할 때 편리함.\n\n```html\n<style>\n  .title { display: none; }\n  .show { display: block; }\n</style>\n\n<body>\n  <h1 class=\"title\">제목</h1>\n  <button class=\"btn\">보이기/감추기</button>\n\n  <script>\n    document.querySelector('.btn').addEventListener('click', function(){\n      document.querySelector('.title').classList.toggle('show');\n    });\n  </script>\n</body>\n```\n\n위와 비슷하게, 다크모드 만들려면 CSS에 dark 클래스 디자인한 후 body 태그에 dark 클래스를 토글하면 됨.\n\n```css\n.dark {\n  background: black;\n  color: white;\n}\n```\n\n\n## 변수\n\n변수를 사용하면 자료를 저장할 수 있음.\n\n```js\nvar age = 20;\nlet name = 'kim';\n```\n\n백틱 기호를 사용하면 문자 중간에 변수를 쉽게 넣을 수 있음.\n\n```js\nvar a = '안녕';\nvar b = `${a}하세요?`; // 백틱 기호(`) 사용\n```\n\nFunction-scoped는 해당 함수에 전역 변수로 설정됨을 의미하고, Block-scoped는 주어진 블록 내에서만 사용 가능함을 의미함.\n\n| 변수 종류 | 사용 범위       | 재선언 가능 | 재할당 가능 |\n| --------- | --------------- | ----------- | ----------- |\n| var       | Function-scoped | O           | O           |\n| let       | Block-scoped    | X           | O           |\n| const     | Block-scoped    | X           | X           |\n\n\n## 함수(Function)\n\n함수는 긴 코드를 축약하거나 매개변수를 받아 처리할 때 사용하는 문법. 자바스크립트 함수명 작성은 camelCase를 따르는 게 관습임.\n\n```html\n<button onclick=\"func('arg')\">Button</button>\n\n<script>\n  function func(arg){\n    // 대충 함수 코드\n  }\n</script>\n```\n\n### 콜백 함수\n\n위의 함수는 이름 없이 매개변수에서 호출됨. 파라미터 자리에 들어가는 함수를 콜백 함수라고 하며, 순차적으로 실행됨.\n\n함수 파라미터 자리에 들어가는 콜백함수를 외부에 선언한 후 매개변수처럼 집어넣어도 잘 작동함.\n\n```js\nsetTimeout(myFunc, 1000);\nfunction myFunc(){ console.log('콜백함수임'); }\n```\n\n### 타이머 함수\n\n**setTimeout() 함수**는 ms초 후에 콜백함수를 실행함. setTimeout() 함수 실행을 중단하려면 clearTimeout() 함수 사용.\n\n```js\nvar timeoutId = setTimeout(function(){ 실행할코드~ }, 기다릴시간);\nclearTimeout(timeoutId);\n```\n\n**setInterval() 함수**는 ms초 간격으로 콜백함수를 실행함. setInterval() 함수 실행을 중단하려면 clearInterval() 함수 사용.\n\n```js\nvar intervalId = setInterval(function(){ 실행할코드~ }, 기다릴시간);\nclearInterval(intervalId);\n```\n\n### 화살표 함수(Arrow Function)\n\nArrow function은 함수 안의 this 값이 다를 수 있음.\n\n* 일반 함수는 함수 안에서 this 값을 알맞게 재정의해줌.\n* Arrow function은 함수 안에서 this 값을 재정의하지 않고 바깥에 있던 this를 그대로 씀.\n\n따라서 이벤트 리스너 콜백함수 안에서 this를 써야 할 때 Arrow function을 쓰면 의도와 다르게 작동할 수 있으므로 일반함수를 쓰는 게 맞음.\n\n```js\nvar pants = [28, 30, 32];\npants.forEach((item) => {\n  console.log(item);\n}\n```\n\n\n## 이벤트\n\n이벤트란 click, mouseover, scroll, keydown 등의 활동을 가리킴. \n\n이벤트를 감지하고 싶으면 `addEventListener()` 함수로 이벤트를 붙여주면 됨.\n\n```html\n<div class=\"alert-box\" id=\"alert\">\n  <p>알림창임</p>\n  <button id=\"close\">닫기</button>\n</div>\n\n<script>\n  // click 하면 콜백함수 function()을 실행함\n  document.getElementById('close').addEventListener('click', function() {\n    document.getElementById('alert').style.display = 'none';\n  });\n</script>\n```\n\n### input 태그 이벤트\n\ninput 태그에서 발생하는 이벤트 중 input 이벤트와 change 이벤트가 있음. input 이벤트는 입력 값이 변경될 때마다 발생하고, chagne 이벤트는 입력값이 변경된 후 포커스를 잃을 때 발생함.\n\n```js\ndocument.getElementById('email').addEventListener('input', function() {\n   console.log('이메일 입력 됨');\n});\ndocument.getElementById('email').addEventListener('change', function() {\n   console.log('이메일 변경 함');\n});\n```\n\n### scroll 이벤트\n\ndocument 바깥에 존재하는 페이지(window)에 scroll 이벤트 리스너를 달면 전체 페이지를 스크롤 할 때마다 원하는 코드를 실행할 수 있음.\n\n```js\nwindow.addEventListener('scroll', function(){\n  console.log(window.scrollX, window.scrollY); // 현재 스크롤 위치(px)\n  window.scrollTo(0, 100); // 특정 x, y 스크롤 위치로 이동\n  window.scrollBy(0, 100); // 현재 위치 기준에서 이만큼 스크롤\n});\n```\n\nbootstrap을 사용한다면 스크롤 위치가 천천히 이동함. 순간이동하려면 아래 속성 사용.\n\n```css\n:root { scroll-behavior: auto; }\n```\n\n### select 태그 이벤트\n\nselect 태그의 선택 값을 가져오려면 value 속성을 사용하면 됨.\n\n```js\ndocument.querySelectorAll('.form-select')[0].addEventListener('input', function(e){\n  // var value = document.querySelectorAll('.form-select')[0].value;\n  var value = e.currentTarget.value; // 위 코드와 같음\n\n  // 셔츠를 선택했다면 요소 숨김 클래스 제거\n  if(value == '셔츠'){\n    document.querySelectorAll('.form-select')[1].classList.remove('form-hide');\n  } else if(value == '모자'){ // 모자를 선택했다면 요소 숨김 클래스 추가\n    document.querySelectorAll('.form-select')[1].classList.add('form-hide');\n  }\n});\n```\n\n### 이벤트 객체\n\n이벤트 콜백함수에 매개변수를 넣어주면 그 매개변수는 이벤트 객체가 됨.\n\n```js\ndocument.getElementById('email').addEventListener('input', function(e) {\n  e.target;            // 실제로 이벤트가 발생한 HTML 요소\n  e.currentTarget;     // 이벤트 리스너가 달린 요소\n  this;                // 이벤트 리스너가 달린 요소\n});\n```\n\n이벤트 처리 함수에서 현재 요소의 형제 요소에 접근하려면 `e.target.previousElementSibling` 또는 `e.target.nextElementSibling`을 사용하면 됨.\n\n### DOM 이벤트\n\nDOMContentLoaded 이벤트는 HTML을 다 읽어들인 후 발생하는 이벤트임.\n\n```js\ndocument.addEventListener('DOMContentLoaded', function() { });\n```\n\nload 이벤트는 이미지, CSS, JS 파일 등이 로드되었는지 체크하는 이벤트임.\n\n```js\n// class=\"container\"인 요소가 로드되었을 때 실행할 코드\ndocument.querySelector('.container').addEventListener('load', function(){ };\n\n// document 안의 이미지, js 파일 포함 모두 로드되었을 때 실행할 코드\nwindow.addEventListener('load', function(){ });\n```\n\n### 이벤트 버블링과 이벤트 관련 함수들\n\n모든 브라우저는 이벤트 버블링(이벤트가 상위 html로 퍼지는 현상)이 일어남. 즉 상위 요소를 클릭하면 하위 요소도 클릭한 것이 됨. 이 현상을 막으려면 `e.preventDefault()` 함수를 사용해야 함.\n\n이벤트 관련 주요 함수들은...\n\n```js\ne.preventDefault();  // 이벤토 기본동작 막기\ne.stopPropagation(); // 상위요소로 이벤트 버블링 막기\n```\n\n### dataset 문법\n\ndataset 문법을 사용하면 html 요소에 사용자에게 보이지 않는 값을 숨길 수 있음.\n\n```html\n<div class=\"box\" data-id=\"0\"></div>\n```\n\ndataset을 자바스크립트에서 꺼내려면...\n\n```js\nlet id = document.querySelector('.box').dataset.id\n\ndocument.querySelector('.box').addEventListener('click', function(e)){\n  let id = e.target.dataset.id;\n}\n```\n\n\n## 조건문(If)\n\n조건문은 if를 사용하여 작성.\n\n```js\nif(조건 1) {\n  console.log('조건 1일 때 실행할 코드');\n} else if(조건 2) {\n  console.log('조건 2일 때 실행할 코드');\n} else {\n  console.log('모든 조건이 아닐 때 실행할 코드)\n}\n```\n\nif - if문은 모든 if문을 실행하지만, if - else if 문에서 if 문이 참이면 else if 문을 실행하지 않음. 특정 상황에서 실행에 영향을 줄 수 있는 차이.\n\n```js\nif(1 == 3){\n  console.log('맞아요1');\n} else if(3 == 3) {\n  console.log('맞아요2');\n}\n\nif(1 == 3){\n  console.log('맞아요1');\n}\nif(3 == 3) {\n  console.log('맞아요2');\n}\n```\n\n엄격한(타입까지 같은지) 비교는 === 연산자를, 느슨한 비교는 == 연산자 사용.\n\nand 비교는 && 연산자를, or 비교는 || 연산자 사용.\n\n### Switch 문법\n\nSwitch 문법은 변수 하나만 검사할 때 간편하게 사용함.\n\n```js\n  let value = 2 + 2;\n  switch(value){\n    case 3:\n      alert('변수가 3이네요.');\n      break;\n    case 4:\n      alert('변수가 4네요.');\n      break;\n    default:\n      alert('아무것도 아니네요...');\n  }\n```\n\n\n## 반복문\n\nfor문은 특정 횟수만큼 반복할 때 사용. i 변수를 var 타입으로 선언하면 Function-scoped이므로 다음 코드에서 변수 i를 만날 경우 제대로 작동하지 않으므로 Block-scoped인 let 변수로 선언하여 사용함.\n\n```js\nfor(let i=0 ; i<10 ; i++){\n  console.log(i);\n}\n```\n\n### forEach\n\nforEach를 사용하면 array 자료형에 반복문을 쓸 수 있음.\n\n```js\nvar pants = [28, 30, 32];\npants.forEach(function(item){\n  document.querySelectorAll('.form-select')[1].innerHTML += `<option>${item}</option>`;  \n});\n```\n\nforEach의 콜백함수에 매개변수를 2개 주면 인덱스를 사용할 수도 있음.\n\n```js\nvar pants = [28, 30, 32];\npants.forEach(function(item, index){\n  console.log(`${index}번째 값: `${item}`);\n});\n```\n\n### for in\n\nobject 자료도 반복문 돌릴 수 있음.\n\n```js\nvar obj = {name: 'kim', age: 20};\nfor(var key in obj){\n  console.log(key);      // 키 값 출력\n  console.log(obj[key]); // 데이터 출력\n}\n```\n\n\n## 배열(Array)과 객체(Object)\n\nArray 자료형을 쓰면 연속되는 여러 자료를 변수 하나에 저장할 수 있음. 연속적인 데이터이므로 자료 정렬도 가능함.\n\n```js\nvar car = ['캐스퍼', 50000, 'white']; // Array 생성(대괄호)\ncar[0] = '레이'; // Array 수정\ncar.sort();     // Array 정렬\n```\n\nObject 자료형을 쓰면 이름을 붙여서 저장이 가능함. 주로 비연속적인 데이터에 사용.\n\n```js\nvar car = { name: '캐스퍼', price: 50000 }; // key: value 형태의 Object 생성(중괄호)\ncar['name'] = '레이'; // Object 수정\ncar.name = '레이';    // Object 수정\n```\n\nObject 안에 Object나 Array도 넣을 수 있음.\n\n```js\nvar car2 = { name : '캐스퍼', price : [50000, 3000, 4000] }\n```\n\n### 배열(Array)에 자주 쓰는 함수\n\narray 자료를 정렬하려면 sort() 함수 사용. 예전 문법이라 원본을 변형시킴.\n\n```js\nvar numbers = [7, 3, 5, 2, 40];\nnumbers.sort(function(a, b){ // a, b 매개변수는 array 안의 자료\n  return a - b; // 오름차순 정렬(return 값이 양수면 a를 오른쪽으로, 음수면 b를 오른쪽으로)\n});\n\nvar alphabet = ['a', 'c', 'b']\nalphabet.sort(); // 문자 오름차순 정렬\nalphabet.sort(function(a, b){\n  return a < b;  // 문자 내림차순 정렬\n});\n```\n\narray 자료 중 원하는 것만 필터하려면 filter() 함수 사용. 신 문법이라 원본을 변형하지 않으므로 결과값을 변수에 담아서 써야함.\n\n```js\nvar numbers = [7, 3, 5, 2, 40];\nvar newNumbers = numbers.filter(function(a){\n  return a < 4; // 4 미만의 자료만 남김\n});\n```\n\narray 자료를 전부 변형하려면 map() 함수 사용.\n\n```js\nvar numbers = [7, 3, 5, 2, 40];\nvar newNumbers = numbers.map(function(a){\n  return a * 4; // 요소 모두에 4를 곱한 값으로 변형\n})\n```\n\n\n## 정규식\n\n`includes()` 함수를 사용하면 해당 문자열이 포함되어 있는지 확인 가능. \n\n```js\n'abc'.includes('a'); // a가 들어있으면 true 반환\n```\n\n한글이 들어있냐, 영어가 들어있냐, A로 끝나냐, 숫자가 1회 출현하냐 등을 판별하려면 정규식(문자를 검사하는 식)을 사용해야 함.\n\n범위지정은 [], 시작여부는 ^, 반복 검색은 +, or 연산은 | 사용. 소괄호로 묶어 우선순위를 줄 수도 있음.\n\n```js\n/a/.test('abcde');            // abcde에 a가 있는지 검사\n/[a-z]/.test('abcde');        // a부터 z까지의 알파벳 중 한 글자가 있는지 검사\n/[a-zA-Z]/.test('abcde');     // 아무 알파벳 중 한 글자가 있는지 검사\n/[가-힣]/.test('안녕');         // 한글이 들어있는지 검사\n/[ㄱ-ㅎㅏ-ㅣ]/.test('ㅎㅎㅎ굳굳'); // 한글 자음 또는 모음이 들어있는지 검사\n/[0-9]/.test('안녕2');         // 숫자가 들어있는지 검사\n/\\S/.test('안녕');      //  아무 문자(특수기호도 포함) 1개가 들어있는지 검사\n/\\S+/.test('안녕');     // +는 왼쪽 문자 반복 검색\n/^a/.test('abcde');    // a로 시작하는지 검사\n/a$/.test('ecdba');    // a로 끝나는지 검사\n/a|b/.test('abcde');   // a 또는 b가 있는지 검사\n/(a|b)/.test('abcde'); // a 또는 b가 있는지 검사\n```\n\nChatGPT한테 정규식 물어보면 거의 정확하게 알려줌. 개꿀.\n\n\n## 모듈화\n\n자바스크립트 파일을 모듈화하여 사용하려면 .js 파일을 만들어 코드를 짠 다음 이걸 떙겨쓰면 됨.\n\n```js\n<script src=\"./JS_PATH.js\">\n```\n\n\n## Ajax\n\nAjax는 브라우저 새로고침 없이 GET, POST 요청하는 기능. \n\nfetch() 함수는 Ajax 요청을 위해 사용하는 브라우저 기본 제공 함수. 좀 더 편하게 사용하려면 Axios 같은 라이브러리를 사용하면 됨.\n\n```js\nfetch('https://codingapple1.github.io/price.json')\n  .then(res => res.json()) // 받아온 JSON을 Object 자료형으로 변환\n  .then(data => {\n    console.log(data);\n  })\n  .catch(error => {\n    console.log(error);\n  });\n```\n\n\n## Local storage\n\n여러가지 웹 브라우저 저장공간이 있음.\n\n* Local storage와 Session storage: key-value 형태로 문자, 숫자 데이터 저장\n* Indexed DB: 구조화된 데이터를 DB처럼 저장\n* Cookies: 로그인 정보 저장\n* Cache storage: html, css, js 등의 파일 저장 공간\n\n이 중 Local storage는 데이터를 반영구적으로 저장하기 위한 방법. 5MB의 문자 또는 숫자 데이터만 저장 가능.\n\nLocal storage는 사이트를 재접속해도 유지되지만, Session storage는 사이트를 나가면 자동 삭제됨.\n\n```js\nlocalStorage.setItem('name', 'kim');\nvar name = localStorage.getItem('name');\nvar name = localStorage.name; // getItem() 함수 대신 키 값을 속성처럼 써도 됨\nlocalStorage.removeItem('name');\n```\n\nLocal storage에 array나 object 자료형을 저장하려면 JSON으로 변환 후 저장해야 함. 역으로 Local storage에 저장된 array나 object 자료형을 꺼내오려면 자료형을 변환해야 함.\n\n```js\nvar arr = [1, 2, 3];\nlocalStorage.setItem('num', JSON.stringify(arr));\n\nvar getArr = JSON.parse(localStorage.getItem('num'));\nconsole.log(getArr);\n```\n\nLocal storage를 수정하는 코드는 없음. 자료를 꺼내서 수정한 후 다시 넣어줘야 함.\n\n\n## 쓸 만한 자바스크립트 라이브러리들\n\n[**Swiper**](https://swiperjs.com/get-started#use-swiper-from-cdn)를 사용하면 캐러셀(슬라이드 이미지)를 쉽게 만들 수 있음. Lazy loading이나 터치, 드래그도 됨.\n\n[**Chart.js**](https://cdnjs.com/libraries/Chart.js)를 사용하면 차트 그릴 수 있음. 예제 코드는 [Chart.js 홈페이지 참고.](https://www.chartjs.org/docs/latest)\n\n[**AOS(Animate On Scroll**)](https://michalsnik.github.io/aos)를 사용하면 스크롤 내렸을 떄 요소가 서서히 등장하는 애니메이션을 만들 수 있음. [여기](https://github.com/michalsnik/aos)서 css, js 파일 CDN 버전 찾아서 HTML에 넣은 후 script 태그에 `AOS.init();` 코드 실행해주면 사용 가능.\n\n그 다음 [여기](https://michalsnik.github.io/aos)에서 예제 코드 따라서 복붙하면 되는 듯. 예를 들어 원하는 요소에 `<div data-aos=\"fade-up\"></div>`와 같이 추가하면 됨.\n\n[**EmailJS**](https://www.emailjs.com/docs/introduction/how-does-emailjs-work)는 자바스크립트만으로 이메일 전송을 해줌.\n\n[**Lodash**](https://lodash.com)는 array, object, 문자, 숫자 자료를 다루기 편해지는 함수들을 제공함. \n\n[**Fullpage.js**](https://alvarotrigo.com/fullPage)는 웹페이지를 PPT처럼 만들어줌. [여기](https://github.com/alvarotrigo/fullPage.js/tree/master/lang/korean#fullpagejs)에서 css, js 파일을 CDN 식으로 설치해서 사용하면 됨.\n\n\n## 모던 웹개발 시 알면 좋은 것\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/ZM55pce2AkY?si=7JgGaipksqbfVJxA\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen></iframe>\n\n**npm**은 js 라이브러리 관리를 도와주는 패키지 매니저.\n\n**Node.js**는 웹 브라우저 밖에서 js를 실행해주는 엔진.\n\n**Bundling Tool**은 여러 js 파일들을 하나로 합쳐주는 툴. 안 쓰는 함수나 변수 등을 제거해주므로 용량을 줄여줌.\n\n**SPA(Single Page Application)**는 모바일 앱처럼 새로고침 없이 부드럽게 동작하는 사이트. 이를 개발하기 위한 라이브러리는 React, Vue, Angular, Svelte 등이 있음.\n\n**State management**는 SPA의 데이터(변수)를 관리해주는 라이브러리.\n\n**SSR(Server Side Rendering)**은 HTML을 서버에서 만들어 보내주는 방식. SPA의 단점인 검색엔진 노출 어려움, js 파일 용량 문제를 해결할 수 있음.\n\n**Meta Framework**는 프레임워크를 위한 프레임워크. 예를 들어 Next.js는 React를 위한 프레임워크?\n\n**TypeScript**는 타입 기능이 강화된 자바스크립트.\n\n**Serverless**는 서버 역할을 대신 해주는 서비스."},{"excerpt":"HTML 기본 태그로 글 작성해 보기 Visual Sutdio Code의 html 문서 편집기에서 !를 입력 후 탭 키를 누르면 아래와 같이 기본 html 문서가 생성됨. HTML은 마크업 언어이므로 모든 요소들이 태그로 감싸져 있어야 함. head 태그 HTML 문서의 기본 템플릿은 꼭 head와 body 태그를 포함해야 함. style 태그는 body…","fields":{"slug":"/web/html-summary/"},"frontmatter":{"date":"January 15, 2024","title":"HTML 간단 정리","description":"HTML 간단 정리","tags":["web"],"series":"web","previewImage":"web.jpg","isPrivate":null},"rawMarkdownBody":"\n![HTML is programming language(?)](./images/html-coding.jpg)\n\n\n## HTML 기본 태그로 글 작성해 보기\n\nVisual Sutdio Code의 html 문서 편집기에서 !를 입력 후 탭 키를 누르면 아래와 같이 기본 html 문서가 생성됨.\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Document</title>\n</head>\n<body>\n  \n</body>\n</html>\n```\n\nHTML은 마크업 언어이므로 모든 요소들이 태그로 감싸져 있어야 함.\n\n```html\n<div>\n  <p>네모네모 div 박스</p>\n</div>\n```\n\n\n## head 태그\n\nHTML 문서의 기본 템플릿은 꼭 head와 body 태그를 포함해야 함.\n\nstyle 태그는 body 태그 맨 밑에 두면 사이트 로딩 시 스타일이 잠깐 깨질 수 있으므로 head 태그 안에 넣는 경우가 많음.\n\n### head 태그 안에 들어가는 meta 태그\n\n사이트의 인코딩 형식을 지정할 때 meta 태그의 `charset` 속성을 사용함.\n\n구글 검색 시 화면에 뜨는 글귀를 수정하고 싶으면 `name=\"description\"` 속성과 `name=\"keywords\"` 속성을 사용함. description은 제목, keywords는 검색에 도움을 주는 키워드임.\n\n사이트 초기 zoom 레벨이나 폭을 지정하려면 `name=\"viewport\"` 속성을 사용함. `width=device-width`는 기기의 실제 가로폭으로 렌더링, `initial-scale=1.0`은 화면 줌 레벨 설정임.\n\n```html\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"description\" content=\"저는 HTML으로 프로그래밍해요\">\n  <meta name=\"keywords\" content=\"HTML,프로코딩러\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n</head>\n```\n\n### 오픈 그래프(Open Graph)\n\n![Open Graph](./images/opengraph.png)\n\n오픈 그래프는 페이스북이 만든 meta 태그. SNS에 링크를 공유하면 위와 같은 방식으로 사이트 설명과 제목 등이 뜨는데 이걸 커스터마이징 하고 싶으면 아래 meta 태그를 넣어주면 됨.\n\n```html\n<head>\n  <meta property=\"og:image\" content=\"IMAGE_PATH\">\n  <meta property=\"og:description\" content=\"CSS는 대박이다!!!\">\n  <meta property=\"og:title\" content=\"CSS IS AWESOME!!!\">\n</head>\n```\n\n### 파비콘(Favicon)\n\n웹사이트 제목 옆에 뜨는 아이콘을 커스터마이징하려면 meta 태그 내에 link 태그를 추가해줘야 함.\n\n```html\n<head>\n  <link rel=\"icon\" href=\"ICON_PATH.ico\" type=\"image/x-icon\">\n</head> \n```\n\nico 대신 png 파일로 넣어도 되지만 ico 파일이 호환성이 가장 좋음. 요즘은 32x32 사이즈로 제작하면 됨.\n\n바탕화면 바로가기 추가 시 뜨는 아이콘을 커스터마이징하려면 link 태그의 `rel=\"apple-touch-icon-precomposed\"`과 같은 속성을 추가하면 되는데, OS마다 요구하는 속성이 다름. Favicon generator 같은거 쓰면 OS별로 알아서 만들어 줌.\n\n## 폼\n\n폼은 form 태그로 만듦.\n\n```html\n<form>\n  <input type=\"text | email | password | radio | file | checkbox | submit\">\n  <input name=\"IDENTIFIER_FOR_SERVER_TRANSFER\" placeholder=\"BACKGROUND_TEXT\" value=\"INPUT_VALUE\">\n  <select>\n    <option>옵션 1<option>\n    <option>옵션 2<option>\n    <option>옵션 3<option>\n  </select>\n  <textarea rows=\"10\">Textarea</textarea>\n</form>\n```\n\n폼에 입력된 값을 전송하는 버튼은 아래 둘 중 하나를 사용함.\n\n```html\n<form>\n  <button type=\"submit\">전송</button>\n  <input type=\"submit\">\n</form>\n```\n\n\n## 테이블\n\nthead, tbody는 헤드부분 영역구분을 위해 사용하며 필수값은 아님.\n\ntd 대신 th 태그를 사용하면 제목처럼 굵게 표시됨.\n\n```html\n<style>\n  td, th {\n    vertical-align: top | middle | bottom; /* 테이블 셀 내 상하정렬 */\n    border-collapse: collapse; /* 표 셀 간 틈 제거 */\n  }\n</style>\n\n<table>\n  <thead>\n    <th>제목 1</th>\n    <th>제목 2</th>\n  </thead>\n  <tbody>\n    <tr>\n      <td>내용</td>\n      <td>내용</td>\n    </tr>\n  </tbody>\n</table>\n```\n\n## Font Awesome 아이콘 넣기\n\nFont Awosome을 사용하면 아이콘을 폰트처럼 넣을 수 있음. [v5.15 버전 설치방법 참고.](https://fontawesome.com/v5/docs/web/setup/host-font-awesome-yourself) \n\nCDN 방식을 사용하려면 Font Awesome의 all.min.css 파일 경로를 link 태그에 넣어주면 됨.\n\n```html\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\" />\n```\n\n다운로드 방식을 사용하려면 [Font Awesome 다운로드 사이트](https://fontawesome.com/download)에서 다운로드 후 all.min.css 파일 경로를 link 태그에 넣어주면 됨. 이 중 css랑 webfonts 폴더 제외하고 다 지워도 됨. css 폴더 내에서도 all.css 및 all.min.css 파일 제외하고 다 지워도 됨.\n\n아이콘을 넣으려면 [Font Awesome 홈페이지](https://fontawesome.com/icons)에서 아이콘 검색 후 태그를 넣어주면 됨. 예를 들어 쇼핑카드 아이콘을 추가하는 태그는...\n\n```html\n<!-- fa-3x: 3배 확대 -->\n<i class=\"fas fa-shopping-cart fa-3x\"></i>\n```\n\nFont Awesome의 아이콘은 폰트이므로 폰트 관련 CSS 속성을 사용할 수 있음. 예를 들어, 아이콘에 둥근 배경색을 넣는 CSS 코드는...\n\n```css\ni {\n  background-color: burlywood;\n  width: 100px;\n  height: 100px;\n  border-radius: 50px;\n  padding-top: 25px;\n  box-sizing: border-box;\n  color: white;\n  /* margin-top: 20px; */\n}\n```\n\n\n## 비디오와 오디오 다루기\n\nvideo 태그를 사용하면 비디오를 재생할 수 있음. 주요 속성은...\n\n* autoplay: 자동 재생(크롬 브라우저에선 muted 속성을 같이 사용해야 작동함)\n* preload: 영상을 먼저 다운받을지 선택(auto, metadata none 값 중 선택)\n* poster: 썸네일 이미지 경로\n* loop: 반복 재생\n\n```html\n<!-- 크롬 브라우저 정책상 autoplay 하려면 muted 속성 필요 -->\n  <video controls preload=\"metadata\">\n    <!-- source 태그를 사용하면 호환성 챙길 수 있음 -->\n    <source src=\"./VIDEO_PATH.mp4\" type=\"video/mp4\">\n    <source src=\"./VIDEO_PATH.webm\" type=\"video/webm\"> <!-- 위에거 틀어보고 안되면 이거 트셈 -->\n  </video>\n```\n\naudio 태그를 사용하면 오디오를 재생할 수 있음.\n\n```html\n<audio controls muted>\n  <source src=\"./AUDIO_PATH.mp3\">\n</audio>\n```\n\n## 만든 사이트 발행하기\n\nGithub Pages를 사용하는 경우 `아이디.github.io`라는 이름의 리포지토리를 만든 후 html, css, js 파일을 그대로 업로드하면 됨. `아이디.github.io` 주소로 접속하면 index.html 파일을 보여줌.\n\n웹 호스팅 서비스(AWS, 가비아, 카페24 등)를 사용하는 경우 FTP에 접속하여 html, css, js 파일을 그대로 업로드하면 됨.\n\n\n\n\n\n\n\n\n\n\n\n\n\n## 팁... 같은 것\n\n### Emmet\n\nEmmet을 사용하면 적게 입력하여 HTML을 생성할 수 있음. 요즘 Visual Studio Code는 자동으로 지원함.\n\n`div.container>div*3`을 입력한 후 탭 키를 누르면 `<div class=\"container\">` 태그 1개와 그 안에 `<div>` 태그가 3개 생성됨. `.`은 class명, `>`은 내 바로 밑의 자식 요소, `*`은 생성할 태그 개수를 가리킴.\n\n이 외의 주요 HTML Emmet은...\n\n* !: html 문서 시작 템플릿 생성\n* lorem: 임시글자 무작위 생성\n* p: p 태크 생성\n\n### 크롬 개발자 도구\n\n내 의도와 다르게 작동하는 버그 발생 시 크롬 브라우저에서 요소를 가리키고 마우스 우클릭 후 검사 버튼을 클릭하면 개발자도구가 뜨면서 HTML과 CSS 코드가 나타남. 또는 개발자도구 단축키(MacOS는 Command + Option + i)를 눌러도 됨.\n\n요소를 마우스로 가리키고 싶으면 Select an element in the page to inspect it 버튼(Command + Shift + C) 클릭.\n\nStyles 탭에서 CSS 코드를 볼 수 있음. 여기에 직접 스타일을 입력해볼 수도 있음. 위에 있을수록 우선 적용되는 스타일임."},{"excerpt":"CSS 파일을 HTML 문서에 첨부하는 법 head 태그 안에 link 태그를 넣고 CSS 파일 경로를 지정해주면 됨. 주요 스타일링 거의 모든 태그는 style 속성을 사용할 수 있음. style 속성에  형식으로 스타일을 명시해주면 됨. 글자 스타일 폰트 HTML 요소에 폰트를 적용하려면 font-family 속성을 사용함. 폰트의 영문명을 사용해야 …","fields":{"slug":"/web/css-summary/"},"frontmatter":{"date":"January 15, 2024","title":"CSS 간단 정리","description":"CSS 간단 정리","tags":["web"],"series":"web","previewImage":"web.jpg","isPrivate":null},"rawMarkdownBody":"\n![CSS is awesome!](./images/css-is-awesome.jpg)\n\n## CSS 파일을 HTML 문서에 첨부하는 법\n\nhead 태그 안에 link 태그를 넣고 CSS 파일 경로를 지정해주면 됨.\n\n```html\n<head>\n  <link href=\"CSS_파일경로\" rel=\"stylesheet\">\n</head>\n```\n\n\n## 주요 스타일링\n\n거의 모든 태그는 style 속성을 사용할 수 있음. style 속성에 `스타일이름: 스타일값;` 형식으로 스타일을 명시해주면 됨.\n\n```html\n<div style=\"font-size: 16px;\"></div>\n```\n\n### 글자 스타일\n\n```css\nfont-size: 20px;\ncolor: black;\nletter-spacing: -1px;  /* 글자 간격 */\ntext-align: center;\nfont-weight: 600;      /* 굵기 */\n```\n\n### 폰트\n\nHTML 요소에 폰트를 적용하려면 font-family 속성을 사용함.\n\n* 폰트의 영문명을 사용해야 버그가 없음.\n* 공백이 있는 폰트명이 있을 수 있으니 따옴표 안에 담는 게 좋음.\n* 폰트를 여러 개 선언하면 제일 왼쪽에 있는 폰트부터 우선 적용됨.\n\n```css\nbody { font-family : 'gulim', 'gothic', sans-serif; }\n```\n\n**설치되지 않은 폰트를 사용하려면...**\n\n```css\n@font-face {\n  font-family: 'nanumsquare';\n  src: url(../font/NanumSquareR.woff);\n}\n\nbody { font-family: 'nanumsquare', sans-serif; }\n```\n\n**웹폰트용 woff 파일**은 ttf 파일에 비해 용량이 3분의 1수준이므로 이걸 사용하는 게 웹 사이트 반응 속도에 유리함. \n\n[구글 폰트](https://fonts.google.com)를 사용하면 폰트파일을 구하지 않아도 됨.\n\n**안티앨리어싱**은 픽셀의 각진 부분을 부드럽게 다듬어주는 것. 윈도우에서 특정 폰트를 매우 확대하거나 축소해서 보면 글자가 매우 각져보이는 경우가 있는데, 이 때 글자를 살짝 돌려주면 안티앨리어싱을 한 듯한 느낌을 줌.\n\n```css\nbody { transform: rotate(0.04deg); /* 0.04도만큼 회전 */ }\n```\n\n### Margin과 Padding\n\nmargin은 바깥 여백, padding은 안쪽 여백임.\n\n![CSS의 Margin, Border, Padding 그리고 Content](./images/css-content-padding-border-margin.jpg)\n\n이 속성은 네 방향 값을 한 번에 줄 수 있음.\n\n```css\n.box { margin: 10px auto 10px auto; /* 시계방향(상우하좌) */ }\n```\n\n**body 태그엔 기본 margin이 있음.** 이 값을 0으로 설정하면 꽉 찬 페이지를 만들 수 있음.\n\n**마진 상쇄(Margin Collapse) 현상**이란 게 있음. 이는 두 요소가 겹쳐지면 두 요소의 margin 값이 합쳐지는 현상인데, 서로 겹쳐진 두 요소 중 한 쪽의 margin 값만 변경했음에도 다른 한 쪽의 margin 값도 변경돼버림. 이 현상을 막으려면 두 요소의 테두리를 겹치지 않게 하면 됨. 예를 들어, 부모 박스에 padding 값을 1 픽셀이라도 주면 됨.\n\nHTML 요소에 width, height 값을 주면 기본적으로 padding 안쪽 부분인 컨텐트 영역에만 width, height 값이 반영됨. 따라서 요소가 내가 설정한 값보다 크게 보일 수 있음. 이 현상이 발생하는 원인은 box-sizing 속성의 기본값이 content-box이기 때문.\n\n**`box-sizing: border-box;` 속성을 추가하면 width, height 값에 padding, border 및 margin 값이 포함됨.** div 태그 속성에 추가해놓으면 편함.\n\n### 폭과 너비\n\n폭과 너비 속성 값에 쓰는 단위는...\n\n* vw: 브라우저 폭 기준 몇 %?\n* vh: 브라우저 높이 기준 몇 %?\n* rem: 기본 폰트 사이즈(font-size 속성)의 몇 배 크기?\n* em: 내 폰트 사이즈 기준 몇 배 크기?\n\nrem은 폰트 사이즈를 키우더라도 레이아웃이 이에 맞게 비례하여 확장되므로 레이아웃이 깨지지 않도록 하기 위해 사용하나, 주로 타이포그래피(활판술) 디자인에서 폰트 사이즈 외우기 귀찮을 때 사용. 요즘은 잘 안 쓴다고 함.\n\n가변 폭 크기를 정하려면 width, height 등의 값을 px가 아닌 %, vw 등으로 입력함. 그런데 이 값이 크면 PC에서 너무 크게 보이는 문제가 있으므로 반응형 웹디자인을 위해 max-width, max-height 속성을 추가로 사용함.\n\n```css\n.box {\n  width: 80%;       /* 부모의 80% 크기 */\n  max-width: 600px; /* 이 이상으로 커지진 않음 */\n}\n```\n\n반대로 min-width, min-height 속성도 있음.\n\n\n## CSS 셀렉터\n\n### 기본적인 CSS 셀렉터\n\n태그 이름을 명시하면 해당 태그의 스타일링 가능.\n\n```css\np { text-align: center; }\n```\n\n`,`을 사용하면 여러 요소를 동시에 스타일링.\n\n```css\nh4, h5, h6 { margin: 15px; }\n```\n\n`.`을 사용하면 특정 class 값을 지닌 요소를 스타일링. CSS에서 ID 셀렉터보다 더 자주 사용됨.\n\n```css\n.container { width: 100%; }\n```\n\n`#`을 사용하면 특정 id 값을 지닌 요소를 스타일링. ID 셀렉터는 자바스크립트에서 주로 사용하므로 CSS에선 보통 사용하지 않음.\n\n```css\n#btn { font-weight: bold; }\n```\n\n공백을 사용하면 요소 내 요소를 스타일링.\n\n```css\n/* class=\"navbar\" 인 모든 요소 내 li 태그의 스타일 */\n.navbar li { /* ... */}\n```\n\n꺾쇠괄호 `>`를 사용하면 직계(바로 아래) 요소를 스타일링. 꺾쇠괄호를 연달아 쓰는 건 어떤 부분을 스타일링하는지 알기 어려우므로 권장하지 않음. 클래스를 만들어 영역을 구분한 후 스타일링 하는 게 좋음.\n\n```css\n/* (꺾쇠괄호 > 사용) class=\"navbar\" 인 직계(바로 아래) 요소 내 li 태그의 스타일 */\n.navbar > li { /* ... */ }\n\n/* 뭘 스타일링 하는 건지...? */\n.container div div>p>span { /* ... */ }\n\n/* 이건 좀 알겠넹 */\n.headline > span { /* ... */ }\n```\n\n대괄호 `[]`를 사용하면 특정 속성 값을 찾아 스타일링.\n\n```css\n/* type 속성 값이 email인 모든 input 태그 스타일 */\ninput[type=email] { color: gray; }\n\n/* class 속성 값이 input인 요소 중 type 속성 값이 email인 요소 스타일*/\n.input[type=email] { color: gray; }\n```\n\n### Pseudo-class\n\npseudo-class는 상태에 따라서 스타일을 줄 수 있는 셀렉터. 자바스크립트의 이벤트와 같은 것?\n\n```css\n.btn:hover { background: skyblue; } /* 마우스를 올려놓을 때 */\n.btn:focus { background: red; }     /* 클릭 후 계속 포커스 상태일 때 */\n.btn:active { background: brown; }  /* 클릭 중일 때 */\ninput:focus { border: 2px solid red; }\n\na:link { color: red; }      /* 방문 전 링크 */\na:visited { color: black; } /* 방문 후 링크 */\n```\n\n아래 외에도 pseudo-class 종류는 매우 많음.\n\n```css\n:any-link      /* 방문 전, 방문 후 링크 한번에 선택할 때 */\n:playing       /* 동영상, 음성이 재생중일 때 */\n:paused        /* 동영상, 음성을 일시중단인 상태일 때 */\n:autofill      /* input의 자동채우기 스타일 */\n:disabled      /* disabled 되었을 때 */\n:checked       /* 체크박스나 라디오버튼이 체크 되었을 때 */\n:blank         /* input 태그 입력값이 비었을 때 */\n:valid         /* 이메일 input 등에 이메일 형식이 맞게 입력된 경우 */\n:invalid       /* 이메일 input 등에 이메일 형식이 맞게 입력되지 않은 경우 */\n:required      /* 필수로 입력해야할 input의 스타일 */\n:nth-child(n)  /* n번째 자식 선택 */\n:first-child   /* 첫번째 자식 선택 */\n:last-child    /* 마지막 자식 선택 */\n```\n\n### Pseudo-element\n\npseudo-element는 HTML 요소 내부의 일부분만 스타일줄 때 사용. \n\n```css\n.text::first-letter { color : red; }\n.text::first-line { color : red; }\n.text::after { content : '진짜야?'; }\n.text::before { content : '구라임'; }\n```\n\n### 셀렉터의 우선 순위\n\n스타일이 겹치는 경우 적용되는 우선순위는 `태그 → .CLASS 셀렉터 → #ID 셀렉터 → style=\"\" 속성`임\n\n\n## 네모네모 div 박스 디자인\n\n![네모네모 멈뭄미](./images/nemo_dog.webp)\n\n네모네모 박스 디자인을 만드려면 div 태그를 사용. 네모네모 박스 레이아웃만 잘 이해하고 배치할 수 있다면 못 만들 레이아웃은 없을 거임(?)\n\n```html\n<div class=\"box\">\n  <p>네모네모 멈뭄미</p>\n<div>\n```\n\n\n## 배경과 이미지 예쁘게 넣기\n\n배경 예쁘게 넣는 주요 CSS 속성들.\n\n```css\n.main-background {\n  width: 100%;\n  height: 500px;\n  background-image: url(IMAGE_PATH);\n  background-size: cover; /* 기본적으로 왼쪽부터 채움 */\n  background-repeat: no-repeat;\n  background-position: center;\n  background-attachment: fixed;\n  filter: brightness(70%)\n}\n```\n\n배경을 두 개 겹치려면 url 두 개 이상 명시해주면 됨.\n\n```css\n.main-background {\n  background-image : url(IMAGE_PATH_1), url(IMAGE_PATH_2);\n}\n```\n\n배경에 검은색 틴트 주기.\n\n```css\n.main-background {\n  background-image: linear-gradient(rgba(0,0,0,0.5), rgba(0,0,0,0.5)), url(IMAGE_PATH) ;\n```\n\n이미지를 가운데 정렬하기.\n\n```css\n/* 주의! padding 속성엔 auto 값을 지정할 수 없음 */\ndisplay: block;     /* 한 행을 전부 차지하게 됨 */\nmargin-left: auto;  /* 좌우 마진(바깥여백)을 자동으로 조절하면 가운데 정렬됨 */\nmargin-right: auto;\n```\n\n\n## display 속성\n\n### display: block\n\n한 행을 모두 차지함. 따라서 수직으로 쌓이며 새로운 줄에서 시작함. 대표 태그는 div, p 등.\n\n### display: inline\n\n요소의 크기에 맞춰 차지함. 따라서 수평으로 쌓이며 이어짐. 대표 태그는 span, a 등. 텍스트의 일부만 스타일을 변경하고 싶을 때 span 태그를 사용함.\n\n폭과 높이는 margin과 padding에만 영향을 받으므로 단독으로 결정할 수 없음. 이를 설정하고 싶으면 부모 태그의 폭과 높이를 설정해줘야 함.\n\n### display: inline-block\n\ninline 및 block 속성을 모두 가짐. 대표 태그는 img.\n\n* inline적 속성: 다른 인라인 요소와 수평으로 이어짐\n* block적 속성: 너비와 높이 조절이 가능하며, margin과 padding도 적용됨.\n\n이 속성을 사용하면 귀찮은 점이 좀 있음.\n\n1. 두 요소 간 공백이 없어야 함. 공백이 있으면 다음 요소가 줄바꿈되어 배치됨. 공백을 넣고 싶으면 부모 요소의 font-size 속성 값이 0이면 되지만 자식 요소들의 폰트 크기가 0이 돼버림...\n2. inline-block 속성 태그 내에 글씨를 써넣으면 레이아웃이 틀어질 수 있음. baseline이 틀어지기 때문. 이를 방지하려면 inline-block 요소에 `vertical-align: top` 속성을 추가해야 함.\n\ninline 요소 또는 inline-block 요소를 나열하면 서로 높이가 맞지 않는 경우가 있음. 이 때 margin-top 속성 대신 vertical-align 속성을 사용하면 됨.\n\n```css\ndiv {\n  display: inline | inline-block;\n  vertical-align: top | middle | bottom | super(위첨자) | sub(아래첨자) | px;\n}\n```\n\n### display: none\n\n요소를 숨김. 공간을 차지하지 않으므로 레이아웃에 영향을 주지 않음.\n\n### display: flex\n\nFlexbox 레이아웃을 사용하기 위한 값으로, 아래에서 자세히 설명.\n\n### display: grid\n\nGrid 레이아웃을 사용하기 위한 값으로, 아래에서 자세히 설명.\n\n\n## 레이아웃\n\n### 붕붕 띄우는 float 속성\n\nfloat 속성은 요소를 공중에 띄워 왼쪽 또는 오른쪽에 정렬함.\n\nfloat 속성이 적용된 요소 다음에 배치되는 요소는 이전 요소에 의해 가려짐. 따라서 margin 값을 줘도 적용이 안 되는 것처럼 보임. 왜냐하면 이전 요소는 떠 있는 것이고 그 다음 요소는 그 밑에 배치되는 것이기 때문.\n\n이 현상을 해결하려면 float 속성이 적용된 요소 다음에 `clear: both;` 스타일이 적용된 요소를 배치해주거나\n\n```html\n<div style=\"clear: both;\"></div>\n```\n\nfloat 속성을 마지막으로 사용한 요소에 ::after Pseudo-element를 사용하면 됨.\n\n```css\n.box::after {\n  content: '';\n  display: block;\n  clear: both;\n}\n```\n\n### 좌표 레이아웃\n\nposition 속성을 사용하면 좌표 이동이 가능할 뿐 아니라 공중에 뜨므로 다른 요소들과 겹치는 디자인을 만들 수 있음.\n\nposition 속성의 주요 값은 다음과 같음.\n\n* static: 좌표 이동을 하지 않고 고정\n* relative: 내 원래 위치 기준으로 이동\n* fixed: 현재 화면 기준으로 이동(주로 고정메뉴 만들 때 사용)\n* absolute: relative 값을 가진 부모 기준으로 이동\n\nposition 속성을 갖는 요소는 위치를 정하는 top, right, bottom, left 속성을 사용할 수 있음.\n\n```css\n.box {\n  position: static | relative | fixed | absolute;\n  top: 20px;\n  right: 30%;\n  bottom: 20px;\n  left: 30%;\n}\n```\n\nz-index는 떠 있는 요소들 순서를 맞춰주는 속성. z-index 값이 높을수록 앞쪽으로 배치됨.\n\n```css\n/* button과 box가 서로 겹쳐서 떠 있는 경우\n * button의 z-index 값이 더 높으므로 button이 box 위에 배치됨\n */\n.button { z-index: 2}\n.box { z-index: 1}\n```\n\n어떤 요소를 궁극의 가운데 정렬을 하고 싶다면 `position: absolute;` 설정을 주고 top, left, transform 속성을 차례로 주면 됨. 그러면 `position: relative;`를 가진 부모에 대해 정 가운데에 위치시킬 수 있음. width와 max-width 값도 주면 좋음.\n\n```css\n.video-container {\n  /* 어떤 요소를 궁극의 가운데 정렬 디자인 */\n  position: absolute;\n  width : 100%;\n  top: 50%;\n  left: 50%;\n  transform : translate(-50%,-50%);\n  z-index: -1;\n}\n```\n\n### Flex 레이아웃\n\nFlexbox 레이아웃은 자식 요소들을 가로 또는 세로로 정렬함. Flexbox 레이아웃은 width 값이 정확히 맞지 않을 수 있으나 최대한 맞추려 노력은 함.\n\nFlexbox 레이아웃 설명은 https://css-tricks.com/snippets/css/a-guide-to-flexbox 에 알아보기 쉽게 잘 되어 있음.\n\n```css\n/* 부모 요소 */\n.flex-container {\n  display: flex;\n  flex-direction: row | row-reverse | column | column-reverse;\n  flex-wrap: nowrap | wrap | wrap-reverse;\n  justify-content: flex-start | flex-end | center | space-between | space-around | space-evenly | start | end | left | right ... + safe | unsafe;\n  align-items: stretch | flex-start | flex-end | center | baseline | first baseline | last baseline | start | end | self-start | self-end + ... safe | unsafe;\n  align-content: flex-start | flex-end | center | stretch | space-between | align-content: flex-start | flex-end | center | space-between | space-around | space-evenly | stretch | start | end | baseline | first baseline | last baseline + ... safe | unsafe;\n\n  gap: 10px;\n  gap: 10px 20px; /* row-gap column gap */\n  row-gap: 10px;\n  column-gap: 20px;\n}\n```\n\n`flex-direction` 속성은 주축의 방향을 정함.\n\n![Flex flex-direction](./images/flex-direction.svg)\n\n`flex-wrap` 속성은 요소를 흘러내림(wrap) 처리할 것인지를 정함.\n\n![Flex flex-wrap](./images/flex-wrap.svg)\n\n`justify-content` 속성은 주축을 따라 요소를 어떻게 배치할 것인지를 정함.\n\n![Flex justify-content](./images/flex-justify-content.svg)\n\n`align-items` 속성은 교차축을 따라 요소를 어떻게 배치할 것인지를 정함.\n\n![Flex align-items](./images/flex-align-items.svg)\n\n`align-content` 속성은 교차축에 여유 공간이 있을 때 요소를 어떻게 배치할 것인지를 정함.\n\n![Flex align-content](./images/flex-align-content.svg)\n\n`gap` 속성은 행열 간격을 줌.\n\n![Flex gap](./images/flex-gap.svg)\n\n`flox-grow` 속성은 Flexbox의 자식 요소에만 사용하는 속성으로, 상대적인 크기(폭)가 얼마나 되는지를 결정.\n\n```css\n.flex-container { display: flex; }\n.flex-box { flex-grow : 2; }\n```\n\n첫 요소는 왼쪽, 마지막 요소는 오른쪽에 정렬하려면, 중간 요소에 `flex-grow: 1` 속성을 줘서 사이즈를 크게 키워주면 나머지 요소들이 좌우측으로 퍼짐.\n\n```html\n<div class=\"flex-container\">\n  <div class=\"box\"></div>\n  <div class=\"box\" style=\"flex-grow : 1\"></div>\n  <div class=\"box\"></div>\n</div>\n```\n\n### Grid 레이아웃\n\nGrid 레이아웃은 격자(모눈종이)처럼 요소를 배치함.\n\n```css\n.grid-container {\n  display: grid;\n  grid-template-columns: 100px 100px 100px 100px;\n  grid-template-rows: 100px 100px;\n}\n.grid-container div {\n  border: 1px solid black;\n}\n\n.grid-container-2 {\n  grid-template-columns: 2fr 1fr 1fr;\n  grid-template-rows: 1fr 1fr;\n  height: 500px;\n}\n\n```\n\n`grid-template-column` 속성은 요소를 배치할 세로 칸 개수와 사이즈를 정함. px 단위 외에 fr 단위(배수와 비슷)를 사용할 수 있음.\n\n`grid-template-rows` 속성은 요소를 배치할 가로 칸 개수와 사이즈를 정함. px 단위 외에 fr 단위(배수와 비슷)를 사용할 수 있으나, height 속성이 있어야 적용됨\n\nGrid 레이아웃에서 요소를 배치하는 방법은 두 가지가 있음. 첫 번째 방법은 자식 요소의 위치와 크기를 선언하는 방법.\n\n```css\n.grid-container {\n  display: grid;\n  grid-template-rows: 100px 100px 100px ; /* height 속성 값이 있어야 적용됨 */\n  grid-template-columns: 100px 100px 100px 100px ;\n  grid-gap: 10px; /* 격자 간격 */\n}\n.grid-container div {\n  border: 1px solid black;\n}\n\n/* Grid 컨테이너 내 요소들의 영역 설정 */\n.grid-nav { grid-column: 1 / 5;  /* 세로선 1 ~ 4 만큼의 크기 차지 */ }\n.grid-sidebar { grid-row: 2 / 4; /* 가로선 2 ~ 4 만큼의 크기 차지 */ }\n.grid-page {\n  grid-column: 2 / 5;\n  grid-row: 2 / 4;\n}\n```\n\n두 번쨰 방법은 부모 컨테이너에 자식을 어떻게 배치할 것인지 선언하는 방법.\n\n```css\n.grid-container {\n  display: grid;\n  grid-template-rows: 100px 100px 100px ; /* height 속성 값이 있어야 적용됨 */\n  grid-template-columns: 100px 100px 100px 100px;\n  grid-gap: 10px;\n\n  /* 2.자식 요소 Grid 배치 및 크기 설정 */\n  grid-template-areas:\n    \"navbar navbar navbar navbar\"\n    \"sidebar page page page\"\n    \"sidebar page page page\"\n}\n.grid-container div {\n  border: 1px solid black;\n}\n\n/* 1. 자식에 이름을 부여한 후 */\n.grid-nav { grid-area: navbar; }\n.grid-sidebar { grid-area: sidebar; }\n.grid-page { grid-area: page; }\n```\n\n```html\n<div class=\"grid-container\">\n  <div class=\"grid-nav\">Nav Bar</div>\n  <div class=\"grid-sidebar\">Side Bar</div>\n  <div class=\"grid-page\">Page</div>\n</div>\n```\n\n### 반응형 레이아웃\n\n반응형 레이아웃은 PC, 태블릿 및 모바일 기기마다 레이아웃을 다르게 하는 기법. 반응형 웹을 만들 때 head 태그 안에 아래 meta 태그가 들어가야 함.\n\n```html\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n```\n\n미디어 쿼리를(Media Query) 사용하면 스크린 사이즈 별 디자인을 만들 수 있음. 미디어 쿼리 문법은 맨 밑에 있어야 잘 작동함.\n\n```css\n/* 브라우저 폭이 각각 1200px, 768px, 576px 이하일 경우 디자인 */\n@media screen and (max-width: 1200px){ }\n@media screen and (max-width: 768px){ }\n@media screen and (max-width: 576px){ }\n```\n\n권장 Breakpoint는 Bootstrap 라이브러리가 권장하는 1200px(태블릿), 992px, 768px, 576px(모바일)임.\n\n어느 값을 태블릿 사이즈로 볼지, 모바일로 볼지는 정해진 바 없음. Breakpoint를 많이 쓰면 스타일 관리하기가 힘들어지므로 1200px 이하는 태블릿, 768px 이하는 모바일 이렇게 디자인하는 게 간편함.\n\n\n## 애니메이션\n\n### Transition 속성\n\ntransition 속성은 주로 A -> B로 이동하는 애니메이션을 만들 때 사용함. 이 때 4가지 단계를 거치면 됨.\n\n1. 시작 스타일 만들기\n2. 최종 스타일 만들기\n3. 언제 최종 스타일로 변하는지 명시\n4. transition 속성으로 애니메이션 추가\n\n### Transform 속성\n\ntransform 속성을 사용한 애니메이션은 transition 속성을 사용하는 것보다 성능과 확장성이 좋음. 주요 속성은...\n\n```css\n.box {\n  transform: rotate(10deg);         /* 시계방향 회전 */\n  transform: translate(10px, 20px); /* 좌표 이동 */\n  transform: translateX(10px);      /* X축 이동 */\n  transform: translateY(10px);      /* Y축 이동 */\n  transform: scale(2);              /* 확대 */\n  transform: skew(20deg);           /* 비틀기 */\n  \n  /* transform 두개 이상을 한꺼번에 쓰려면 */\n  transform: rotate(10deg) translateX(30px);\n}\n```\n\n### 키프레임 애니메이션\n\n키프레임을 사용하면 복잡한 애니메이션을 구현할 수 있음.\n\n```css\n/* 키프레임으로 복잡한 애니메이션 정의 */\n@keyframes ani {\n  /* 애니메이션이 몇 % 진행됐을 때의 스타일 상태 정의 */\n  0% { transform: translateX(0px); }\n  33.33% { transform: translateX(-50px); }\n  66.66% { transform: translateX(50px); }\n  100% { transform: translateX(0px); }\n}\n\n.ani-text:hover {\n  animation-name: ani;          /* 애니메이션 키프레임 이름 */\n  animation-duration: 1s;       /* 애니메이션 지속 시간 */\n  animation-delay: 0.1s;        /* 애니메이션 시작 딜레이 */\n  animation-iteration-count: 2; /* 애니메이션 반복 횟수 */\n  animation-timing-function: linear | cubic-bezier(0.075, 0.82, 0.165, 1) /* 베지어(처음에 빨리 실행할지, 나중에 빨리 실행할지 등 설정) */\n  animation-fill-mode: forwards; /* 애니메이션이 끝나도 원상복구 하지 않는 설정  */\n}\n```\n\n### 애니메이션 성능 개선\n\nwill-change 속성을 사용하면 성능 개선이 가능함. 바뀔 내용을 미리 렌더링해주기 때문이지만 많이 쓰면 브라우저가 느려질 수 있으므로 애니메이션이 잘 작동한다면 굳이 쓸 이유가 없음.\n\n```css\n.box { will-change: transform; /* 애니메이션줄 속성 입력 */ }\n```\n\n애니메이션이 너무 많아 CPU만으로 전부 연산이 불가하다면 GPU의 도움을 받을 수 있음. translate3d() 함수로 아무런 움직 임을 주지 않는 3D 이동 명령을 준 후 뒤에 필요한 transform을 적용하면 GPU를 사용하게 됨.\n\n```css\n.box { transform: translate3d(0, 0, 0); }\n```\n\n\n## 부트스트랩(Bootstrap)\n\n부트스트랩은 웹 페이지에 필요한 메뉴, 버튼, 탭, 모달, 카드 등의 필수 요소들을 모아놓은 일종의 CSS 파일. 이걸 가져다 쓰면 디자인 시간이 매우 단축됨.\n\n설치하려면 bootstrap.min.css 및 bootstrap.bundle.min.js 가져오는 태그를 가져와서 HTML에 넣어야 함. 설치 방법은 [Download - Bootstrap v5.3](https://getbootstrap.com/docs/5.3/getting-started/download/) 참고\n\n```html\n<!-- head 태그 안에 CSS 첨부 -->\n<link href=\"bootstrap.min.css_PATH\" rel=\"stylesheet\">\n\n<!-- body 태그 끝나기 직전에 js 첨부 -->\n<script src=\"bootstrap.js_PATH\"></script>\n```\n\n이제 [getbootstrap.com](getbootstrap.com)에 방문하여 마음에 드는 UI 요소를 돌라 웹 개발하면 됨.\n\nBootstrap에서 제공하는 디자인은 대부분 공통 디자인이므로 디자인을 입맛에 맞게 수정할 수 있음.\n\n### Utility Class\n\nclass 이름을 줘서 margin, padding, font-size, text-align 등의 속성 값을 줄 수 있음.\n\n```html\n<div class=\"container\">이쁜 여백을 가진, 너비 크기가 유동적인 컨테이너</div>\n<div class=\"container-fluid\">이쁜 여백을 가진, 항상 100% 너비인 컨테이너</div>\n<div class=\"mt-5\">margin-top 값 주기</div>\n<div class=\"pb-5\">padding-bottom 값 주기</div>\n<div class=\"fs-3\">font-size 값 주기</div>\n<div class=\"text-center\">text-align 값 주기</div>\n<div class=\"fw-bold\">font-weight 값 주기</div>\n<div class=\"w-50\">가로폭 % 설정</div>\n```\n\n### 부트스트랩 Grid 레이아웃\n\n부트스트랩 Grid 레이아웃을 사용하면 박스를 균일하게 쪼갤 수 있음. \n\n```html\n<div class=\"row\">\n  <div class=\"col-2\">안녕</div>\n  <div class=\"col-4\">안녕요</div>\n  <div class=\"col-6\">안녕하세요</div>\n</div>\n```\n\n.row는 안쪽을 12등분하는 클래스 명이고 col-4는 12개 중 4칸 차지하겠다는 클래스 명임. 따라서 합산이 12가 되도록 쪼개면 됨. 합산 값이 12가 넘어가는 요소부터 다음 줄로 넘어감.\n\nGrid 레이아웃을 반응형으로 만들려면 `col-NUM` 중간에 xs, sm, md, lg, xl, xxl 값을 넣어주면 됨. 예를 들어 md를 넣으면 폭이 768px 이상인 기기에서 해당 스타일을 적용하라는 뜻. 그 이하인 기기에선 해당 요소가 다음 줄로 넘어감. 자세한 내용은 [Grid system - Bootstrap v5.3](https://getbootstrap.com/docs/5.3/layout/grid/) 참고.\n\n### Order Class\n\nOrder class를 사용하면 박스의 배치 순서를 정할 수 있음.\n\n```html\n<div class=\"container text-center\">\n  <div class=\"row\">\n    <div class=\"col\">\n      First in DOM, no order applied\n    </div>\n    <div class=\"col order-5\">\n      Second in DOM, with a larger order\n    </div>\n    <div class=\"col order-1\">\n      Third in DOM, with an order of 1\n    </div>\n  </div>\n</div>\n```\n\nOrder class도 마찬가지로 반응형을 적용할 수 있음. (예: order-md-1, order-xl-2 등)\n\n\n## Shadow DOM\n\ninput 태그에 placeholder 속성 값을 넣으면 회색 글씨가 input 요소 안에 생성되는데, 이 회색 글씨의 스타일을 바꾸고 싶다면 Shadow DOM을 까봐야 함.\n\n크롬 개발자 도구 HTML 요소에서 해당 태그를 보면 `<div pseudo=\"-webkit-input-placeholder\" ~>` 라는 태그가 보임. 이 태그에 스타일을 주면 됨. (참고로 -webkit- 수식어는 크롬, 오페라, 사파리, Edge 브라우저에서만 동작하는 스타일을 만들 때 사용함. 파이어폭스는 -moz-, 익스플로러는 -ms- 이렇게 붙여주면 됨.)\n\n```css\ninput::-webkit-input-placeholder {\n  color : skyblue; \n}\n```\n\n이 외에 다른 Shadow DOM 요소들(스크롤바, 드래그 시 하이라이트되는 파란색 색상, 파일 업로드 버튼 등)에 스타일을 줄 수 있음.\n\n또는 크롬 개발자 도구에서 shadow DOM에 있는 요소를 선택한 후 개발자 도구 하단의 CSS 부분에 user agent stylesheet 부분에 표시된 셀렉터에 스타일을 줄 수 있음.\n\n\n## SCSS\n\nSCSS는 프로그래밍 언어처럼 CSS를 작성할 수 있게 해주는 전처리기. CSS 코딩 및 작성을 편하게 하기 위해 사용.\n\nVisual Studio Code에서 Live Sass Compiler 5 버전 이상 설치해서 쓰면 됨.\n\n변수를 선언하려면 변수명에 `$`를 붙이면 됨.\n\n```scss\n$main-color: #eee;\n.box { background-color: $main-color; }\n```\n\n사실 CSS에도 변수 문법이 있지만 쓰기 귀찮음.\n\n```css\n:root { --main-color: red; }\n.box {background-color: var(--main-color); }\n```\n\n사칙연산은 피연산자끼리 단위가 맞으면 가능함.\n\n```scss\n$default-size: 16px;\n.box { \n  font-size: $default-size + 2px;\n  width: (300px * 2);\n  height: (100px / 4);\n}\n```\n\n사실 CSS로도 사칙연산이 가능하지만, 역시 쓰기 귀찮음.\n\n```scss\n.box { font-size: calc(40% -20px); }\n```\n\nNesting 문법을 사용하면 괄호 안에 괄호를 써서 자식 요소에 스타일링을 할 수 있음.\n\n```scss\n/* CSS */ \n.main-bg h4 { font-size: 16px; }\n.main-bg button { color: red; }\n\n/* SCSS */\n.main-bg {\n  h4 { font-size: 16px; }\n  button { color: red; }\n}\n```\n\n중복되는 코드는 @extend 문법을 사용하여 임시 클래스를 만든 뒤 상속할 수 있음. 참고로 임시 클래스는 단독으로 컴파일되지 않음. 즉 임시클래스만 작성하면 CSS 코드로 변환되지 않음.\n\n```scss\n/* 임시 클래스 선언 */\n%btn {\n  width: 100px;\n  height: 50px;\n  padding: 10px;\n}\n\n.btn-red {\n  @extend %btn; /* 임시 클래스 상속 */\n  color: red;\n}\n```\n\n클래스 명에 Extend 문법을 사용할 수도 있음.\n\n```scss\n.btn {\n  width: 100px;\n  height: 50px;\n  padding: 10px;\n}\n\n.btn-red {\n  @extend .btn; /* 코드 상속 */\n  color: red;\n}\n```\n\nMixin 문법을 사용하면 함수처럼 만들어 쓸 수 있음. 이 떄 CSS에서 사용 가능한 속성 이름을 매개변수로 받을 수 있음\n\n```scss\n@mixin fontSize($size){\n  font-size: $size;\n  letter-spacing: -1px;\n}\n@mixin fontStyle($name, $value){\n  #{ $name }: $value;\n}\n\nh3 { @include fontSize(40px); }\nh4 { @include fontSize(30px); }\nh5 { @include fontStyle(letter-spacing, -1px); }\n```\n\nUse 문법을 사용하면 다른 scss 파일에 있는 내용을 가져올 수 있음.\n\n```scss\n@use 'reset.scss';\n@use 'reset2'; // 확장자 생략 가능\n\nh2 { color: reset.$mainColor; } // import한 scss 파일 내 변수 사용 가능\n```\n\n사실 CSS 문법에도 Use 문법같이 Import 하는 문법이 있으나 더 이상 알기 귀찮으므로(?) 생략...\n\n\n## 팁... 같은 것\n\n### 좋은 코드란?\n\n나중에 수정, 관리하기 쉽고 확장성이 좋으면(재활용이 가능하면) 좋은 코드임.\n\n![친환경 프로그램](./images/eco-friendly-program.png)\n\n### CSS 파일 작성 시 기본으로 쓰면 좋을 속성들\n\n기본으로 복붙하고 시작할 필수 기본값 CSS 리스트를 하나 만들어두고 업데이트하며 사용하면 좋음.\n\n```css\ndiv { box-sizing: border-box; }\nbody { margin: 0px; }\nhtml { line-height: 1.15; }\nli, a { text-decoration: none; }\nh1, h2, h3, h4, h5, h6, p { margin: 균일하게; }\ntable { border-collapse: collapse; }\n```\n\n### CSS Normalize\n\n브라우저마다 일부 HTML 요소의 디자인이 다를 수 있음. [CSS Normalize](https://github.com/necolas/normalize.css/blob/master/normalize.css)를 사용하면 브라우저간 다르게 보이는 문제를 미리 해결할 수 있음.\n\n### Class 작명법\n\nOOCSS(Object Oriented CSS)는 공용 class와 개별 class를 각각 제작하는 방법. 여러 요소에서 공통적으로 사용하는 class를 만들어 사용함. 그렇지 않으면 모든 요소의 CSS를 다 수정해야...\n\n```html\n<button class=\"main-btn bg-red f-lg\">빨간 버튼 누를래</button>\n<button class=\"main-btn bg-blue f-mid\">파란 버튼 누를래</button>\n```\n\n```css\n/* 공용 클래스 */\n.main-btn {\n  padding: 15px;\n  font-size: 20px;\n  border: none;\n  cursor: pointer;\n}\n\n/* 개별 클래스 */\n.bg-red { background: red; }\n.bg-blue { background: blue; }\n\n/* Bootstrap에서 사용하는 Utility class */\n.f-small { font-size: 12px; }\n.f-mid { font-size: 16px; }\n.f-lg { font-size: 20px; }\n```\n\n내가 Class 이름을 작명하는 데 재능이 없다면 BEM(Block__Element--Modifier, 덩어리이름__역할--세부특징)을 사용하면 됨. 물론 꼭 이렇게 따라해야 하는 건 아니고, Block-Element와 같은 형식으로 쓸 수도 있음.\n\n```html\n<div class=\"profile\">\n  <img class=\"profile__img\">\n  <h4 class=\"profile__title\"></h4>\n  <p class=\"profile__content\"></p>\n  <button class=\"profile__button--red\">버튼1</button>\n  <button class=\"profile__button--blue\">버튼2</button>\n</div>\n```\n\nReact나 Vue 등을 사용한다면 OOCSS나 BEM을 굳이 안 써도 됨. 컴포넌트 단위로 HTML을 짜는데 컴포넌트에서만 사용 가능한(종속된) CSS를 사용할 수 있어서 다른 컴포넌트와 class 이름이 겹쳐도 문제되지 않기 때문.\n\n### Emmet\n\nEmmet을 사용하면 적게 입력하여 CSS 코드를 작성할 수 있음. 요즘 Visual Studio Code는 자동으로 지원함.\n\n`m10`을 입력하면 `margin: 10px` 코드가 자동 생성됨.\n\n이 외의 주요 CSS Emmet은...\n\n* mt10: margin-top: 10px;\n* w100%: width: 100%\n\n### CSS 코드 덮어쓰기\n\n협업하면서 CSS 코드를 덮어써야 하는 경우 여러 방법이 있음.\n\n1. 같은 클래스명 하단에 쓰기: 새로운 css 파일을 만들어 같은 클래스명으로 더 밑에 작성하는 방법.\n2. 우선순위 높이기: 속성 뒤에 `!important;`를 붙이면 무조건 스타일이 적용됨. 하지만 더 큰 힘으로 억누르는 건 근본적인 해결책이 아님.\n3. Specificity 높이기: 어떤 요소를 선택할지 자세히 명시할수록 그만큼 스타일 적용 우선순위가 높아짐.\n\n```css\n.custom { color: red; }                    /* Specificity 낮아서 적용 안 됨 */\n.container .custom { color: green;}\ndiv.container .custom { color: blue; }\ndiv.container p.custom { color: skyblue; } /* Specificity 가장 높아서 적용됨 */\n```\n\n"},{"excerpt":"Default Private Posts This is a default private post. It's recommended not to delete this posts 😵 (현재 이 포스트는 삭제하지 말아주세요.)","fields":{"slug":"/default/private-default/"},"frontmatter":{"date":"January 01, 2024","title":"Default Private","description":null,"tags":["private-tag"],"series":null,"previewImage":"banned.png","isPrivate":true},"rawMarkdownBody":"\n## Default Private Posts\n\nThis is a default private post. It's recommended not to delete this posts 😵\n\n(현재 이 포스트는 삭제하지 말아주세요.)\n"},{"excerpt":"스포일러를 주의하십시오!!! 평소 영화랑 애니메이션 안 보다가 연말에 볼만한 게 눈에 띄어서 몰아본 후 적어본 짤막한 후기. 서울의 봄  그럴 일은 없겠지만 만에 하나 내가 높으신 분의 자리에 올라간다면 빌런 짓을 하지 않을까... 빌런 짓은 하지 않더라도 저런 비상 사태가 터졌을 때 상황을 통솔할만한 깜냥이 과연 될까... 😭 라는 생각을 하게 만든 영…","fields":{"slug":"/video/2023-12-review-movie-anime/"},"frontmatter":{"date":"December 31, 2023","title":"2023년 연말에 몰아서 본 영화 및 애니메이션 후기","description":"2023년 연말에 몰아서 본 영화 및 애니메이션 후기","tags":["video"],"series":"비디오 편집","previewImage":"video.jpg","isPrivate":null},"rawMarkdownBody":"\n**스포일러를 주의하십시오!!!**\n\n평소 영화랑 애니메이션 안 보다가 연말에 볼만한 게 눈에 띄어서 몰아본 후 적어본 짤막한 후기.\n\n\n## 서울의 봄\n\n![서울의 봄 포스터](./images/1212_TheDay.jpeg)\n\n그럴 일은 없겠지만 만에 하나 내가 높으신 분의 자리에 올라간다면 빌런 짓을 하지 않을까... 빌런 짓은 하지 않더라도 저런 비상 사태가 터졌을 때 상황을 통솔할만한 깜냥이 과연 될까... 😭 라는 생각을 하게 만든 영화입니다.\n\n\n## 그대들은 어떻게 살 것인가\n\n![그대들은 어떻게 살 것인가 포스터](./images/TheBoyAndTheHeron.webp)\n\n다 보자마자 든 생각은...? ??? ????? 난해하다. 이건 뭐 미야자키 까마오도 아니고... 그래서 어떻게 살라는 거임? 😵‍💫\n\n주인공인 마히토는 어린 나이에 전쟁으로 어머니를 여읩니다. 전학간 학교에서 따돌림을 당한 마히토는 분노하여 자신의 옆머리를 돌로 내리찍습니다. 마히토의 아버지는 그가 겪는 문제를 해결해주지 못합니다. 그런 와중에 왜가리는 마히토를 도발합니다. 이에 어그로(?)가 끌린 마히토는 탑에 들어간 후 왜가리와 함께 이세계로 빨려들어갑니다. \n\n이세계(탑 내부?)는 마히토의 큰할아버지가 현실을 도피하여 창조한 세계입니다. 노쇠한 큰할아버지는 마히토에게 자신의 후계자가 되어 블럭을 쌓아 이세계의 평화를 만들어달라고 권유합니다. 하지만 마히토는 옆머리에 난 흉터를 보여주며 그럴 자격이 없다며 거절합니다. 결국 앵무새 왕에 의해 이세계는 무너져내리고, 마히토는 무사히 탈출하여 현실세계로 되돌아옵니다.\n\n곰곰이 생각해보니 마히토의 큰할아버지처럼 살 것인가, 그의 아버지처럼 살 것인가, 아니면 마히토 본인처럼 살 것인가를 이야기하는 것 같습니다. 즉 괴로운 현실을 도피하며 살 것인가, 현실에 당면한 문제를 해결하지 못하며 살 것인가, 아니면 현실이 괴롭지만 이를 극복하며 살 것인가... 왠지 답은 정해진 것 같습니다. 🤨\n\n어쩌면 이렇게 살라는 것일지도 모르겠습니다(?) 😅\n\n<video controls width=\"100%\">\n  <source src=\"./videos/MiyazakiHayao_HowToLive.mp4\" type=\"video/mp4\">\n  Sorry, your browser doesn't support embedded videos, but don't worry, you can\n  <a href=\"./videos/MiyazakiHayao_HowToLive.mp4\">download it</a>\n  and watch it with your favorite video player!\n</video>\n\n\n## 소년시대\n\n![소년시대 포스터](./images/Boyhood.webp)\n\n웅장이 가슴해지는(?) 찌질이의 인싸극. 임시완 배우의 다재다능한 연기가 미쳤따리... 입소문 듣고 하루 한 편씩 보려했다가 하루만에 다 봐버렸습니다. 😅\n\n\n## 플루토\n\n![플루토 포스터](./images/Pluto.webp)\n\n인간의 증오는 끝이 없고 같은 실수를 반복한다는 걸 보여주는 애니메이션. 39차 분쟁, 99회 재판, 99억명의 인간 등 첫자릿수가 9인 숫자가 많이 언급되는데, 이런 숫자에 1을 더하면 첫자릿수가 0이 되어 새롭게 시작됨을 암시하는 것 같습니다. 즉 증오는 멈추지 않고 반복됨을 은유적으로 표현한 게 아닐까 싶습니다.\n\n편당 1시간 분량이어서 보다가 지루할 수 있지만 작화가 워낙 좋다보니 꼭 그렇지만도 않습니다. 그리고 아톰이 등장하는 분량이 적어서 좀 아쉽기도 합니다. 😅\n\n\n## 고려거란전쟁\n\n![고려거란전쟁 포스터](./images/KoreaKhitanWar.webp)\n\n아직 방영 중이지만 본방사수급으로 챙겨보는 드라마여서 넣어봤습니다. 집에 가서 구박당하는 강감찬의 모습과 소배압에게 쫓기는 태조 왕건의 장면이 일품! 🤣 🤣 🤣"},{"excerpt":"Visio는 Microsoft Office에 기본적으로 포함되어 있지 않아 Office Deployment Tool로 따로 설치해야 하는데, 폐쇄망에서 설치에 필요한 파일을 내려받을 수 없는 경우가 있습니다. 이 경우 외부망에 연결된 PC로 설치 파일을 내려받은 후 폐쇄망 PC로 설치 파일을 복사하여 설치해야 합니다. 🤔 설치방법 외부망에 연결된 PC에서…","fields":{"slug":"/system/how-to-install-visio-in-a-closed-network/"},"frontmatter":{"date":"December 11, 2023","title":"폐쇄망에 연결된 PC에서 Microsoft Visio 설치 방법","description":"폐쇄망에 연결된 PC에서 Microsoft Visio 설치 방법","tags":["system"],"series":"시스템 관리","previewImage":"system.jpg","isPrivate":null},"rawMarkdownBody":"\n![폐쇄망 PC에서 Visio 설치 오류](./images/Error_VisioSetup.png)\n\nVisio는 Microsoft Office에 기본적으로 포함되어 있지 않아 Office Deployment Tool로 따로 설치해야 하는데, 폐쇄망에서 설치에 필요한 파일을 내려받을 수 없는 경우가 있습니다.\n\n이 경우 외부망에 연결된 PC로 설치 파일을 내려받은 후 폐쇄망 PC로 설치 파일을 복사하여 설치해야 합니다.\n\n\n## 🤔 설치방법\n\n1. 외부망에 연결된 PC에서 Office Deployment Tool를 다운로드합니다. 기업용인 경우 [Microsoft 365 관리 센터(구 볼륨라이선스 관리 센터)](https://admin.microsoft.com)에서 다운로드 받을 수 있습니다.\n2. Office Deployment Tool 실행 후 압축 풀 경로를 지정하면 configuration.xml 파일과 setup.exe 파일이 생성됩니다. configuration.xml 파일을 텍스트 편집기로 열어 Visio만 설치하도록 아래와 같이 수정합니다.\n\n```xml\n<Configuration>\n  <Add OfficeClientEdition=\"64\" Channel=\"PerpetualVL2021\">\n    <!-- Product 태그의 PIDKEY 속성에 키 값을 입력하는 것도 가능한 듯(테스트 안 해봄...) -->\n    <Product ID=\"VisioStd2021Volume\" PIDKEY=\"XXXXX-XXXXX-XXXXX-XXXXX-XXXXX\">\n      <Language ID=\"ko-kr\" />\n    </Product>\n    <!-- 여기에 다른 MS Office 제품 Product ID 태그를 추가하면 여러 제품을 동시에 설치할 수 있는 듯(테스트 안 해봄...)-->\n    <!-- <Product ID=\"ProPlus2021Volume\" PIDKEY=\"XXXXX-XXXXX-XXXXX-XXXXX-XXXXX\">\n      <Language ID=\"ko-kr\" />\n      <ExcludeApp ID=\"Lync\" />\n    </Product> -->\n  </Add>\n\n  <!-- Remove 태그의 All 속성 값이 True면 Visio 설치완료 후 설치된 MS Office를 모두 삭제하므로 주석 처리-->\n  <!-- <Remove All=\"True\" /> -->\n</Configuration>\n```\n\n위 태그의 Channel 속성과 ID 속성에 들어가는 값은 보유 중인 라이선스에 따라 다릅니다. [간편 실행을 위한 Office 배포 도구에서 지원하는 제품 ID 목록](https://learn.microsoft.com/ko-kr/microsoft-365/troubleshoot/installation/product-ids-supported-office-deployment-click-to-run) 참고.\n\n3. 외부망에 연결된 PC에서 `setup /download configuration.xml` 명령어로 설치파일을 다운로드 합니다.\n4. 3번 과정에서 다운로드가 완료되면 다운로드된 파일을 폐쇄망에 연결된 PC로 복사합니다.\n5. 폐쇄망에 연결된 PC에서 `setup /configure configuration.xml` 명령어로 설치합니다.\n\n\n## 😭 자꾸 2016 버전으로 실행되는 경우\n\nMS 오피스 2021 버전을 설치했음에도 2016 버전으로 실행되는 경우 오피스 라이선스 삭제 후 재인증해주면 됩니다.\n\n1. 라이선스 정보 확인: 오피스 설치된 경로로 이동하여 `cscript ospp.vbs /dstatus` 명령어 실행 후 Last 5 characters of Installed product key 확인\n2. `cscript ospp.vbs /unpkey:5KEY` 명령어 실행하여 라이선스 삭제(5KEY에 Last 5 characters of Installed product key 값 입력)\n3. 오피스 프로그램 실행 후 정품 인증"},{"excerpt":"코딩애플 git & github 강의 듣고 정리한 것들. 🤔 Git? Git은 파일 변경내역을 보존하고 관리하기 위해 사용. 그렇지 않고 이전 내역으로 되돌리려면 최종, 진짜최종, 찐최종, 레알최종 등의 이름으로 파일 복사본을 만들어둬야 함. 1️⃣ 초기설정 스테이징과 커밋 Add와 Commit 과정을 나눠놓는 이유는 모든 파일을 기록할 필요가 없으므로(예:…","fields":{"slug":"/coding/using-git/"},"frontmatter":{"date":"December 10, 2023","title":"Git & GitHub 사용법 간단 정리","description":"Git & GitHub 사용법 간단 정리","tags":["coding"],"series":"코딩","previewImage":"coding.jpg","isPrivate":null},"rawMarkdownBody":"\n![코딩의 효능](./images/EfficacyOfCoding.jpg)\n\n[코딩애플 git & github](https://codingapple.com/course/git-and-github) 강의 듣고 정리한 것들.\n\n## 🤔 Git?\n\nGit은 파일 변경내역을 보존하고 관리하기 위해 사용.\n\n그렇지 않고 이전 내역으로 되돌리려면 최종, 진짜최종, 찐최종, 레알최종 등의 이름으로 파일 복사본을 만들어둬야 함.\n\n## 1️⃣ 초기설정\n\n```shell\n# 기본 브랜치 이름을 master가 아닌 main으로 설정\n# (GitHub는 기본 브랜치 이름을 main으로 사용하라고 강요하므로 해두는 게 좋음)\n$ git config —-global init.defaultBranch main\n\n# 기본 Git의 에디터를 vim이 아닌 vs code로 설정\n$ git config —-global core.editor “code —wait”\n\n# 유저 이메일과 이름 설정\n$ git config --global user.email \"이메일\"\n$ git config --global user.name \"이름\"\n```\n\n## 스테이징과 커밋\n\n**Add와 Commit 과정을 나눠놓는 이유**는 모든 파일을 기록할 필요가 없으므로(예: 이미지 파일) git add로 기록할 파일을 고르고 git commit으로 고른 파일을 기록저장소로 옮기기 위함임.\n\n**Git을 사용하는 방식은 작업폴더 → Staging area → Repository**\n* Staging area는 Commit할 파일을 골라놓는 곳이며, 여기에 파일을 골라넣는 행위를 Staging이라고 함.\n* Repository는 Commit된 파일의 버전들을 모아놓은 곳.\n\n```shell\n# git 초기화\n$ git init\n\n# 스테이징\n$ git add 파일명\n$ git add 파일명1 파일명2\n$ git add .  ## 모든 파일 스테이징 \n$ git add *  ## 모든 파일 스테이징 \n\n# 커밋\n$ git commit -m '커밋 메시지'\n\n# 상태 출력\n$  git status \n\n# 로그 출력(로그 출력 시 나오는 HEAD가 현재 위치를 가리킴)\n$ git log --all --oneline\n```\n\n## 🌱 브랜치(Branch) 만들기\n\n브랜치는 메인 줄기에서 뻗어나온 복사본과 같은 것. 여러 개발자들이 협업할 때 자기만의 브랜치를 만들어 테스트 후 잘 된다면 Main 브랜치에 합치는 방식으로 사용.\n\n```shell\n$ git branch 브랜치명  # 브랜치 생성\n$ git switch 브랜치명  # 해당 브랜치로 이동\n$ git status         # 브랜치 확인\n$ git log --oneline --all --graph  # 브랜치 구조를 그래프로 출력\n```\n\n브랜치를 합치려면 기준이 되는 브랜치로 이동한 후 merge를 수행함.\n\n```shell\n$ git switch main   # main 브랜치로 이동한 후\n$ git merge 브랜치명  # main 브랜치에 다른 브랜치를 합침\n```\n\nmain 브랜치와 다른 브랜치에서 같은 파일을 수정한 경우 Merge conflict가 발생함. main 브랜치를 기준으로 병합할지, 다른 브랜치를 기준으로 병합할지 모호하기 때문. 이 때 원하는 코드만 남긴 후 git add 및 git commit을 하면 됨.\n\n## 다양한 Git merge 방법\n\n**3-way merge**는 브랜치를 합쳐서 새로운 commit을 자동으로 생성하는 방식. 기본적인 방식임.\n\n모든 브랜치를 3-way merge 해버리면 복잡해보이며, main 브랜치의 git log 출력 시 3-way merge된 commit 내역도 다 출력돼서 더러워보이는 단점이 있음.\n\n![3-way merge](./images/Git_Merge_3Way.png)\n\n**fast-forward merge는** 신규 브랜치엔 새로운 commit이 있지만 main 브랜치엔 없는 경우 신규 브랜치의 commit을 main으로 지칭하는 방식.\n\n이 방식이 싫으면 `git merge --no-ff 브랜치명` 명령어를 실행해서 강제로 3-way merge를 수행.\n\n![fast-forward merge](./images/Git_Merge_FastForward.png)\n\n**rebase merge** 는 브랜치의 시작점을 다른 commit으로 옮김. 간단하고 짧은 브랜치들은 log 출력 시 깔끔해 보이는 장점이 있지만 conflict가 자주 난다는 단점이 있음.\n\n신규 브랜치의 시작점을 main 브랜치의 최근 commit으로 옮긴 후 fast-forward merge를 하는 경우가 있음. 이렇게 하면 commit 내역을 가지치기 하지 않고 계속 이어나갈 수 있음.\n\n```shell\n# rebase & merge 하는 방법\n$ git switch 신규브랜치  ## 신규 브랜치로 이동 후\n$ git rebase main     ## git rebase main 수행\n$ git switch main     ## main 브랜치로 이동후 \n$ git merge 신규브랜치   ## fast-forward merge 수행\n```\n\n![rebase merge](./images/Git_Merge_Rebase.png)\n\n**squash merge**는 새 브랜치에 있던 코드 변경사항들을 main 브랜치로 순간이동하는 방식.\n\n![https://codingapple.com/wp-content/uploads/2022/06/그림2.png](./images/Git_Merge_Squash.png)\n\n```shell\n# squash & merge 방법\n$ git switch main            ## main 브랜치로 이동 후\n$ git merge --squash 브랜치명  ## squash & merge 수행\n$ git commit -m \"메시지\"       ## 새 브랜치의 내용들이 순간이동\n```\n\n**브랜치 삭제**\n\n```shell\n$ git branch -d 브랜치명  # merge 완료된 브랜치 삭제\n$ git branch -D 브랜치명  # merge 안 한 브랜치 삭제\n```\n\n\n## 🔙 되돌아가기\n\n**파일 하나를 되돌리려면 git restore**\n\n```shell\n$ git restore 파일명                   ## 최근 commit된 상태의 파일로 되돌리기\n$ git restore --source 커밋아이디 파일명  ## 특정 커밋 아이디 시점으로 파일 되돌리기\n$ git restore --staged 파일명          ## 스테이징 취소하기\n```\n\n**commit을 되돌리려면 git revert**\n\n* revert 하면 commit을 없애는 게 아니고 commit을 취소한 commit을 생성함.\n* revert 할 때 여러 개의 commit ID를 입력할 수 있음.\n\n```shell\n$ git revert 커밋아이디  ## 특정 commit으로 되돌리기\n$ git revert HEAD     ## 최근 commit으로 되돌리기\n```\n\n**전부 되돌리고 싶으면 git reset**\n\nreset 하면 그 이후 commit은 사라짐\n\n```shell\n# 특정 commit으로 되돌리기\n## --hard 옵션: 특정 commit 이후에 생성된 파일이 삭제됨\n## --soft 옵션: 파일이 삭제되지 않고 Staging area에 남음\n## --mixed 옵션: 파일이 삭제되지 않고 Staging 되지 않은 상태가 됨\n$ git reset --hard 커밋아이디\n```\n\n\n## GitHub 사용법\n\nGit이 파일 기록해두는 장소가 리포지토리(Repository)이며, GitHub는 온라인 리포지토리.\n\nGitHub는 기본 브랜치 이름을 main으로 사용하라고 강요하므로 `git branch -M main` 명령어로 기본 브랜치 이름을 변경해야 함.\n\n원격저장소에 올리지 않는 파일이나 폴더들은 `.gitignore` 파일에 명시\n\n**로컬에서 GitHub 원격저장소로 올리기**\n\n```shell\n# 로컬에서 GitHub 원격저장소로 업로드\n$ git push -u 원격저장소주소 브랜치명  ## -u 옵션은 방금 입력한 주소를 기억하는 옵션. 다음부터는 `git push`만 입력해도 됨.\n$ git push origin 브랜치명         ## main 브랜치가 아닌 브랜치를 push\n```\n\n**리포지토리 주소 길게 입력하는게 귀찮으면?** 주소를 변수에 저장하여 사용하면 됨.\n\n```shell\n$ git remote add 변수명 원격저장소주소    ## 변수 지정\n$ git remote add origin 원격저장소주소  ## 보통 origin 변수에 리포지토리 주소 저장\n$ git remote -v                     ## 변수 목록 출력\n```\n\n### 타인과 협업하기(git clone, pull)\n\n**원격저장소 복제하기**\n\n* `git clone 원격저장소주소` 명령어로 원격저장소 그대로 내려받은 후 commit 하고 push 하면 됨. 다만 GitHub 원격저장소 Settings의 Collaborator에 계정이 등록되어 있어야 함.\n* 원격저장소에 타인이 새로운 commit을 만들면 나는 git push를 못 함. 원격저장소의 최신 commit이 나의 로컬저장소에 있을 때만 git push가 가능함.\n* `git pull 원격저장소주소` 명령어로 원격저장소의 모든 브랜치 내용을 로컬저장소에 합칠 수 있음. `-u` 옵션을 사용했다면 그 이후에 `git pull` 만 사용해도 됨.\n* git pull은 git fetch(원격저장소 신규 commit 가져오세요) + git merge(내 브랜치에 merge 해주세요) 이므로 conflict가 발생할 수 있음.\n\n### 타인과 협업하기(Pull request)\n\n개발자가 많아지면 개발자마다 브랜치를 만들어서 개발 후 merge함. \n\nGitHub에서 브랜치를 만드려면 main 브랜치명 버튼 클릭 후 이름을 입력하여 만듦.\n\nGitHub에서 merge 하려면 Pull request를 사용. Pull request 시 내 브랜치좀 merge 해달라는 요청을 할 수 있고, merge 전에 팀원끼리 코드 검토가 가능함.\n\n1. 원격저장소 Pull requests 메뉴 → New pull request 버튼 클릭 → base, compare 브랜치 선택 후 Create pull request 버튼 클릭하면 pull request가 열림\n2. 이후 팀원끼리 검토, 토론을 할 수 있음\n3. 문제 없다면 Merge pull request 버튼 클릭 → merge 옵션(기본, Squash, Rebase) 선택 후 merge 수행\n\n\n## 브랜치 전략\n\n**GitFlow 전략**은 main, develop, feature, release, hotfix 5개의 브랜치를 운영하는 방법.\n\n* main은 서비스 중인 코드 저장\n* 신기능 개발 시 develop 브랜치를 만든 후 프로젝트 사본 복사\n* feature 브랜치를 develop 브랜치에 만들어 개발해보고, 잘 되면 develop 브랜치에 merge. (feeature/이름 형식으로 작명하는 경우가 흔함)\n* release 브랜치를 develop 브랜치에 만들어 테스트해보고, 고칠게 있으면 수정하며 테스트 후 문제 없으면 main, develop 브랜치에 merge.\n* hotfix 브랜치를 만들어 치명적인 버그 수정 후 main, develop 브랜치에 merge.\n\n안정적으로 버전별 배포 가능하나, CI/CD 이런거 하는 곳은 안 좋아함. 굳이 똑같이 따라할 필요없으며, 상황에 맞게 변경하여 사용.\n\n![GitFlow 전략](./images/Git_Strategy_GitFlow.png)\n\n**Trunk-based 전략**은 브랜치 하나만 잘 관리하자는 전략. 새로운 기능이 필요하면 그 때마다 feature 브랜치를 만든 후 main 브랜치에 합침.\n\n브랜치 종류가 많지 않고 소스코드가 한 곳에 있어 간편하나, 테스트를 많이 해야 함.\n\n![Trunk-based 전략](./images/Git_Strategy_TrunkBased.png)\n\n\n## 코드 잠깐 보관하기\n\ngit stash를 사용하면 코드 내용 일부를 잠시 잘라 보관할 수 있음. 주석 내용을 숨기고 commit하고 싶을 때 유용.\n\nStaging된 파일 내용 일부를 삭제 및 저장한 후 `git stash` 명령어를 실행하면 삭제된 내용이 다른 공간에 보관됨. 이 때 Staging된 파일이든 아니든 추적 중인 파일은 다 이동되며, 새로 만든 파일이지만 Staging 안 되었다면 이동되지 않음.\n\n```shell\n$ git stash              ## 수정 사항 stash\n$ git stash save \"메모\"   ## 메모를 남기며 stash\n$ git stash list         ## stash 리스트 출력\n$ git stash pop          ## 가장 최근 stash한 내용 불러오기\n$ git stash drop 삭제할ID  ## 특정 stash 리스트 삭제\n$ git stash clear        ## 모든 stash 리스트 삭제\n```"},{"excerpt":"キムさん, シムさん(?)과 함께 여행을 가볼 기회가 생겨 2박 3일 간 도쿄에 다녀왔습니다. 원래 오사카에 갈 예정이었지만 어찌어찌 하다가 목적지가 도쿄로 바뀐 건 함정... 😎 2박 3일 간 도쿄 어딜 갔다왔는지 정리해본 글입니다. 대충 도쿄 여행 가이드는 이 글을 참고하면 되고, 아래 소제목을 클릭하면 해당 구글지도 링크로 이동합니다. 🍽️ 우에노 야마…","fields":{"slug":"/travel/2023-11-tokyo-travel/"},"frontmatter":{"date":"December 02, 2023","title":"2023년 11월 도쿄 여행기","description":"2023년 11월 도쿄 여행기","tags":["travel"],"series":"병맛 여행기","previewImage":"travel.jpeg","isPrivate":null},"rawMarkdownBody":"\n[![행복은 멀리 있지 않습니다. 그렇다고 가까이 있지도 않습니다. (By Instagram @25_jw)](./images/2023-11-tokyo/25jw_HappinessIsNotFarAway.jpg)](https://www.instagram.com/25_jw/)\n\nキムさん, シムさん(?)과 함께 여행을 가볼 기회가 생겨 2박 3일 간 도쿄에 다녀왔습니다. 원래 오사카에 갈 예정이었지만 어찌어찌 하다가 목적지가 도쿄로 바뀐 건 함정... 😎\n\n2박 3일 간 도쿄 어딜 갔다왔는지 정리해본 글입니다. 대충 도쿄 여행 가이드는 [이 글](../tokyo-travel-guide)을 참고하면 되고, 아래 소제목을 클릭하면 해당 구글지도 링크로 이동합니다.\n\n\n## [🍽️ 우에노 야마베 돈가스](https://maps.app.goo.gl/bJa89nGAHKxm4wqt6)\n\n나리타 공항에서 우에노 역에 도착한 후 점심을 먹으러 간 곳입니다. 오후 12시 반 쯤 도착해서 40~50분 가량 대기한 후 로스까스를 850엔에 맛봤습니다.\n\n느끼함 없이 맛있게 먹은 돈가스입니다. 특히 밥 양이 많습니다. 역시 [겐스케 군이 극찬한 음식(?)](https://bbs.ruliweb.com/community/board/300712/read/15057444)입니다. 😅\n\n![우에노 야마베 돈가스 입구](./images/2023-11-tokyo/20231123_124539_Yamabe.jpg)\n\n![우에노 야마베 돈가스 로스까스](./images/2023-11-tokyo/20231123_131333_Yamabe_Rosukatsu.jpg)\n\n\n## [🛍️ 지유가오카](https://maps.app.goo.gl/TBaHCPzKUTpG7VMy9)\n\n지유가오카 동네를 돌아다녀보니 차고 있는 집이 많고 그 차고에 경차 있는 집을 거의 못 본 걸로 봐서 부촌인 듯합니다. 저도 이런 집에 차 끌면서 살아보고 싶지만 현실은 경차 사기도 빠듯하고 비싼 주차비 때문에... 🥹\n\n### [문스타(MoonStar)](https://maps.app.goo.gl/2GyT644AFWK2LRZ18)\n\nキムさん의 신발을 사러 들른 상점입니다. 저도 한번 컨버스 화와 비슷한 신발 저렴하게 팔면 한번 사볼까 했지만 대부분 15,000엔 이상이어서 고민 끝에 결국 사지 않았는데... 약간 후회되기도 합니다. 😥\n\n![지유가오카 문스타 내부 1](./images/2023-11-tokyo/20231123_171610_Jiyugaoka_Moonstar.jpg)\n\n![지유가오카 문스타 내부 2](./images/2023-11-tokyo/20231123_171935_Jiyugaoka_Moonstar.jpg)\n\n![지유가오카 문스타 내부 3](./images/2023-11-tokyo/20231123_171614_Jiyugaoka_Moonstar.jpg)\n\n### [밀크랜드 홋카이도](https://maps.app.goo.gl/qpUbPmvWrR7t2gnb6)\n\n아이스크림 맛집!\n\n![밀크랜드 홋카이도 입구](./images/2023-11-tokyo/20231123_172626_Jiyugaoka_Milkland.jpg)\n\n![밀크랜드 홋카이도 아이스크림](./images/2023-11-tokyo/20231123_172758_Jiyugaoka_Milkland_IceCream.jpg)\n\n### [코소안](https://maps.app.goo.gl/iFpKcgdet6j5oWmb9)\n\n전통 찻집에서 녹차 한 잔 해볼까 하고 가려 했지만 오후 6시에 영업 종료해서 가지 못했습니다. 😭\n\n![](./images/2023-11-tokyo/20231123_174614_Jiyugaoka_Kosoan.jpg)\n\n### [라 비타(La Vita)](https://maps.app.goo.gl/KvScbXZXY1WzJFqd7)\n\n그냥 인스타 감성 돋는 스팟(?)\n\n![지유가오카 라 비타](./images/2023-11-tokyo/20231123_174726_Jiyugaoka_LaVita.jpg)\n\n\n## [🏬 롯폰기 힐즈](https://maps.app.goo.gl/xdJHKhCU5QZJ8t8H8)\n\n그냥 일루미네이션이 보고 싶어서 들른 곳입니다. \n\n일루미네이션을 보고 나서 [곤파치 니시아지부](https://maps.app.goo.gl/vWLz2xTuhvVgHFXZ6)라는 이자카야 집에 가서 저녁을 먹으려 했지만 1시간 또는 그 이상 대기해야 한다 해서 못 먹고 나왔습니다. 😭 곤파치에 가려면 예약은 필수입니다.\n\n![롯폰기 힐즈 일루미네이션](./images/2023-11-tokyo/20231123_191230_Roppongi_Illumination.jpg)\n\n![롯폰기 힐즈 일루미네이션 with 마망](./images/2023-11-tokyo/20231123_191340_Roppongi_Illumination_Mamang.jpg)\n\n\n## [🗼 도쿄 타워](https://maps.app.goo.gl/7YUm5nQRzR7FBqTLA)\n\n웅장이 가슴해지는 불빛(?)\n\n도쿄타워 외관은 조명을 받아 멋지지만 내부 전망대는 1,000엔 가량 내고 관람할만한 가치가 있는지 개인적으로 영... 그렇습니다. 도쿄 전망대는 무조건 날씨 좋은 날에 [시부야 스카이 트리](https://maps.app.goo.gl/kvX41Hn5oJNVzn6u8) 루프탑으로 가는 게 좋습니다. (루프탑이 더 개방감이 있으나 날씨가 좋지 않으면 루프탑을 개방하지 않기 때문)\n\n![도쿄타워](./images/2023-11-tokyo/20231123_201220_TokyoTower.jpg)\n\n\n## [🐟 츠키지 장외시장](https://maps.app.goo.gl/1dMm8mFRzx19swVz8)\n\n오전 9시에 츠키지 시장에 와봤는데 사람들로 북적였습니다. 5년 전에 비슷한 시간에 왔던 때와 비교하면 사람이 2배 이상 많아진 것 같습니다.\n\n![츠키지 시장](./images/2023-11-tokyo/20231124_110742_TsukijiMarket.jpg)\n\n### [시겐(Seagen)](https://maps.app.goo.gl/hq4pnZjmw7aytvSp6)\n\n마구로동(참치덮밥)을 파는 곳입니다. 오전 10시 좀 안 돼서 도착해서 50분 가량 기다린 후 쉐프 셀렉트 참치 볼이라는 이름의 마구로동을 먹었습니다.\n\n이곳 마구로동에 얹어진 참치는 지금까지 먹던 냉동참치의 맛이 아니었습니다. 생참치인듯 한데... 참치 특유의 기름진 맛이 진하게 느껴진다고 해야 할까요. 너무 많이 먹으면 느끼함 때문에 못 먹겠지만 그 느끼함이 느끼기 전까지 너무 맛있게 먹을 수 있는 음식이었습니다. 다음 번에도 줄 서서 먹을 가치가 충분합니다.\n\n<div style=\"text-align: center;\">\n   <iframe width=\"315\" height=\"560\" src=\"https://youtube.com/embed/N0hDSgNqeFY\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n</div>\n\n![시겐 입구](./images/2023-11-tokyo/20231124_094950_TsukijiMarket_Seagen.jpg)\n\n![시겐 쉐프 셀렉트 참치 볼](./images/2023-11-tokyo/20231124_104744_TsukijiMarket_Seagen_ChefSelectMaguroBowl.jpg)\n\n![시겐 쉐프 셀렉트 참치 볼](./images/2023-11-tokyo/20231124_104954_TsukijiMarket_Seagen_ChefSelectMaguroBowl.jpg)\n\n![시겐 쉐프 셀렉트 참치 볼 꺼억](./images/2023-11-tokyo/20231124_110332_TsukijiMarket_Seagen_ChefSelectMaguroBowl.jpg)\n\n\n## [🏢 도쿄도청 남쪽 전망대](https://maps.app.goo.gl/LeMw9Nk1iXvCZUcV7)\n\n여러 번 도쿄를 가봤음에도 도쿄도청은 가본 적이 없었지만, 이번에 드더이 마참내(?) 가봤습니다. 원래 도쿄도청 내 구내식당도 가보려 했지만 직전에 마구로동을 많이 먹은 탓에 남쪽 전망대만 갔습니다.\n\n![도쿄도청 남쪽 전망대](./images/2023-11-tokyo/20231124_151956_TokyoGovernmentSouthObservatory.jpg)\n\n![도쿄도청 남쪽 전망대 뷰](./images/2023-11-tokyo/20231124_152056_TokyoGovernmentSouthObservatory_View.jpg)\n\n![도쿄도청 남쪽 전망대 신주쿠 공원 방향 뷰](./images/2023-11-tokyo/20231124_152432_TokyoGovernmentSouthObservatory_View.jpg)\n\n남쪽 전망대엔 피아노가 있습니다. 아래 규칙에 따라 누구나 연주해볼 수 있습니다.\n* 도쿄도청 남쪽 전망대 관람시간은 09:30 ~ 21:30이지만, 피아노 연주가 가능한 시간은 10:00 ~ 12:00 및 14:00 ~ 16:00 입니다.\n* 인당 5분까지 연주할 수 있습니다. 연주 시작하면 직원이 타이머 재는 듯.\n* 피아노에 촬영장비를 올려놓고 촬영할 순 없지만, 타인이 주변에서 촬영하는 건 가능합니다.\n\n연주해볼까 말까 겁이 나서 고민하다가 용기 내어 연주를 한번 해봤습니다. 베토벤 비창 소나타 3악장을 연주해보고 싶었지만 연주시간 제한인 5분이 넘어갈 것 같아서 2악장을 연주해봤습니다. シムさん께서 촬영까지 해주셨습니다...!!! 😁\n\n<!-- 16:9 비율 반응형 유튜브 -->\n<div class=\"video-container\" style=\"aspect-ratio: 16/9; display: flex; justify-content: center; align-items: center;\">\n  <iframe style=\"width: 90%; height: 90%;\" src=\"https://www.youtube.com/embed/RL1HO1lOwcc?si=IRHv5hxSeHLPCnkY\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen></iframe>\n</div>\n\n\n## [🍢 오모이데요코초](https://maps.app.goo.gl/Pwn333DQXWjG1hnJ8)\n\n꼬치구이 맛 좀 한번 보러 갔습니다. 1인 테이블만 있는 좁은 가게에서 꼬치구이와 술 한 잔 하면 감성 돋을만한 곳입니다. 예전에 저녁 늦게 갔을 땐 빈 자리 있는 가게를 찾기 힘들었지만, 오후 5시쯤 가보니 제법 여유가 있었습니다.\n\n<!-- [시몽야](https://maps.app.goo.gl/MWce1YCwAHnYTq397) -->\n\n![오모이데요코초 입구](./images/2023-11-tokyo/20231124_164853_Omoideyokocho.jpg)\n\n![시몽야 꼬치구이 1](./images/2023-11-tokyo/20231124_171724_Omoideyokocho_Simongya.jpg)\n\n![시몽야 꼬치구이 2](./images/2023-11-tokyo/20231124_172004_Omoideyokocho_Simongya.jpg)\n\n\n## [⛩️ 아사쿠사](https://maps.app.goo.gl/o8cFfmmSoKdnYCKs9)\n\n### [아사쿠사 우나테츠 장어덮밥](https://maps.app.goo.gl/CAh9bHtr1kLmyQX29)\n\n장어덮밥도 일본여행 해보면서 처음으로 먹어봤습니다. 장어덮밥 먹는 동영상을 보면 쌀밥과 장어를 일부 덜어내 따뜻한 녹차를 붓는 오차즈케 방식으로 먹기도 하던데 여기선 그러지 못해 아쉽습니다. 그래도 맛은 있었습니다.\n\n이번 여행에서 유난히 느끼는 거지만, 어떤 음식을 주문하든 밥을 많이 줍니다. 그래서 다양한 음식을 먹지 못헀다는 후문이... 😂\n\n![아사쿠사 우나테츠 장어덮밥](./images/2023-11-tokyo/20231124_193712_Asakusa_Unatetsu_Unadong.jpg)\n\n### [센소지](https://maps.app.goo.gl/2v8kAv8U9YA36DCy5)\n\n도쿄에 처음 온 キムさん과 シムさん을 위해 들러야 할 것 같아 갔습니다. 😅\n\n![센소지](./images/2023-11-tokyo/20231124_202950_Sensoji.jpg)\n\n\n## [🧳 케이세이우에노 역 내 짐 보관소](https://maps.app.goo.gl/1GxJGE3PK8pE7DtJ8)\n\n호텔 체크아웃 후 오후 7시에 비행기 탈 때까지 시간이 많이 남아서 이곳에 짐을 맡겨놓고 남은 시간동안 여행을 했습니다. 작은 짐은 하루 400엔, 큰 짐은 하루 600엔에 맡길 수 있습니다.\n\n기내용 캐리어 2개와 배낭 1개를 몇 시간 동안 맡겨봤더니 역무원이 기내용 캐리어 1개와 배낭 1개를 묶어서 600엔, 나머지 기내용 캐리어 1대는 400엔을 청구했습니다.\n\n![케이세이우에노 역 내 짐 보관소](./images/2023-11-tokyo/20231125_105104_Keiseiueno_BaggageService.jpg)\n\n![케이세이우에노 역 내 짐 보관 영수증](./images/2023-11-tokyo/20231125_110453_Keiseiueno_BaggageService_Receipt.jpg)\n\n\n## [🛍️ 아키하바라](https://maps.app.goo.gl/kxxdoDMXbqWmXrGYA)\n\n레트로 게임을 구경하러 가본 곳입니다. \n플레이스테이션 1용 킹 오브 파이터즈 98 CD값이 200,000엔 가까이 한다는 게 눈에 띕니다. 이 CD는 쿠사나기 쿄의 눈 뜬 표지와 눈 감은 표지로 나뉘어 각각 10대 1 비율로 만들어 출시되었는데요. 후자의 가격이 훨씬 비싸다고는 들었는데 이 정도일 줄이야... 😮\n\n![아키하바라 요도바시](./images/2023-11-tokyo/20231125_113845_Akihabara_Yodobashi.jpg)\n\n![플레이스테이션1 KOF98 쿠사나기 쿄 눈 감은 표지](./images/2023-11-tokyo/20231125_135833_Akihabara_KOF98.jpg)\n\n\n## [🍜 큐슈 장가라 라멘 아키하바라 점](https://maps.app.goo.gl/wTf9ZD4zBa8mRvYH8)\n\n원래 이치란 라멘 우에노 역 점에서 라멘을 먹으려다가 대기줄이 길어서 이곳으로 왔지만 이곳도 대기가 만만치 않았습니다. 😅\n\n돈코츠 라멘처럼 보이는 큐슈 장가라 라멘을 먹었는데 지금까지 먹어본 라멘 중 가장 맛있었습니다. 테이블에 마늘 소스가 있는데 넣기 전에 국물 먼저 맛본 후 넣는 걸 추천합니다.\n\n![큐슈 장가라 라멘 입구](./images/2023-11-tokyo/20231125_120630_Akihabara_KyusyuJanggaraRamen.jpg)\n\n![큐슈 장가라 라멘 1](./images/2023-11-tokyo/20231125_123202_Akihabara_KyusyuJanggaraRamen.jpg)\n\n![큐슈 장가라 라멘 2](./images/2023-11-tokyo/20231125_124247_Akihabara_KyusyuJanggaraRamen.jpg)\n"},{"excerpt":"도쿄를 여러 번 여행하면서 정리해본 가이드... 🚄 아묻따 스카이 라이너 타세요 나리타 공항에서 도쿄 도심으로 이동하려면 케이세이 전철 또는 나리타 익스프레스 등을 타는 방법이 있지만 무조건 스카이라이너를 타고 갑니다. 비싸지만 가장 빠르기 때문. 💊 내가 캡슐호텔에 묵을 만한 상인가 캡슐호텔은 저렴하게 숙박할 수 있다는 장점이 있지만 그만큼 불편합니다.…","fields":{"slug":"/travel/tokyo-travel-guide/"},"frontmatter":{"date":"November 30, 2023","title":"대충 도쿄 여행 가이드","description":"대충 도쿄 여행 가이드","tags":["travel"],"series":"병맛 여행기","previewImage":"travel.jpeg","isPrivate":null},"rawMarkdownBody":"\n![애니메이션 바다가 들린다 주인공](./images/2023-11-tokyo/OceanWaves_Airplane.jpeg)\n\n도쿄를 여러 번 여행하면서 정리해본 가이드...\n\n\n## 🚄 아묻따 스카이 라이너 타세요\n\n나리타 공항에서 도쿄 도심으로 이동하려면 케이세이 전철 또는 나리타 익스프레스 등을 타는 방법이 있지만 무조건 스카이라이너를 타고 갑니다. 비싸지만 가장 빠르기 때문.\n\n\n## 💊 내가 캡슐호텔에 묵을 만한 상인가\n\n캡슐호텔은 저렴하게 숙박할 수 있다는 장점이 있지만 그만큼 불편합니다. 아래 사항에 해당한다면 캡슐호텔에 묵는 걸 추천하지 않습니다.\n\n1. **짐이 많거나 짐을 자주 풀어야 하는가?** 기내용 캐리어가 아니라면 캡슐호텔 짐 보관함에 캐리어가 들어가지 않는 경우가 있으며, 짐 보관함이 공용 공간에 있어서 짐을 풀고 정리할 때 사람들이 들락날락하면서 민망한 상황이 발생할 수 있습니다.\n2. **소음에 민감한가?** 일본 법령상 잠을 자는 캡슐 입구에 잠금장치를 설치할 수 없으므로 방음이 되지 않습니다. 자는 와중에 히터 소리 등이 들려올 수 있어서 소음에 민감하면 잠을 제대로 잘 수 없습니다.\n\n그럼에도 캡슐호텔에 묵기로 정했다면 아래 사항을 고려하는 게 좋습니다.\n\n1. **연박 시 매일 체크아웃을 해야 하는가?** 대부분의 일본 캡슐호텔은 연박 시 매일 오전에 체크아웃을 해야 합니다. 그렇지 않은 캡슐호텔도 있으나 대부분 해야 한다고 보면 될 것 같습니다. 매일 체크아웃을 해야 하는 경우 짐을 원래 보관하던 장소에 계속 두게 해주긴 합니다.\n2. **짐을 보관할 공간이 충분한가?** 기내용 캐리어도 안 들어가는 짐 보관함이 있거나, 보관함이 없어 카운터에 캐리어를 맡겨야 하는 곳도 있으니 꼭 알아보는 게 좋습니다.\n3. **가능하면 2층보다는 1층 캡슐로** 가끔 재수없으면 2층 캡슐 입구 근처에 형광등이 있어 눈뽕(🤩)을 당할 수 있습니다.\n\n지금까지 가본 일본 캡슐호텔 중에서 가장 괜찮았던 곳은 [마이큐브 바이 마이스테이 아사쿠사 쿠라마에](https://goo.gl/maps/JnVFp1NrsfTiwrVx7)입니다. 2층식이 아닌 1층식이라 침실이 아주 넓고 연박 시 매일 체크아웃을 하지 않아도 되며, 침실 밑에 엄청나게 넓은 짐 보관공간이 있기 때문입니다. 이 외에 [나인 아워스](https://maps.app.goo.gl/6mUr97ZuPHaNYpqz9)도 나쁘지 않았습니다.\n\n\n## 🪀 에어태그는 있으면 굳굳\n\n집에 하나 쯤 굴러 다니는(?) 국내한정 애물단지 에어태그를 캐리어에 넣고 비행기 위탁 수하물로 맡기면 해외 공항 도착 후 캐리어 위치를 확인할 수 있습니다. 캐리어가 가만히 있다가 어느 순간 움직이기 시작하면 짐 찾는 곳에서 곧 캐리어를 찾을 수 있음을 직감할 수 있습니다.\n\n중요한 짐에 에어태그를 숨겨 놓았다면 분실 시 유용할 것 같습니다.\n\n![에어태그로 캐리어 위치 찾기](./2023-04-tokyo/images/Airtag_Location.jpg)\n\n\n## 🧳 짐이 무거우면 케이세이우에노 역에 잠시 맡기기\n\n여행 마지막 날 호텔 체크아웃 후 비행기 타러 갈 때까지 시간이 많이 남았지만 짐을 들고 여행하기 힘든 경우가 있습니다. 이 때 [케이세이우에노 역 내에 있는 짐 보관소](https://maps.app.goo.gl/1GxJGE3PK8pE7DtJ8)에 짐을 맡기면 편합니다. 작은 짐은 하루 400엔, 큰 짐은 하루 600엔에 맡길 수 있습니다.\n\n기내용 캐리어 2개와 배낭 1개를 몇 시간 동안 맡겨봤더니 역무원이 기내용 캐리어 1개와 배낭 1개를 묶어서 600엔, 나머지 기내용 캐리어 1대는 400엔을 청구했습니다.\n\n![](./images/2023-11-tokyo/20231125_105104_Keiseiueno_BaggageService.jpg)\n\n![](./images/2023-11-tokyo/20231125_110453_Keiseiueno_BaggageService_Receipt.jpg)\n\n\n## 🚇 스이카랑 도쿄 서브웨이 티켓은 같이 사쓰세요... 제발\n\n스이카는 일본에서 사용하는 선불 교통카드입니다. (파스모도 있지만 편의상 스이카라고만 하겠습니다.) 이 카드를 사용하면 일본 내 대부분의 전철, 버스, 택시, 심지어 자판기 등에서 사용할 수 있습니다. 스이카만 있으면 어디든 자유롭게 이동할 수 있지만 이것만 사용하면 돈이 엄청나게 깨집니다.\n\n도쿄 서브웨이 티켓은 도쿄메트로 또는 도에이 전철 노선을 특정 기간 동안 무제한 사용할 수 있는 티켓입니다. 이 티켓만 사용하면 교통비를 많이 절약할 수 있지만 일부 전철을 탈 수 없습니다.\n\n그래서 도쿄메트로 또는 도에이 노선을 타고 이동하는 경우 도쿄 서브웨이 티켓을 사용하고, 이 외의 노선을 탈 때는 스이카를 이용하는 게 가장 가성비가 좋습니다.\n\n### 도쿄 서브웨이 티켓을 사용하는 경우\n\n구글 지도 앱으로 목적지 경로를 검색한 후, 지하철 경로를 조회하면 탑승해야 하는 지하철 노선이 나타납니다. 이 중 **단색 동그라미 안에 알파벳이 하나 들어가 있는 노선에서 도쿄 서브웨이 티켓을 사용할 수 있습니다.**\n\n아래 예를 들어 설명해보면, 긴자선과 히비야선 그리고 지요다선은 알파벳 한 자리에 단색 동그라미로 되어 있으므로 이 노선에서 도쿄 서브웨이 티켓을 사용할 수 있습니다.\n\n![구글 맵 도쿄 지하철 경로 검색](./2023-04-tokyo/images/GoogleMap_Subway_Search.JPG)\n\n단, 위 예시에 있는 게이힌토호쿠선은 알파벳 한 자리에 단색 동그라미가 아니어서 도쿄 서브웨이 티켓을 사용할 수 없으므로 대신 스이카를 사용해야 하고, 지요다 선으로 환승하여 내릴 땐 도쿄 서브웨이 티켓을 사용하면 됩니다.\n\n### 스이카를 사용하는 경우\n\n구글 지도 앱으로 목적지 경로를 검색한 후, 알파벳 한 자리에 단색 동그라미로 되어있지 않은 전철 노선에서 스이카를 사용합니다.\n\n스이카는 사용할 일이 없더라도 1~2천엔 정도는 예비용으로 충전해두는 게 좋습니다. 예전에 하코네로 여행을 갔다가 강풍 때문에 케이블 카를 못 타게 되어 버스를 타야 할 일이 있었는데, 주변에 스이카를 충전할 곳이 없어서 스이카에 남은 잔액이 없었으면 큰일 날 뻔했습니다. 물론 현금을 내고 버스를 타고 되긴 하지만 버스요금을 내거나 거스름돈을 받을 때 시간을 꽤나 잡아먹을 수 있습니다.\n\n### 도쿄 서브웨이 티켓과 스이카를 동시에 사용해야 하는 경우\n\n**탑승할 때 도쿄 서브웨이 티켓을, 하차할 때 스이카를 사용해야 하는 경우**\n1. 도쿄 서브웨이 티켓을 사용하여 전철에 탑승합니다.\n2. 환승 역에서 도쿄 서브웨이 티켓을 사용하여 내린 후, 스이카로 다시 탑승합니다.\n3. 하차할 역에서 스이카를 사용하여 하차합니다.\n\n**탑승할 때 스이카를, 내릴 때 도쿄 서브웨이 티켓을 사용해야 하는 경우**\n1. 스이카를 사용하여 전철에 탑승합니다.\n2. 환승 역에서 스이카를 사용하여 내린 후, 도쿄 서브웨이 티켓으로 다시 탑승합니다.\n3. 하차할 역에서 도쿄 서브웨이 티켓을 사용하여 하차합니다.\n\n환승 역에서 내렸다가 다시 탑승하는 게 귀찮을 수 있지만 이렇게 하지 않으면 하차할 역에서 내릴 때 오류가 발생합니다. 이게 귀찮으면 환승 역에서 내렸다가 다시 타지 말고 하차할 역에서 역무원에게 정산해달라고 하면 됩니다.\n\n### 스이카 잔액이 충분하지만 사용할 때 오류가 나는 경우\n\n스이카는 6개월 이상 사용하지 않으면 잠기는 경우가 있습니다. 이 때 JR 지하철 역무원에게 락을 해제해달라고 하면 됩니다.\n\n> スイカがロックされています。 ロックを解除してください。<br/>\n> 스이카가 롯쿠사레테이마스。 롯쿠오 카이조시테쿠다사이。\n>\n> 스이카에 락이 걸려있습니다. 락을 해제해주세요."},{"excerpt":"인터넷 익스플로러에서만 작동하는 시스템들 다 걷어내고 싶... 파이썬으로 웹페이지 자동 로그인 코드를 만들다가 정리한 글입니다. 🔴 Selenium 4로 크롬 브라우저 제어 🟢 Selenium 4로 엣지 브라우저 제어 🔵 Selenium 4로 인터넷 익스플로러 제어 인터넷 익스플로러를 실행하여 제어하는 것이 아닌, 엣지 브라우저의 인터넷 익스플로러(IE)…","fields":{"slug":"/coding/using-python-selenium-4/"},"frontmatter":{"date":"October 27, 2023","title":"파이썬 Selenium 4 사용법 간단 정리","description":"파이썬 Selenium 4 사용법 간단 정리","tags":["coding"],"series":"코딩","previewImage":"coding.jpg","isPrivate":null},"rawMarkdownBody":"\n![](./images/WeAreWebBrowser.jpg)\n\n<del>인터넷 익스플로러에서만 작동하는 시스템들 다 걷어내고 싶...</del>\n\n파이썬으로 웹페이지 자동 로그인 코드를 만들다가 정리한 글입니다.\n\n\n## 🔴 Selenium 4로 크롬 브라우저 제어\n\n```python\nfrom selenium import webdriver\nfrom selenium.webdriver.chrome.service import Service\nfrom webdriver_manager.chrome import ChromeDriverManager\nfrom selenium.webdriver.support.wait import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\nfrom selenium.webdriver.common.by import By\n\n# 상수 \nSELENIUM_PROFILE_PATH = r\"C:\\Users\\user\\AppData\\Local\\Google\\Chrome\\User Data\\Selenium Profile\"\nURL = \"https://muyaho.com/login\"\nID = \"ID\"\nPW = \"P@$$W0RD\"\nWAIT_TIMEOUT = 60  ## 명시적 대기 시간(초)\n\n# 크롬 옵션 설정\noptions = webdriver.ChromeOptions()\noptions.add_argument(\"--start-maximized\")                              ## 최대화 모드로 시작\noptions.add_argument(\"--disable-blink-features=AutomationControlled\")  ## Automation Info Bar 비활성화\noptions.add_argument(rf\"--user-data-dir={SELENIUM_PROFILE_PATH}\")      ## 프로필 사용(화면배율 등 설정 유지용)\noptions.add_argument(\"--disable-extensions\")\noptions.add_argument(\"--disable-extensions-file-access-check\")\noptions.add_argument(\"--disable-extensions-http-throttling\")\noptions.add_argument(\"--disable-infobars\")\noptions.add_argument(\"--disable-automation\")\noptions.add_experimental_option(\"detach\", True)                        ## 창을 닫더라도 드라이버 유지\noptions.add_experimental_option('excludeSwitches', ['enable-logging'])\noptions.add_experimental_option(\"excludeSwitches\", [\"enable-automation\"])\noptions.add_experimental_option(\"useAutomationExtension\", False)\n\n# Selenium 초기화\nservice = Service(executable_path=ChromeDriverManager().install())\ndriver = webdriver.Chrome(service=service, options=options)\n\n# URL 접속\ndriver.get(URL)\n\n# 로그인 페이지 뜰 때까지 대기\nwait_login_page = WebDriverWait(driver, WAIT_TIMEOUT)\nelement_login_page = wait_login_page.until(EC.presence_of_element_located((By.XPATH, \"/HTML\")))\n\n# 로그인 페이지 뜨면 아이디, 비밀번호 자동 입력 후 로그인\nif(element_login_page):\n    driver.find_element(By.XPATH, \"//*[@id='username']\").send_keys(ID)\n    driver.find_element(By.XPATH, \"//*[@id='password']\").send_keys(PW)\n    driver.find_element(By.XPATH, \"//*[@id='loginbtn']\").click()\n```\n\n\n## 🟢 Selenium 4로 엣지 브라우저 제어\n\n```python\nfrom selenium import webdriver\nfrom selenium.webdriver.chrome.service import Service\nfrom webdriver_manager.microsoft import EdgeChromiumDriverManager\nfrom selenium.webdriver.support.wait import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\nfrom selenium.webdriver.common.by import By\n\n# 상수 \nSELENIUM_PROFILE_PATH = r\"C:\\Users\\user\\AppData\\Local\\Google\\Chrome\\User Data\\Selenium Profile\"\nURL = \"https://muyaho.com/login\"\nID = \"ID\"\nPW = \"P@$$W0RD\"\nWAIT_TIMEOUT = 60  ## 명시적 대기 시간(초)\n\n# 엣지 브라우저 옵션 설정\noptions = webdriver.EdgeOptions()\noptions.add_argument(\"--start-maximized\")                              ## 최대화 모드로 시작\noptions.add_argument(\"--disable-blink-features=AutomationControlled\")  ## Automation Info Bar 비활성화\noptions.add_argument(rf\"--user-data-dir={SELENIUM_PROFILE_PATH}\")      ## 프로필 사용(화면배율 등 설정 유지용)\noptions.add_argument(\"--disable-extensions\")\noptions.add_argument(\"--disable-extensions-file-access-check\")\noptions.add_argument(\"--disable-extensions-http-throttling\")\noptions.add_argument(\"--disable-infobars\")\noptions.add_argument(\"--disable-automation\")\noptions.add_argument('--ieMode') \noptions.add_experimental_option(\"detach\", True)                        ## 창을 닫더라도 드라이버 유지\noptions.add_experimental_option('excludeSwitches', ['enable-logging'])\noptions.add_experimental_option(\"excludeSwitches\", [\"enable-automation\"])\noptions.add_experimental_option(\"useAutomationExtension\", False)\n\n# Selenium 초기화\nservice = Service(executable_path=EdgeChromiumDriverManager().install())\ndriver = webdriver.Chrome(service=service, options=options)\n\n# URL 접속\ndriver.get(URL)\n\n# 로그인 페이지 뜰 때까지 대기\nwait_login_page = WebDriverWait(driver, WAIT_TIMEOUT)\nelement_login_page = wait_login_page.until(EC.presence_of_element_located((By.XPATH, \"/HTML\")))\n\n# 로그인 페이지 뜨면 아이디, 비밀번호 자동 입력 후 로그인\nif(element_login_page):\n    driver.find_element(By.XPATH, \"//*[@id='username']\").send_keys(ID)\n    driver.find_element(By.XPATH, \"//*[@id='password']\").send_keys(PW)\n    driver.find_element(By.XPATH, \"//*[@id='loginbtn']\").click()\n```\n\n\n## 🔵 Selenium 4로 인터넷 익스플로러 제어\n\n인터넷 익스플로러를 실행하여 제어하는 것이 아닌, 엣지 브라우저의 인터넷 익스플로러(IE) 모드를 사용하여 제어됩니다.\n\n인터넷 익스플로러 보호 모드가 활성화되어 있으면 오류가 발생합니다. 이 오류를 해결하려면 `options.ignore_protected_mode_settings = True` 코드를 작성해주거나, 윈도우 10 제어판 인터넷 속성 → 보안 탭 → 인터넷 항목의 보호 모드 사용 체크를 해제하면 됩니다.\n\n```python\nfrom selenium import webdriver\nfrom selenium.webdriver.support.wait import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\nfrom selenium.webdriver.common.by import By\n\nEDGE_PATH = \"C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe\"\nURL = \"https://muyaho.com/login\"\nID = \"ID\"\nPW = \"P@$$W0RD\"\nWAIT_TIMEOUT = 60  ## 명시적 대기 시간(초)\n\n# Internet Explorer 옵션 설정\noptions = webdriver.IeOptions()\noptions.edge_executable_path = EDGE_PATH\noptions.attach_to_edge_chrome = True           ## Edge로 리다이렉션 허용\noptions.ignore_protected_mode_settings = True  ## 보호모드 무시. 이 코드를 넣어주거나, 제어판 인터넷 속성 → 보안 탭 → 인터넷 항목의 보호 모드 사용 체크 해제해야 에러 미발생\noptions.ignore_zoom_level = True               ## 확대 비율이 100%가 아닌 경우 생기는 IE 종특 문제 예방용?\n\n# Selenium 초기화\ndriver = webdriver.Ie(options=options)\ndriver.maximize_window()\ndriver.get(URL)\n\n# 로그인 페이지 뜰 때까지 대기\nwait_login_page = WebDriverWait(driver, WAIT_TIMEOUT)\nelement_login_page = wait_login_page.until(EC.presence_of_element_located((By.XPATH, \"/HTML\")))\n\n# 로그인 페이지 뜨면 아이디, 비밀번호 자동 입력 후 로그인\nif(element_login_page):\n    driver.find_element(By.XPATH, \"//*[@id='username']\").send_keys(ID)\n    driver.find_element(By.XPATH, \"//*[@id='password']\").send_keys(PW)\n    driver.find_element(By.XPATH, \"//*[@id='loginbtn']\").click()\n```\n\n## ❗ 참고 사이트\n\n* [위키독스 3-01. selenium 4](https://wikidocs.net/177133)\n* [Selenium - IE specific functionality](https://www.selenium.dev/documentation/webdriver/browsers/internet_explorer)"},{"excerpt":"(주의!) 아래 코드는 사전에 충분히 검증한 후 활용해야 합니다. 파이썬의 ccxt 패키지를 사용하여 바이낸스 선물 자동거래를 하기 위한 코드를 정리한 글입니다. 🔑 API 발급 https://www.binance.com/en/my/settings/api-management 에서 API를 발급받습니다. Secret Key는 한 번 확인 후 다시는 확인할 …","fields":{"slug":"/coin/binance-futures-python-code/"},"frontmatter":{"date":"July 26, 2023","title":"파이썬으로 바이낸스 선물 거래하는 코드","description":"파이썬으로 바이낸스 선물 거래하는 코드","tags":["bitcoin"],"series":"비트코인","previewImage":"bitcoin.jpg","isPrivate":null},"rawMarkdownBody":"\n![방향성이 보이지 않는 차트](./images/Chart_NoDirection.jpg)\n\n**(주의!) 아래 코드는 사전에 충분히 검증한 후 활용해야 합니다.**\n\n파이썬의 ccxt 패키지를 사용하여 바이낸스 선물 자동거래를 하기 위한 코드를 정리한 글입니다.\n\n\n## 🔑 API 발급\n\nhttps://www.binance.com/en/my/settings/api-management 에서 API를 발급받습니다. Secret Key는 한 번 확인 후 다시는 확인할 수 없으니 꼭 별도로 보관해둡니다. API 접근이 가능한 IP를 추가한 후 `Enable Futures`에 체크하여 설정을 완료합니다.\n\n발급받은 API Key와 Secret Key는 환경변수로 만들어 사용하려 합니다. 파이썬 프로젝트 최상위 경로에 `.env` 파일을 만든 후 키 값을 입력합니다. 이렇게 만든 환경변수는 python-dotenv 패키지를 사용하여 불러올 수 있습니다.\n\n```python\nBINANCE_API_KEY = bInAnCeApIkEy\nBINANCE_SECRET_KEY = bInAnCeSeCrEtKeY\n```\n\n\n## 💡 초기화\n\n```python\nfrom dotenv import load_dotenv\nimport ccxt\nimport os\nfrom pprint import pprint\n\nload_dotenv()\nBINANCE_API_KEY = os.environ.get(\"BINANCE_API_KEY\")\nBINANCE_SECRET_KEY = os.environ.get(\"BINANCE_SECRET_KEY\")\n\nbinance = ccxt.binance(config={\n    'apiKey': BINANCE_API_KEY, \n    'secret': BINANCE_SECRET_KEY,\n    'enableRateLimit': True,\n    'options': {\n        'defaultType': 'future'\n    }\n})\n```\n\n\n## 🔍 선물 잔고 조회\n\n```python\n# USDT 잔고를 조회하는 코드\n\nbalance = binance.fetch_balance(params={\n    \"type\": \"future\"\n})\npprint(balance['USDT'])\n```\n\n\n## 💸 레버리지 설정\n\n```python\n# 비트코인 선물거래 레버리지를 5배로 설정하는 코드\n\nsymbol = \"BTCUSDT\"\nleverage = 5\nresp = binance.fapiprivate_post_leverage({\n    'symbol': symbol\n    'leverage': leverage\n})\npprint(resp)\n```\n\n\n## 📈 롱(공매수) 포지션 잡기\n\npositionSide 파라미터가 없으면 `code 4061: Order's position side does not match user's setting.` 에러가 발생해서 추가했습니다. \n\n```python\n# 롱(공매수) 포지션을 시장가로 잡기\n\nsymbol = \"BTC/USDT\"\namount = 0.001  # 코인 수량\norder = binance.create_market_buy_order(symbol, amount, params={\n    'positionSide':\"LONG\"\n})\npprint(order)\n```\n\n```python\n# 롱(공매수) 포지션을 지정가로 잡기\n\nsymbol = \"BTC/USDT\"\namount = 0.001  # 코인 수량\nprice = 10000   # 지정가(USDT)\norder = binance.create_limit_buy_order(symbol, amount, price, params={\n    'positionSide': 'LONG'\n})\npprint(order)\n```\n\n```python\n# 롱(공매수) 포지션을 시장가로 정리하기\n\nsymbol = \"BTC/USDT\"\namount = 0.001  # 코인 수량\norder = binance.create_market_sell_order(symbol, amount, params={\n    'positionSide':\"LONG\"\n})\npprint(order)\n```\n\n```python\n# 롱(공매수) 포지션을 스탑로스(TP/SL) 설정하여 잡기\n\norders = [None] * 3\nsymbol = \"BTC/USDT\"\ntype = \"LIMIT\"          # LIMIT: 지정가 주문 / MARKET: 시장가 주문\namount = 0.001          # 코인 수량\nprice_position = 10000  # 지정가(USDT). 시장가 주문(MARKET)인 경우 필요 없는 값.\nprice_tp = 40000        # 수익실현 가격. 현 시가 이상으로 설정해야 함.\nprice_sl = 5000         # 손절 가격\n\n# 롱(공매수) 포지션 주문\norders[0] = binance.create_order(\n    symbol=symbol, \n    type=type,  \n    side=\"buy\", \n    amount=amount, \n    price=price_position, \n    params={\n        'positionSide': 'LONG'\n    }\n)\n\n# Take Profit 주문\norders[1] = binance.create_order(\n    symbol=symbol,\n    type=\"TAKE_PROFIT_MARKET\",\n    side=\"sell\",\n    amount=amount,\n    params={\n        'positionSide': 'LONG',\n        'stopPrice': price_tp\n    }\n)\n\n# Stop Loss 주문\norders[2] = binance.create_order(\n    symbol=symbol,\n    type=\"STOP_MARKET\",\n    side=\"sell\",\n    amount=amount,\n    params={\n        'positionSide': 'LONG',\n        'stopPrice': price_sl\n    }\n)\n\nfor order in orders:\n    pprint(order)\n```\n\n\n## 📉 숏(공매도) 포지션 잡기\n\n```python\n# 숏(공매도) 포지션을 시장가로 잡기\n\nsymbol = \"BTC/USDT\"\namount = 0.001  # 코인 수량\norder = binance.create_market_sell_order(symbol, amount, params={\n    'positionSide': 'SHORT'\n})\npprint(order)\n```\n\n```python\n# 숏(공매도) 포지션을 지정가로 잡기\n\nsymbol = \"BTC/USDT\"\namount = 0.001  # 코인 수량\nprice = 40000   # 지정가(USDT)\norder = binance.create_limit_sell_order(symbol, amount, price, params={\n    'positionSide': 'SHORT'\n})\npprint(order)\n```\n\n```python\n# 숏(공매도) 포지션을 시장가로 정리하기\n\nsymbol = \"BTC/USDT\"\namount = 0.001  # 코인 수량\norder = binance.create_market_buy_order(symbol, amount, params={\n    'positionSide': 'SHORT'\n})\npprint(order)\n```\n\n```python\n# 숏(공매도) 포지션을 스탑로스(TP/SL) 설정하여 잡기\n\norders = [None] * 3\nsymbol = \"BTC/USDT\"\ntype = \"LIMIT\"          # LIMIT: 지정가 주문 / MARKET: 시장가 주문\namount = 0.001          # 코인 수량\nprice_position = 40000  # 지정가(USDT). 시장가 주문(MARKET)인 경우 필요 없는 값.\nprice_tp = 10000        # 수익실현 가격. 현 시가 이상으로 설정해야 함.\nprice_sl = 50000        # 손절 가격\n\n# 숏(공매도) 포지션 주문\norders[0] = binance.create_order(\n    symbol=symbol,\n    type=\"LIMIT\",\n    side=\"sell\",\n    amount=amount,\n    price=price_position,\n    params={\n        'positionSide': 'SHORT'\n    }\n)\n\n# Take Profit 주문\norders[1] = binance.create_order(\n    symbol=symbol,\n    type=\"TAKE_PROFIT_MARKET\",\n    side=\"buy\",\n    amount=amount,\n    params={\n        'positionSide': 'SHORT',\n        'stopPrice': price_tp\n    }\n)\n\n# Stop Loss 주문\norders[2] = binance.create_order(\n    symbol=symbol,\n    type=\"STOP_MARKET\",\n    side=\"buy\",\n    amount=amount,\n    params={\n        'positionSide': 'SHORT',\n        'stopPrice': price_sl\n    }\n)\n\nfor order in orders:\n    pprint(order)\n```\n\n\n## 🤔 어떻게 써먹을 것인가\n\n이것이 문제로다...\n\n\n## ❗ 참고 사이트\n\nhttps://wikidocs.net/129679"},{"excerpt":"토끼 제빵 여러 개의 파일 이름에 생상시간을 자동으로 붙여주는 셸 스크립트입니다. 📁 1. 파일 생성일을 파일이름 앞에 붙이는 스크립트 아래의 셸 스크립트가 작성된 파일(.sh)을 만든 후 변경할 파일들이 저장된 디렉터리 경로를 매개변수로 넘겨주면 됩니다. (실행 명령어 예시: script.sh /file/directory/path) 🗂️ 2. 메타 데이터…","fields":{"slug":"/system/add-dates-to-filename/"},"frontmatter":{"date":"June 20, 2023","title":"파일이름 앞에 생성시간을 붙여주는 셸 스크립트","description":"파일이름 앞에 생성시간을 붙여주는 셸 스크립트","tags":["system"],"series":"시스템 관리","previewImage":"system.jpg","isPrivate":null},"rawMarkdownBody":"\n![토끼 제빵](./images/rabbit_baking.gif)\n\n여러 개의 파일 이름에 생상시간을 자동으로 붙여주는 셸 스크립트입니다.\n\n## 📁 1. 파일 생성일을 파일이름 앞에 붙이는 스크립트\n\n아래의 셸 스크립트가 작성된 파일(.sh)을 만든 후 변경할 파일들이 저장된 디렉터리 경로를 매개변수로 넘겨주면 됩니다. (실행 명령어 예시: script.sh /file/directory/path)\n\n```shell\n# 첫 번째 인자로 전달된 경로\ndirectory=$1\n\n# 경로가 존재하는지 확인\nif [ ! -d \"$directory\" ]; then\n  echo \"경로가 존재하지 않습니다.\"\n  exit 1\nfi\n\n# 디렉터리 내 모든 파일 탐색(filepath: 파일 절대경로)\nfor filepath in \"$directory\"/*; do\n  if [ -f \"$filepath\" ]; then\n    # filedate: '년월일_시분초' 형식의 파일 생성일과 시간\n    filedate=$(date -r $(stat -f %B \"$filepath\") +%Y%m%d_%H%M%S) \n    \n    # filename: 디렉터리 경로를 제외한 파일 이름\n    filename=\"$(basename \"$filepath\")\"\n\n    # 파일이름 앞에 파일 생성일과 시간을 붙임\n    mv \"$filepath\" \"$directory\"/\"$filedate\"_\"$filename\"\n    echo \"변경 전: \"$filepath\"\"\n    echo \"변경 후: \"$directory\"/\"$filedate\"_\"$filename\"\"\n  fi\ndone\n```\n\n## 🗂️ 2. 메타 데이터의 파일 생성일을 파일이름 앞에 붙이는 스크립트\n\nMacOS에서 mdls 명령어를 사용하면 파일의 메타 데이터를 볼 수 있습니다. 이 중 kMDItemContentCreationDate가 파일 생성일을 담고 있는 메타 데이터입니다. 그런데 이 값은 UTC(GMT+0) 시간대이므로 우리나라에서 사용 중인 GMT+9 시간대로 변환해야 합니다.\n\n```shell\n# 첫 번째 인자로 전달된 경로\ndirectory=$1\n\n# 경로가 존재하는지 확인\nif [ ! -d \"$directory\" ]; then\n  echo \"경로가 존재하지 않습니다.\"\n  exit 1\nfi\n\n# 디렉터리 내 모든 파일 탐색(filepath: 파일 절대경로)\nfor filepath in \"$directory\"/*; do\n  if [ -f \"$filepath\" ]; then\n    # filedate_utc: 파일이 생성된 UTC(GMT+0) 시간\n    filedate_utc=$(mdls -name kMDItemContentCreationDate -raw \"$filepath\")\n\n    # filedate_gmt9: UTC(GMT+0) 시간을 GMT+9 시간대로 변환\n    filedate_gmt9=$(TZ=GMT-9 date -jf \"%Y-%m-%d %H:%M:%S %z\" \"$filedate_utc\" +\"%Y%m%d_%H%M%S\")\n\n    # filename: 디렉터리 경로를 제외한 파일 이름\n    filename=\"$(basename \"$filepath\")\"\n\n    # 파일이름 앞에 파일 생성일과 시간을 붙임\n    mv \"$filepath\" \"$directory\"/\"$filedate_gmt9\"_\"$filename\"\n    echo \"변경 전: \"$filepath\"\"\n    echo \"변경 후: \"$directory\"/\"$filedate_gmt9\"_\"$filename\"\"\n  fi\ndone\n```\n\n파일이름을 파일 생성일로 변경하는 스크립트는 아래와 같습니다.\n\n```shell\n# 첫 번째 인자로 전달된 경로\ndirectory=$1\n\n# 경로가 존재하는지 확인\nif [ ! -d \"$directory\" ]; then\n  echo \"경로가 존재하지 않습니다.\"\n  exit 1\nfi\n\n# 디렉터리 내 모든 파일 탐색(filepath: 파일 절대경로)\nfor filepath in \"$directory\"/*; do\n  if [ -f \"$filepath\" ]; then\n    # filedate_utc: 파일이 생성된 UTC(GMT+0) 시간\n    filedate_utc=$(mdls -name kMDItemContentCreationDate -raw \"$filepath\")\n\n    # filedate_gmt9: UTC(GMT+0) 시간을 GMT+9 시간대로 변환\n    filedate_gmt9=$(TZ=GMT-9 date -jf \"%Y-%m-%d %H:%M:%S %z\" \"$filedate_utc\" +\"%Y%m%d_%H%M%S\")\n\n    # extension: 파일 확장자\n    extension=$(basename \"$filepath\" | cut -d. -f2)\n\n    # 파일이름을 파일 생성일로 변경\n    mv \"$filepath\" \"$directory\"/\"$filedate_gmt9\".\"$extension\"\n    echo \"변경 전: \"$filepath\"\"\n    echo \"변경 후: \"$directory\"/\"$filedate_gmt9\".\"$extension\"\"\n  fi\ndone\n```\n\n## ❗ 참고 사이트\n\n* [Add Dates To File Or Photo Names With an Automator Script](https://macmost.com/add-dates-to-file-or-photo-names-with-an-automator-script.html)\n* ChatGPT"},{"excerpt":"도쿄 주변 소도시 여행지 중 한 곳으로 가마쿠라를 갔습니다. 전날 여행했던 하코네와 요코하마는 날씨가 너무 안 좋아서 제대로된 여행을 하지 못했었지만 다행이 이날은 잠깐이나마 날씨가 무척 좋았습니다. 😄 이 날 여행이 아니었다면 이번 여행은 정말 돈만 날린 여행이 될 뻔했습니다. 오전에 에노시마, 오후에 가마쿠라 주요 여행지를 돌아보고 오후 3시쯤부터 비…","fields":{"slug":"/travel/2023-04-tokyo/tokyo-travel-4-kamakura/"},"frontmatter":{"date":"May 02, 2023","title":"2023년 4월 도쿄 주변 소도시(가마쿠라) 병맛 여행기","description":"2023년 4월 도쿄 주변 소도시(가마쿠라) 병맛 여행기","tags":["travel"],"series":"병맛 여행기","previewImage":"travel.jpeg","isPrivate":null},"rawMarkdownBody":"\n![가마쿠라 여행 지도](./images/202304_TokyoTravelMap_Kamakura.jpg)\n\n도쿄 주변 소도시 여행지 중 한 곳으로 가마쿠라를 갔습니다. 전날 여행했던 하코네와 요코하마는 날씨가 너무 안 좋아서 제대로된 여행을 하지 못했었지만 다행이 이날은 잠깐이나마 날씨가 무척 좋았습니다. 😄 이 날 여행이 아니었다면 이번 여행은 정말 돈만 날린 여행이 될 뻔했습니다. \n\n오전에 에노시마, 오후에 가마쿠라 주요 여행지를 돌아보고 오후 3시쯤부터 비가 올 것으로 예상되어 도쿄로 돌아온 후 야마하 긴자 점과 혼밥 고깃집 그리고 시부야 스카이에 가봤습니다.\n\n\n## 😎 가마쿠라 여행 팁\n\n저는 가마쿠라를 반나절 동안 짧게 돌아볼 계획이라 가마쿠라 교통패스를 구입하지 않았습니다. 이곳저곳 둘러볼 계획이라면 아래 교통패스를 구입하는 게 좋습니다.\n\n1. 에노시마 가마쿠라 프리패스: 신주쿠 역과 후지사와 역을 1회 왕복할 수 있고 에노덴을 기간 내 무제한으로 탈 수 있는 패스입니다. 신주쿠역 서쪽 지하에 있는 오다큐 외국인여행센터와 자동판매기에서 구입할 수 있습니다.\n2. 에노덴 1일 승차권(노리오리쿤): 에노덴을 기간 내 무제한으로 탈 수 있는 승차권입니다. 후지사와 역이나 가마쿠라 역에서 구입할 수 있습니다. 에노덴만 5번 이상 탈 계획이라면 이득인 패스인 것 같습니다.\n\n자세한 설명은 [Japan Travel my NAVITIME](https://japantravel.navitime.com/ko/area/jp/guide/NTJnews0254-ko/)을 참고하길 바랍니다.\n\n\n## 🚝 쇼난 모노레일을 타보자\n\n보통 가마쿠라를 여행한다면 후지사와 역이나 에노시마 역에서부터 여행을 많이 시작하는 것 같습니다. 저는 약간 색다르게 모노레일을 타고 가마쿠라 에노시마에 가려합니다. [오후나 역](https://goo.gl/maps/eWXEzNULkCi4Qezs9)으로 이동하여 쇼난 모노레일을 탔습니다.\n\n![쇼난 모노레일 외부](./images/20230408085038_ShonanMonorail.jpg)\n\n![쇼난 모노레일 내부](./images/20230408085525_ShonanMonorail.jpg)\n\n어느 남자아이와 아버지가 함께 모노레일을 탔는데, 남자아이가 모노레일 앞쪽 풍경을 보며 계속해서 감탄을 금치 못했습니다. 이 아이를 보면서 나이를 먹을수록 새로운 것을 경험해도 감흥이 없어지는 것이 슬퍼집니다. 😭 이 아이의 아버지도 아래 [일상툰](https://www.instagram.com/p/CTowZrAhcQz/?utm_source=ig_web_copy_link) 과 같은 생각이 드시려나요... 🥹\n\n![이숨: 어린 나와 만남](./images/2SoomToon_MeetingWithAYoungMan.jpg)\n\n쇼난에노시마 역에서 내리니 맑은 하늘이 나타났습니다. 일본여행 4일 차에 처음으로 비가 오지 않고 제대로 된 푸른 하늘을 볼 수 있게 되다니... 😭\n\n![쇼난 모노레일 전경](./images/20230408091036_ShonanEnoshimaStation_View.jpg)\n\n\n## 🏝️ 걸어서 에노시마로\n\n이제 맑은 하늘을 거닐며 에노시마로 발걸음을 재촉합니다. 하코네에서도 볼 수 없던 후지산을 에노시마 대교를 건너면서 볼 수 있었습니다. 이틀 전 갔던 하코네는 할말하않... 🤬\n\n토요일 오전 10시 쯤에 에노시마에 도착했는데 문을 연 상점이 많지 않았습니다. 쫀득쫀득 단짠단짠 미타라시 당고를 한 입 먹고 올라갑니다!\n\n![에노시마 가는 중](./images/20230408091932_GoingToEnoshima.jpg)\n\n![에노시마 다리](./images/20230408092540_Enoshima_Bridge.jpg)\n\n![에노시마 다리에서 본 후지산](./images/20230408092630_Enoshima_Bridge_FujiMountain.jpg)\n\n![에노시마 입구](./images/20230408093106_Enoshima_Entry.jpg)\n\n![에노시마 당고 1](./images/20230408093332_Enoshima_Dango.jpg)\n\n![에노시마 당고 2](./images/20230408093444_Enoshima_Dango.jpg)\n\n돈 주고 에스컬레이터를 타고 올라갈 수도 있지만 저는 걸어서 올라가보려 합니다.\n\n![에노시마 에스컬레이터 입구](./images/20230408093820_Enoshima_Entry.jpg)\n\n\n## ⛩️ 덕스러운(?) 에노시마 신사\n\n에노시마를 올라가다가 들른 신사입니다. 신사에 가면 항상 에마(소원 등을 적어놓은 나무판)를 구경하곤 하는데 이곳에도 역시 있었습니다. 특이하게 덕스러운(?) 에마도 많이 있군요. 😅\n\n![에노시마 신사](./images/20230408094206_Enoshima_Shinsa.jpg)\n\n![에노시마 에마](./images/20230408094348_Enoshima_Shinsa_Ema.jpg)\n\n![덕 냄새가 나는(?) 에마](./images/20230408094726_Enoshima_Shinsa_Ema.jpg)\n\n\n## 💡 어느 맑은 날의 에노시마 전망등대\n\n입장료 500엔을 내고 에노시마 전망등대에 입장했습니다. 전망등대에서 바라본 뷰는 와우...! 하코네에서 흐린 날씨 탓에 보지 못했던 후지산 전망을 여기서 대신 볼 수 있었습니다. 마치 후지산이 구름을 뿜어내고 있는 것 같았습니다. 에노시마에는 반드시 맑은 날에 와서 가마쿠라 전망을 보고 가길 추천드립니다. 👍\n\n![에노시마 전망등대 티켓](./images/20230408100232_Enoshima_Ticket.jpg)\n\n![에노시마 전망등대 ](./images/20230408100436_Enoshima_SeaCandle.jpg)\n\n![에노시마 전망등대 전망 1](./images/20230408101034_Enoshima_SeaCandle_View.jpg)\n\n![에노시마 전망등대 전망 2](./images/20230408101258_Enoshima_SeaCandle_View.jpg)\n\n![에노시마 전망등대 전망 3](./images/20230408101346_Enoshima_SeaCandle_FujiMountain.jpg)\n\n\n## 🐟 시라스동 먹으러\n\n에노시마 전망등대에서 가마쿠라 전경을 보고온 후 에노시마 서쪽을 둘러보다가 시라스동을 먹기 위해 우오미테이라는 식당에 갔습니다. 이 식당에선 테라스에 앉아 오션뷰를 보며 식사를 할 수 있습니다.\n\n![우오미테이 입구](./images/20230408102740_Enoshima_Uomitei_Entry.jpg)\n\n![우오미테이 메뉴](./images/20230408102802_Enoshima_Uomitei_Menu.jpg)\n\n![우오미테이 테라스 뷰 1](./images/20230408103202_Enoshima_Uomitei_Teras.jpg)\n\n![우오미테이 테라스 뷰 2](./images/20230408103456_Enoshima_Uomitei_Beer.jpg)\n\n주문한 가마아게 시라스동 입니다. 우리말로 번역하면 찐 잔멸치 덮밥인데, 여기서 찐은 진짜(Real) 라는 뜻이 아닌 익힌(Steamed) 이라는 뜻입니다. 😅 익히지 않은 생 시라스동도 있긴 한데 비릴 것 같아 고민 좀 하다가... 나중에 또 오게 되면 먹어보기로 다짐하며 가마아게 시라스동을 택했습니다. 더불어 주문한 에노시마 맥주는 평소에 먹던 맥주보다 걸쭉한 느낌이 듭니다.\n\n밥 위에 얹어진 수많은 멸치들을 보며 예전에 읽었던 소설 『유정천가족』 의 한 구절이 문득 생각납니다.\n\n> \"내게 먹힐 네가 불쌍해.\"<br>\n> \"잡아먹지 않으면 되잖아요?\"<br>\n> \"먹어버리고 싶을 정도로 좋아하는 걸. 하지만 좋아하는 걸 먹으면 좋아하는 것이 없어져 버리는 걸...\"\n\n좋아하기 때문에 잡아먹는다는, 포식자가 피식자를 위하는 듯한 이 모순적인 인식을 어떻게 이해해야 할지 어렵습니다. 이 철학적인 고민에 대한 답을 죽기 전까지 찾을 수 있으려나요... 다만 생물은 다른 생물을 잡아먹어야만 생명을 유지할 수 있기에 식탁에 올라온 음식에 항상 감사할 따름입니다.\n\n![우오미테이 가마아게 시라스동 1](./images/20230408103442_Enoshima_Uomitei_KamaageSirasudon.jpg)\n\n너무 맛있게 먹었습니다. 언제가 될지 모르겠으나 다음에 에노시마에 온다면 생 시라스동을 먹어봐야 겠습니다!\n\n![우오미테이 가마아게 시라스동 2](./images/20230408104836_Enoshima_Uomitei_EatEverything.jpg)\n\n\n## 🏫 슬램덩크 성지 가마쿠라코코마에 역\n\n다시 에노시마 대교를 건너 에노시마를 빠져나갑니다. 에노덴을 타고 가마쿠라코코마에 역을 갈까 하다가 맑은 날씨에 해안가도 거닐 겸해서 걸어서 가봤습니다. 걸어가 보니... 에노시마에서 가마쿠라코코마에 역까지 거리가 약 3km 정도 되므로 가급적 에노덴을 타고 가는 게 좋습니다.\n\n![에노시마 다리](./images/20230408110532_Enoshima_Bridge.jpg)\n\n![에노시마 다리 주변 해변](./images/20230408111344_Enoshima_Beach.jpg)\n\n![가마쿠라코코마에 역](./images/20230408113218_KamakuraKokomaeStation.jpg)\n\n가마쿠라코코마에 역 근처 철도 건널목에 도착하니 슬램덩크 애니메이션 오프닝 장면을 찍기 위해 모여든 사람들로 가득했습니다. 시간이 지나도 사람들이 줄어들질 않습니다. 마치 있던 사람들이 떠나면 새로운 사람들이 계속해서 들어오는 듯했습니다.\n\n![가마쿠라코코마에 역 근처 철도 건널목 1](./images/20230408113452_KamakuraKokomaeStation_RailroadCrossing.jpg)\n\n![가마쿠라코코마에 역 근처 철도 건널목 2](./images/20230408114410_KamakuraKokomaeStation_RailroadCrossing.jpg)\n\n![가마쿠라코코마에 역 근처 철도 건널목 3](./images/20230408114932_KamakuraKokomaeStation_RailroadCrossing.jpg)\n\n저도 한번 그 장면을 찰칵...! 📸\n\n![슬램덩크 장면(가마쿠라코코마에 역 근처 철도 건널목)](./images/Slamdunk_KamakuraKokomaeStation_RailroadCrossing.JPG)\n\n![가마쿠라코코마에 역 근처 철도 건널목 4](./images/20230408114452_KamakuraKokomaeStation_RailroadCrossing.jpg)\n\n철도 건널목에서 언덕길을 조금만 올라가면 가마쿠라 고등학교가 나옵니다. 외부인은 들어갈 수 없어 정문만 구경하다가 하세대라로 떠났습니다.\n\n![가마쿠라 고등학교](./images/20230408114802_KamakuraKoko.jpg)\n\n\n## 📿 하세데라\n\n이제 에노덴을 타고 하세데라로 떠납니다. 에노덴엔 선풍기가 돌고 있네요. \n\n![에노덴 전망](./images/20230408120111_Enoden.jpg)\n\n![에노덴 선풍기](./images/20230408121900_Enoden_Fan.jpg)\n\n입장료 400엔을 내고 하세데라 절에 와봤습니다. 가마쿠라 전망을 볼 수 있긴 한데 에노시마에서 봤던 전망에 비하면 초라합니다. 여유가 있다면 잠깐 들러볼만한 곳인 것 같습니다.\n\n![하세데라 입구](./images/20230408123014_HasederaTemple_Entry.jpg)\n\n![하세데라 티켓](./images/20230408123158_HasederaTemple_Ticket.jpg)\n\n![하세데라 1](./images/20230408123426_HasederaTemple.jpg)\n\n![하세데라 2](./images/20230408123328_HasederaTemple.jpg)\n\n![하세대라 전망](./images/20230408123649_HasederaTemple_View.jpg)\n\n\n## 📿 고토쿠인\n\n그 다음 입장료 200엔을 내고 고토쿠인에 갔습니다. 특이하게 하세데라와 고토쿠인은 단체 여행객들이 바글바글 했습니다. 약 11미터 크기의 대불상을 보러 오기에 괜찮은 곳입니다. 그런데... 부처님 등에서 부스터가 나올 것만 같습니다. 🚀\n\n![고토쿠인 티켓](./images/20230408125104_Kotokuin_Ticket.jpg)\n\n![고토쿠인 앞쪽](./images/20230408125226_Kotokuin_StatueOfBuddha.jpg)\n\n![고토쿠인 뒤쪽](./images/20230408125332_Kotokuin_StatueOfBuddha.jpg)\n\n\n## 🛍️ 코마치도리\n\n아직 날씨가 맑았지만 곧 비가 온다는 예보가 있어 도쿄로 올라갈 예정입니다. 4박 5일 여행하는 동안 이렇게 비가 오지 않고 푸른 날씨를 볼 수 있던 시간이 반나절밖에 되질 않다니 이 무슨 억까란 말인가... 😭\n\n반나절 동안 가마쿠라를 여행해보니 시간이 너무 부족했습니다. 원래 더 가볼 곳이 있었지만 다음날 귀국하기 전에 긴자 야마하 점에 꼭 가야 했기 때문에 가마쿠라 여행은 코마치도리에서 마무리 지었습니다. 나중에 돈 많이 벌어서 느긋하게 다시 여행해봤으면 좋겠습니다.\n\n![가마쿠라 해변](./images/20230408131250_Kamakura_Beach.jpg)\n\n당시 토요일이어서 그런지 상점가엔 사람들로 가득했습니다. 거리를 거닐다가 가성비가 좋아보이는 선물용 과자 몇 개를 사갔습니다.\n\n![코마치도리 1](./images/20230408134534_Komachidori.jpg)\n\n![코마치도리 2](./images/20230408135142_Komachidori.jpg)\n\n[비둘기 과자 하토 사브레](https://goo.gl/maps/i11y9Ye1Bmft7Wux6)입니다. 구↗우↘ 비둘기야 먹자~ 구구구구구~ 🕊️\n\n![코마치도리 하토 사브레(비둘기 과자)](./images/20230408135218_Komachidori_PigeonSnack.jpg)\n\n[토끼 모양이 그려진 한게츠 전병](https://goo.gl/maps/RdQ2Sy5PPuGpYMWY9)도 가성비가 괜찮습니다. 🐰\n\n![코마치도리 토끼 과자](./images/20230408140830_Komachidori_RabbitSnack.jpg)\n\n\n## 🎹 야마하 긴자에서 버스킹(?)\n\n가마쿠라 여행을 마친 후 긴자로 향했습니다. 긴자로 간 이유는 야마하 긴자 점에 있는 사일런트 피아노로 한번 연주를 해보고 싶었기 때문입니다.\n\n사일런트 피아노는 일반 피아노와 디지털 피아노의 기능을 동시에 갖춘 피아노입니다. 평소에 일반 피아노처럼 연주하다가 헤드폰을 연결해 디지털 피아노처럼 연주할 수 있는 피아노입니다. 언젠가 꼭 사고 싶은 피아노여서 사일런트 피아노가 전시된 야마하 매장을 찾아봤지만 찾질 못했습니다. 그러다가 이번 여행을 통해 우연히 사일런트 피아노를 접해볼 수 있었습니다.\n\n가마쿠라 여행 후 긴자에 오니 비가 오기 시작했습니다. 여행하는 동안 비가 하루도 안 온 날이 없어 정말 지긋지긋합니다... 😩\n\n![주말의 긴자 도로](./images/20230408170340_Ginza.jpg)\n\n야마하 긴자 점 입구입니다. 건물이 높아서 올려다보면 고개 아파요...\n\n![야마하 긴자](./images/20230408161740_YamahaGinza.jpg)\n\n![야마하 긴자 층별 가이드](./images/20230408162154_YamahaGinza_1F_FloogGuide.jpg)\n\n1층에 AI와 함께하는 벚꽃 피는 피아노가 전시되어 있었습니다. 악보대에 있는 아이패드와 연동이 되어 있어서 피아노 건반을 누르면 아이패드에서, 반대로 아이패드 건반을 터치하면 피아노에서 음이 들립니다. 사람이 많은 곳에서 피아노 연주를 해본 적은 이번이 처음이어서 무척 떨렸지만 무사히 잘 연주해보고 나왔습니다. 😁\n\n![야마하 긴자 1층 AI 피아노](./images/20230408161827_YamahaGinza_1F_AIPiano.jpg)\n\n![야마하 긴자 1층 AI 피아노 연주](./images/20230408165348_YamahaGinza_1F_AIPiano_Play.jpg)\n\n3층에선 악보와 굿즈를 판매합니다.\n\n![야마하 긴자 3층 악보 판매](./images/20230408162512_YamahaGinza_3F_MusicSheet.jpg)\n\n![야마하 긴자 3층 굿즈 판매](./images/20230408162938_YamahaGinza_3F_Goods.jpg)\n\n드디어 대망의 5층! 5층엔 어쿠스틱, 디지털, 그랜드 피아노 등 각종 피아노가 전시되어 있습니다.\n\n![야마하 긴자 5층 피아노 1](./images/20230408165055_YamahaGinza_5F.jpg)\n\n![야마하 긴자 5층 피아노 2](./images/20230408165103_YamahaGinza_5F.jpg)\n\n제가 갈망하던 사일런트 피아노도 전시되어 있습니다. 가격이 사악하군요... 😱\n\n![야마하 긴자 5층 사일런트 피아노 가격](./images/20230408163727_YamahaGinza_5F_SlientPianoPrice.jpg)\n\n사일런트 피아노는 평소에는 일반 피아노처럼 연주하다가 디지털 피아노처럼 연주하고 싶다면 가운데 페달을 밟은 후 왼쪽으로 꺾어주면 됩니다. 그러면 사일런트 피아노에 연결된 헤드셋으로만 피아노 소리가 들립니다.\n\n사일런트 모드를 켜고 껐을 때의 타건감에 차이가 있다고 하는데 저는 딱히 느끼질 못했습니다. 어쿠스틱 피아노의 단점은 소음 문제 때문에 아파트 같은 공동주택에서 연주하기에 제약이 따르고, 디지털 피아노의 단점은 타건감이 어쿠스틱 피아노와 너무 다르다는 점인데요. 사일런트 피아노는 두 피아노의 단점을 모두 상쇄하는 피아노입니다. 다만 돈이 있어야 이 단점들이 해결됩니다. 나중에 큰 돈을 벌어서 꼭 살겁니다! 🤑\n\n![야마하 긴자 5층 사일런트 피아노 테스트](./images/20230408164019_YamahaGinza_5F_SlientPiano_Test.jpg)\n\n![야마하 긴자 5층 사일런트 피아노 연주](./images/20230408164058_YamahaGinza_5F_SlientPiano_Play.jpg)\n\n어반트 그랜드 피아노 라는게 있어서 이것도 연주 해봤습니다. 외관은 아주 조그마한 그랜드 피아노 같은 게 뭔가 그냥 겁나 좋은 디지털 피아노 같은데 아무리 비싼 전자피아노가 들려주는 전자 음색도 이질감이 느껴지는 것 같습니다.\n\n![어반트 그랜드 피아노 연주](./images/20230408164738_YamahaGinza_5F_AvantGrandPiano_Play.jpg)\n\n\n## 🥩 가성비 갑 혼밥 고깃집\n\n여행 오기 전 [유우키의 일본 이야기: 도쿄에 새로 생긴 혼밥 전용 고깃집에 가보았다](https://youtu.be/L_G27ScXO3o) 라는 유튜브 동영상을 보고 혼밥 고깃집에 가보기로 마음을 먹었습니다. 숙소 근처에도 혼밥 고깃집이 있긴 했지만 저 유튜브 동영상에 나온 식당이 긴자에서 가까운 곳에 있어서 한번 가봤습니다.\n\n이번에 가본 혼밥 고깃집은 [야키니쿠 규톤 간다역 앞 점](https://goo.gl/maps/f1QzkuBWX25DiHqA6) 입니다. 간다 역 동쪽 출구에서 내리면 바로 보입니다.\n\n![야키니쿠 규톤 간다역 점 입구](./images/20230408183342_YakinikuGyutongGandaStation_Entry.jpg)\n\n![야키니쿠 규톤 간다역 점 메뉴](./images/20230408183518_YakinikuGyutongGandaStation_Menu.jpg)\n\n주문은 QR코드로 합니다. \n\n![야키니쿠 규톤 간다역 점 QR코드 주문](./images/20230408183558_YakinikuGyutongGandaStation_QR.jpg)\n\n칸막이가 큼직해서 옆자리에 누가 앉아도 신경쓰이지 않습니다. 그리고 1인석 밖에 없어서 혼밥하기에 최적화되어 있습니다. \n\n![야키니쿠 규톤 간다역 점 칸막이](./images/20230408190404_YakinikuGyutongGandaStation_Wall.jpg)\n\n주문한 프리미엄 규톤 세트, 하이볼 그리고 추가로 주문한 김치 토핑입니다. 메뉴로 봤을 땐 몰랐었는데 나와보니 고기 양이 매우 많았습니다. 앞쪽에 있는 불판에 소기름을 바른 후 구워서 먹으면 됩니다.\n\n330엔을 내고 30분 동안 맥주를 무한리필해서 마실 수 있는 걸로 알고 있었는데, 저 식당에 갔을 때 이 메뉴가 있다는 걸 까먹고 있었습니다. 😅 아쉬워라... \n\n![야키니쿠 규톤 간다역 점 음식(프리미엄 규톤 세트)](./images/20230408184222_YakinikuGyutongGandaStation_Food.jpg)\n\n![고기 굽는 중](./images/20230408184914_YakinikuGyutongGandaStation_Eating.jpg)\n\n고기 굽다가 뭔가 허전해서 김치도 같이 구워 먹었습니다. 이 때 소기름을 김치에 녹여서 구웠더라면 더 맛있었을텐데... 왜 다 먹고나서 생각이 나는 걸까요. 🙄\n\n![고기랑 김치 굽는 중 1](./images/20230408185434_YakinikuGyutongGandaStation_Eating.jpg)\n\n![고기랑 김치 굽는 중 2](./images/20230408184822_YakinikuGyutongGandaStation_Grilling.jpg)\n\n배부르게 너무 잘 먹었습니다. 또 가서 혼자 고기를 구워먹고 싶습니다! 우리나라에도 이렇게 가성비 좋은 혼밥 고깃집이 있다면 자주 가겠지만... 아마 생길 리가 없겠지요. 🤔\n\n![다 먹음](./images/20230408191028_YakinikuGyutongGandaStation_EatEverything.jpg)\n\n이곳은 계산도 셀프로 합니다. 그런데 계산대 옆에 [이 혼밥 고깃집을 소개하는 동영상](https://youtu.be/L_G27ScXO3o)의 유튜버를 환영하는 액자가 걸려 있었습니다. 제가 이 동영상을 보고 오게 된 건데... 와우 반갑네요! 😄\n\n![유우키](./images/20230408191356_YakinikuGyutongGandaStation_Yuuki.jpg)\n\n\n## 🌌 시부야 스카이\n\n이번 여행의 마지막 여행지입니다. 원래 일몰 시간에 맞춰 시부야 스카이에 가려고 여행 일주일 전에 예약하려 했지만 이미 매진돼버렸습니다. 그래서 야경이라도 보기 위해 오후 8시로 티켓을 예약하고 시부야 스카이에 갔습니다.\n\n이곳도 날씨 때문에 관람이 제한됐습니다. 강풍 때문에 제한한 것 같은데, 이번 여행은 끝까지 날씨 때문에 망하는군요... 😭\n\n![시부야 스카이 강풍 안내](./images/20230408195520_ShibuyaSky_1F_Notice.jpg)\n\n당일 티켓은 마감됐습니다. 일몰 시간 이후에 올 예정이라면 예약은 필수인 것 같습니다.\n\n![시부야 스카이 티케팅 창구](./images/20230408195840_ShibuyaSky_Ticketing.jpg)\n\n시부야 스카이 건물 내에서 내려다 본 시부야 스크램블 교차로입니다. 루프탑을 갈 수가 없다니... 😭\n\n![시부야 스카이 창문 뷰(스크램블 교차로)](./images/20230408200734_ShibuyaSky_WindowView.jpg)\n\n![시부야 스카이 창문 뷰](./images/20230408201246_ShibuyaSky_WindowView.jpg)\n\n앗 그런데 오후 9시가 되니 갑자기 사람들이 좀비 떼마냥(?) 달리기 시작합니다. 뭔가 하고 알아보니 루프탑이 개방된 것이었습니다. 강풍이 잦아들어서 개방한 것일까요? 역시 존버는 승리합니다. 👍 100엔을 내고 짐을 코인락커에 맡긴 후 루프탑으로 올라갔습니다.\n\n루프탑에 올라와보니 왜 시부야 스카이에 가는지 알게 됐습니다. 저 빛나는 건물 하나하나가 마치 밤하늘을 수놓는 별빛 같았습니다. 사진으로 설명할 수 없는 느낌이 있는데 뭐라 표현할 방법이 없습니다. 루프탑에 가지 못했다면 돈 날린 셈 칠뻔했습니다.\n\n![시부야 스카이 루프탑 에스컬레이터 1](./images/20230408203734_ShibuyaSky_Rooftop.jpg)\n\n![시부야 스카이 루프탑 1](./images/20230408203944_ShibuyaSky_Rooftop.jpg)\n\n![시부야 스카이 루프탑 2](./images/20230408204502_ShibuyaSky_Rooftop_View.jpg)\n\n![시부야 스카이 루프탑 3](./images/20230408205020_ShibuyaSky_Rooftop.jpg)\n\n![시부야 스카이 에스컬레이터 2](./images/20230408205230_ShibuyaSky_Rooftop.jpg)\n\n이것으로 4박 5일 일정의 도쿄 주변 소도시 여행이 끝났습니다. 날씨 때문에 크게 불만족한 여행은 이번이 처음입니다. 나중에 날씨가 좋을 때 제대로 만족할만한 여행을 다시 해보고 싶습니다. 우리나라 근처 해외여행 쯤은 동네 마실 가듯 하고 싶습니다. 🤑"},{"excerpt":"도쿄 주변 소도시 여행 중 한 곳으로 요코하마를 갔습니다. 전날에 하코네로 여행을 갔다가 날씨 때문에 너무 고생을 해서 이번엔 안 그러길 바랬지만 역시 그런 건 없었습니다... 대충 오전에 도쿄 몇 군데를 가보고 오후에 요코하마로 떠났습니다. 😎 요코하마 여행 팁 저는 요코하마 이곳저곳을 돌아다니지 않고 야마시타 공원 근처만 다녀왔기 때문에 교통패스권을 …","fields":{"slug":"/travel/2023-04-tokyo/tokyo-travel-3-yokohama/"},"frontmatter":{"date":"April 30, 2023","title":"2023년 4월 도쿄 주변 소도시(요코하마) 병맛 여행기","description":"2023년 4월 도쿄 주변 소도시(요코하마) 병맛 여행기","tags":["travel"],"series":"병맛 여행기","previewImage":"travel.jpeg","isPrivate":null},"rawMarkdownBody":"\n![요코하마 여행 지도](./images/202304_TokyoTravelMap_Yokohama.jpg)\n\n도쿄 주변 소도시 여행 중 한 곳으로 요코하마를 갔습니다. 전날에 하코네로 여행을 갔다가 날씨 때문에 너무 고생을 해서 이번엔 안 그러길 바랬지만 역시 그런 건 없었습니다...\n\n대충 오전에 도쿄 몇 군데를 가보고 오후에 요코하마로 떠났습니다.\n\n\n## 😎 요코하마 여행 팁\n\n저는 요코하마 이곳저곳을 돌아다니지 않고 야마시타 공원 근처만 다녀왔기 때문에 교통패스권을 구입하지 않았습니다. 요코하마 이곳저곳을 가볼 계획이라면 아래 교통패스권을 구입하는 게 좋습니다. \n\n1. 미나토미라이 패스: 시부야 역과 요코하마를 1회 왕복할 수 있고 미나토미라이 선을 기간내 무제한으로 탈 수 있는 패스입니다. 시부야 역 또는 도큐선을 지나는 역에서 구입할 수 있습니다. 패스 값이 시부야 ↔ 요코하마 1회 왕복 교통비와 비슷하므로 시부야에서 요코하마로 출발한 후 다시 시부야로 돌아올 예정이라면 무조건 사는 게 이득인 패스인 것 같습니다.\n2. 미나토부라리 티켓: 블루라인 지하철과 아카이쿠츠 등의 버스를 하루 동안 무제한으로 탈 수 있는 티켓입니다. 사쿠라기초역 관광안내소와 블루라인 지하철 역에서 구입할 수 있습니다. 블루라인 지하철이나 버스를 세 번 이상 타는 경우 이득인 패스인 것 같습니다.\n\n자세한 설명은 [요코하마 공식 관광정보 가이드 사이트](https://www.yokohamajapan.com/kr/information/discount-tickets-passes)를 참고하길 바랍니다.\n\n\n## 🏞️ 시바 공원. 시바...\n\n너무 일찍 요코하마로 가면 문을 연 관광지나 상점이 없을까봐 오전엔 도쿄 내 몇 군데를 돌아보기로 했습니다. 시바 공원 근처에서 벚꽃을 볼 수 있을까 혹시나 해서 와 봤지만 아니나다를까... 볼 수 없었습니다. 😭\n\n![미나토구립 시바 공원](./images/20230407105450_MinatoCityPark.jpg)\n\n이렇게 된 이상 유리카모메를 타고 오다이바에 있는 건담을 보러 갑니다.\n\n![유리카모메](./images/20230407112358_Yurikamome.jpg)\n\n\n## 🤖 오다이바에서 본 라이트모드 건담\n\n5년 전 도쿄 여행 때 오다이바에서 다크모드(?) 유니콘 건담을 보고 왔었습니다.\n\n![2018년 오다이바 건담](./images/20181012185400_Odaiba_Gundam.jpg)\n\n이번엔 라이트모드 유니콘 건담을 보러 갔습니다. 가슴이 웅장해집니다...\n\n![2023년 오다이바 건담](./images/20230407115454_Odaiba_Gundam.jpg)\n\n오다이바엔 벚꽃이 있는데 없습니다. 일주일만 빨리왔어도 벚꽃 구경할 수 있었을텐데... 그리고 오다이바엔 관람차가 있었는데 어찌된 영문인지 사라졌습니다.\n\n![오다이바 벚꽃?](./images/20230407114642_Odaiba_CherryBlossom.jpg)\n\n어찌됐든 요코하마로 이동합니다!\n\n\n## 🏛️ 베릭홀\n\n베릭홀에서 피아노 연주를 하는 유튜브 동영상을 보고 혹시 연주해볼 수 있지 않을까 싶어서 가봤습니다. 전시된 피아노가 있었지만 연주해볼 수는 없었습니다. 😭\n\n![베릭홀 입구](./images/20230407133052_BerrickHall.jpg)\n\n![베릭홀 피아노](./images/20230407133332_BerrickHall.jpg)\n\n![베릭홀 피아노 안내문](./images/20230407133258_BerrickHall.jpg)\n\n이런 집에서 살면 난방비랑 전기세는 얼마나 나올까... 집세나 공과금이 얼마나 나오든 걱정 없도록 돈을 많이 모았으면 좋겠습니다. 🤑\n\n![베릭홀 내부 1](./images/20230407133534_BerrickHall.jpg)\n\n![베릭홀 내부 2](./images/20230407133738_BerrickHall.jpg)\n\n![베릭홀 내부 3](./images/20230407133840_BerrickHall.jpg)\n\n\n## 🇨🇳 차이나타운\n\n차이나타운은 점심 먹을 겸 한번 구경해보려고 가봤습니다. 개인적으론 관제묘 빼곤 볼만한 게 없어 보입니다. 굳이 꼭 찾아올만한 곳은 아닌 것 같습니다.\n\n![차이나타운 입구](./images/20230407135200_ChinaTown.jpg)\n\n![차이나타운 거리](./images/20230407140505_ChinaTown.jpg)\n\n![관제묘 1](./images/20230407135430_ChinaTown_MazuMiaoZ.jpg)\n\n![관제묘 2](./images/20230407135634_ChinaTown_MazuMiaoZ.jpg)\n\n<!-- ![차이나타운 거리 2](./images/20230407140352_ChinaTown.jpg) -->\n\n그래도 차이나타운에 와서 뭔가 색다른 걸 먹어봐야겠지요. 오색 소룡포라는 메뉴가 눈에 띄어서 먹어봤는데... 맛없습니다. 🤮\n\n전날 하코네 여행이 망해서 그런지 입맛도 없고해서 그냥 점심을 챙겨먹지 않고 다음 목적지로 이동했습니다.\n\n![차이나타운 5색 샤오롱바오](./images/20230407141456_ChinaTown_Xiaolongbao.jpg)\n\n\n## 🤖 웅장이 가슴해지는 건담 팩토리\n\n야마시타 공원을 지나 건담 팩토리로 향합니다.\n\n![야마시타 공원](./images/20230407142458_YamashitaPark.jpg)\n\n![건담 팩토리 입구](./images/20230407143140_GundamFactory_Entry.jpg)\n\n간단한 설문지를 작성한 후 성인 입장료 1,650엔을 내고 입장하자마자 약 18m 크기의 건담을 볼 수 있습니다. \n\n![건담 팩토리 입구 설문지](./images/20230407143440_GundamFactory_Entry.jpg)\n\n![건담 팩토리 독 타워 1](./images/20230407144032_GundamFactory_DockTower.jpg)\n\n![건담 팩토리 독 타워 2](./images/20230407145126_GundamFactory_DockTower.jpg)\n\n거대한 건담을 보니 웅장이 가슴해집니다(?) \n\n원래 이 건담은 정해진 시간에 움직이기도 하지만 이 날엔 강풍 때문에 중단됐습니다. 요코하마로 온 주 목적이 움직이는 건담을 보는 것이었는데... 어제 다녀온 하코네도 그렇고 요코하마도 그렇고 날씨 때문에 계획대로 되는 일이 없습니다. 😭\n\n![월월이](./images/barkbark_never_do.jpg)\n\n건담 랩에서 조그마한 프라모델을 조립하는 로봇 구경도 하고... \n\n![건담 팩토리 랩](./images/20230407144144_GundamFactory_Lab.jpg)\n\n![건담 팩토리 랩 내부](./images/20230407144652_GundamFactory_Lab.jpg)\n\n2층에 건담 카페가 있습니다. 햄버거, 카레, 도시락 등을 파는데 저는 목이 말라서 보틀을 샀더니 요코하마 블루 소다를 서비스로 받았습니다(?) 😅\n\n![건담 카페 입구](./images/20230407145212_GundamFactory_Cafe.jpg)\n\n![건담 카페 내부](./images/20230407145306_GundamFactory_Cafe.jpg)\n\n![건담 카페 키오스크](./images/20230407145652_GundamFactory_Cafe_Kiosk.jpg)\n\n![건담 카페 요코하마 블루 소다](./images/20230407150432_GundamFactory_Cafe_Bottle.jpg)\n\n카페 옆 쪽에 있는 이곳은 교육장...? 🤔\n\n![건담 카페 옆 교육장?](./images/20230407151318_GundamFactory_Education.jpg)\n\n다시 1층으로 내려와서 건담베이스 요코하마 새틀라이트샵에 갔습니다. 프라모델과 굿즈를 파는 곳인데 여기서 난생 처음으로 건프라를 사봤습니다. RX-78F00 GUNDAM & G-DOCK 건프라를 샀는데 이 곳에서만 파는 한정판인 것 같습니다.\n\n여행 다녀온 후 조립해보려 했는데 조립해야 할 부품이 엄청 많을 줄 몰랐네요... 😵‍💫\n\n![건담 베이스 입구](./images/20230407151440_GundamFactory_Base_Entry.jpg)\n\n![건담 베이스 계산대](./images/20230407151532_GundamFactory_Base.jpg)\n\n![건담 베이스 건프라 1](./images/20230407151600_GundamFactory_Base.jpg)\n\n![건담 베이스 건프라 2](./images/20230407151750_GundamFactory_Base.jpg)\n\n18 미터의 꿈... 이거 보고 18금 책인줄... 🥵\n\n![18금 책인줄...](./images/20230407151956_GundamFactory_Base.jpg)\n\n![RX-78F00 건프라 구입](./images/20230407152210_GundamFactory_Base.jpg)\n\n건담 팩토리를 나가려 하니 비가 오기 시작합니다. 저 건담이 움직이는 모습을 보고 가지 못해서 너무 아쉽지만 별 수 없지요... 😢\n\n![건담 팩토리 독 타워 3](./images/20230407152642_GundamFactory_DockTower.jpg)\n\n![건담 팩토리 퇴장](./images/20230407152716_GundamFactory_GoOut.jpg)\n\n\n## 🏞️ 야마시타 공원\n\n건담 팩토리를 나와 컵라면 박물관 방향으로 걷다보면 야마시타 공원을 지나가게 됩니다. 형형색색 알록달록한 꽃들이 흐린 날씨 속에서 빛나는 듯한 모습을 보니 마치 꽃길을 걷는 느낌이 들었습니다. 내 인생도 꽃길좀 걷자... 🙏\n\n![야마시타 공원 1](./images/20230407153140_YamashitaPark.jpg)\n\n![야마시타 공원 2](./images/20230407153106_YamashitaPark.jpg)\n\n![야마시타 공원 3](./images/20230407153838_YamashitaPark.jpg)\n\n\n## 🧱 아카렌가 창고\n\n길을 걷던 도중 폭우가 쏟아지기 시작했습니다. 잠시 아카렌가 창고로 들어가 비를 피했습니다.\n\n아카렌가 창고 안은 쇼핑몰입니다. 음식도 팔고 이것저것 물품도 팝니다. 창고 사이에 잘 꾸며진 화단을 거닐며 드는 생각은 역시나... 내 인생 꽃길좀 걷자... 🙏🙏🙏\n\n![아카렌가 창고 1](./images/20230407155040_Akarenga.jpg)\n\n![아카렌가 창고 2](./images/20230407155546_Akarenga.jpg)\n\n![아카렌가 창고 3](./images/20230407155842_Akarenga.jpg)\n\n![아카렌가 창고 4](./images/20230407155708_Akarenga.jpg)\n\n\n## 🍜 컵라면 박물관\n\n코스모월드 대관람차가 보이는 방향으로 걷다보면 컵라면 박물관에 갈 수 있습니다.\n\n![컵라면 박물관으로 이동 중(코스모 월드 방향 따라 가면 됨)](./images/20230407160148_GoingToCupNoodleMuseum.jpg)\n\n![코스모 월드](./images/20230407160830_CosmoWorld.jpg)\n\n![컵라면 박물관 입구](./images/20230407161242_CupNoodleMuseum_Entry.jpg)\n\n박물관 1층엔 굿즈샵과 매표소가 있습니다. 좀 늦은 시간에 갔더니 치킨라면 팩토리를 이용할 수 없다는 안내를 받았지만 상관 없었기에 성인 입장료 500엔을 내고 입장했습니다.\n\n![컵라면 박물관 샵](./images/20230407165948_CupNoodleMuseum_1F_Shop.jpg)\n\n![컵라면 박물관 티켓](./images/20230407161528_CupNoodleMuseum_1F_Ticket.jpg)\n\n2층엔 치킨라멘과 컵누들의 창시자 안도 모모호쿠 동상과 인스턴스 라면들이 전시되어 있습니다. 안도 모모호쿠는 작고하기 직전까지도 우주식품을 발명했는데, 나에게도 평생 쏟을만한 집념 같은 게 있지 않을지 한번 고민해보게 됩니다.\n\n![컵라면 박물관 안도 모모호쿠 동상](./images/20230407163356_CupNoodleMuseum_2F_StatueOfMomofukuAndo.jpg)\n\n![컵라면 박물관 컵라면 전시관 1](./images/20230407160200_CupNoodleMuseum_2F_SelectionOfRamens.jpg)\n\n![컵라면 박물관 컵라면 전시관 2](./images/20230407163520_CupNoodleMuseum_2F_SelectionOfRamens.jpg)\n\n3층엔 치킨라면을 만들어볼 수 있는 팩토리가 있습니다. 늦은 시간에 가면 조기 마감되니 치킨라면을 꼭 만들어봐야 한다면 일찍 오는 게 좋습니다.\n\n![컵라면 박물관 치킨라면 팩토리 1](./images/20230407164220_CupNoodleMuseum_3F_MakingChickenRamens.jpg)\n\n![컵라면 박물관 히요코](./images/20230407164252_CupNoodleMuseum_3F_Hiyoko.jpg)\n\n4층엔 컵누들 파크와 각국의 면 요리를 파는 누들 바자르가 있습니다. 컵누들 파크는 시간이 늦었는지 닫혀 있었고, 누들 바자르에서 뭘 먹어볼까 고민하다가 아무래도 치킨라멘이 상징성이 있지 않을까 싶어 치킨라멘을 먹어봤습니다. 맛은... 뭔가 누룽지 맛은 안 나는데 누룽지 느낌이 나는 느낌적인 느낌(?) 🤔\n\n![컵라면 박물관 상점가 입구](./images/20230407165708_CupNoodleMuseum_4F.jpg)\n\n![컵라면 박물관 상점가 내부](./images/20230407165508_CupNoodleMuseum_4F_Bazaar_Shop.jpg)\n\n![컵라면 박물관 상점가 냉면](./images/20230407165502_CupNoodleMuseum_4F_Bazaar_Shop.jpg)\n\n![컵라면 박물관 상점가 치킨라멘집](./images/20230407165540_CupNoodleMuseum_4F_Bazaar_Shop.jpg)\n\n![컵라면 박물관 상점가 치킨라멘](./images/20230407165116_CupNoodleMuseum_4F_MiniChickenRamen.jpg)\n\n\n## 🌉 기샤미치\n\n마지막 여행지로 요코하마의 황홀한 야경을 보기 위해 기샤미치에 가봅니다. 기샤미치는 직역하면 기찻길로, 폐선된 철도를 활용한 요코하마의 산책로입니다.\n\n컵라면 박물관 관람을 마치고 나오니 코스모월드에 불이 들어오기 시작합니다. 덩달아 엄청난 강풍이 불기 시작했습니다. 태풍이 온 게 아닐까 싶을 정도의 강풍에 우산이 망가질 것 같아서 잠시 요코하마 랜드마크에 들어가 바람이 잠잠해지길 기다렸습니다.\n\n![코스모월드](./images/20230407174420_CosmoWorld.jpg)\n\n![요코하마 랜드마크 방향으로 가는 중](./images/20230407174650_Yokohama_GoingToLandmarkTower.jpg)\n\n마참내(?) 강풍을 뚫고 도착한 기샤미치. 이곳에서 코스모월드 방향으로 바라보는 요코하마의 야경이 너무 좋습니다. 날씨만 좋았다면 느긋하게 야경을 보고 왔을텐데... 비와 강풍 때문에 오래 있기 힘들어서 잠깐 동안 야경을 보고 도쿄로 돌아갔습니다.\n\n![기샤미치 1](./images/20230407182850_Kishamichi.jpg)\n\n![기샤미치 1](./images/20230407183242_Kishamichi.jpg)\n\n\n## 🍣 이타마에 스시 아카사카 점\n\n하도 날씨 때문에 징징거린 탓인지 오늘 하루종일 오색 소룡포만 먹었는데도 저녁에 배가 고프지 않았습니다. 그래도 배는 채워줘야 하기에 대충 [숙소(나인 아워스 아카사카)](https://goo.gl/maps/Ywb7rCSeBA5JXAaAA) 근처 식당에서 저녁을 해결하기로 했습니다.\n\n[혼자서 고기를 구워먹을 수 있는 식당(야키니쿠 라이크)](https://goo.gl/maps/88B2ndZGhCctQ8te9)이 있길래 한번 가보고 싶었지만 다음날 갈 예정인 식당을 알아둔 곳이 있어서 가진 않았고,\n\n![야키니쿠 라이크](./images/20230407202505_YakinikuLike.jpg)\n\n대신 이타마에 스시라는 가게에서 저녁을 먹었습니다. 특이하게 많은 외국인 손님들이 웨이팅하면서 가던 스시집이었는데 저도 여기선 외국인이므로(?) 빈 자리가 날 때까지 기다렸습니다.\n\n![이타마에 스시 아카사카 점 1](./images/20230407202622_ItamaeSushi_Entry.jpg)\n\n이곳도 QR코드로 주문을 해야 합니다. Finest Sushi Combo 라는 메뉴를 주문해봤습니다.\n\n![이타마에 스시 아카사카 점 QR코드 주문](./images/20230407210212_ItamaeSushi_QR.jpg)\n\n![이타마에 스시 아카사카 점 Finest Sushi Combo 메뉴 1](./images/20230407210536_ItamaeSushi_Sushi.jpg)\n\n든든하게 배를 채우고 내일 가마쿠라로 가볼 예정입니다~\n\n![이타마에 스시 아카사카 점 Finest Sushi Combo 메뉴 2](./images/20230407211828_ItamaeSushi_EatEverything.jpg)\n"},{"excerpt":"도쿄 주변 소도시 여행지 중 한 곳으로 하코네를 갔습니다. 쿠로타마고(검은 달걀)를 까먹으며 후지산을 보고, 하코네 로프웨이와 등산철도를 타며 하코네마치를 돌아볼 계획이었는데 날씨가 좋지 않아 대부분 못하고 돌아왔습니다. 😭 그럴싸한 하코네 여행 계획은 아래와 같이 있었습니다. 날씨에 쳐 맞기 전까진... 🥶 하코네 여행 하루 전, 신주쿠 역내 오다큐 외…","fields":{"slug":"/travel/2023-04-tokyo/tokyo-travel-2-hakone/"},"frontmatter":{"date":"April 26, 2023","title":"2023년 4월 도쿄 주변 소도시(하코네) 병맛 여행기","description":"2023년 4월 도쿄 주변 소도시(하코네) 병맛 여행기","tags":["travel"],"series":"병맛 여행기","previewImage":"travel.jpeg","isPrivate":null},"rawMarkdownBody":"\n\n![하코네 여행 지도](./images/202304_TokyoTravelMap_Hakone.jpg)\n\n도쿄 주변 소도시 여행지 중 한 곳으로 하코네를 갔습니다. 쿠로타마고(검은 달걀)를 까먹으며 후지산을 보고, 하코네 로프웨이와 등산철도를 타며 하코네마치를 돌아볼 계획이었는데 날씨가 좋지 않아 대부분 못하고 돌아왔습니다. 😭\n\n그럴싸한 하코네 여행 계획은 아래와 같이 있었습니다. 날씨에 쳐 맞기 전까진... 🥶\n\n1. 하코네 여행 하루 전, 신주쿠 역내 오다큐 외국인 여행센터에서 로망스카 승차권과 하코네 교통패스 구입\n2. 신주쿠 역에서 로망스카를 타고 하코네유모토 역으로 출발\n3. 모토하코네에서 하코네 신사와 평화의 토리이를 본 후 관광해적선 탑승\n4. 하코네 로프웨이를 타고 쿠로타마고도 먹고 가능하면 후지산 전경도 보고...\n5. 등산철도를 타고 하코네유모토로 복귀\n\n\n## 🎫 하코네 프리패스 구매\n\n하코네에 가기 하루 전날에 오다큐 외국인여행센터에서 로망스카 승차권과 하코네 교통패스를 구입합니다. 인터넷에 오다큐 외국인여행센터 운영시간이 8시 ~ 18시로 나와있었고, 다음날 아침 일찍 출발할 예정이어서 하루 전날에 미리 구입해놨습니다. (그런데 제가 간 날엔 운영시간이 7시 30분 ~ 20시였습니다.)\n\n오다큐 외국인여행센터는 신주쿠 역 서쪽 부근 지하에 있습니다. 신주쿠 역이 워낙 복잡해서 길을 찾는 게 쉽지 않지만, 신주쿠 역 지하로 내려가서 오다큐 선을 타는 방향으로 가다보면 Odakyu Sightseeing Service Center라는 곳을 찾을 수 있습니다.\n\n![오다큐 외국인여행센터 입구](./images/20230405151006_Shinjuku_OdakyuSightseeingServiceCenter.jpg)\n\n![로망스카 승차권과 하코네 교통패스](./images/20230406080643_HakoneFreepassAndRomanscarTicket.jpg)\n\n\n## 🚆 로망스카 타고 가즈아\n\n로망스카는 신주쿠 역에서 하코네유모토 역까지 이동하는 열차입니다. 하코네유모토 역까지 도착하는데 약 1시간 40분이 걸렸습니다.\n\n평소에 아침밥을 먹진 않지만, 왠지 아침 일찍 기차를 타면 뭔가 먹어줘야 할 것 같습니다(?)\n\n![로망스카 외관](./images/20230406080212_Shinjuku_Romancecar.jpg)\n\n![로망스카 내부 좌석](./images/20230406082100_Shinjuku_Romancecar_Boarding.jpg)\n\n![로망스카 내 생수와 주먹밥](./images/20230406080844_Shinjuku_Romancecar_Food.jpg)\n\n가다보니 점점 푸른 하늘이 보이기 시작합니다. 행복회로 돌려도 되는 각...?\n\n![하코네 이동 중 점점 맑아지는 날씨](./images/20230406092840_Romancecar_GoingToHakone.jpg)\n\n\n## 🚉 하코네유모토 역 도착\n\n하코네유모토 역에 도착 후 역무원에게 로망스카 마지막 열차 시간을 물었습니다.\n\n> 新宿行きのロマンスカーの最終時間はいつですか？ (신주쿠이키노 로만스카아노 사이슈우지칸와 이츠데스카)\n>\n> 신주쿠 행 로망스카 마지막 시간이 언제인가요?\n\n그러자 역무원이 말합니다.\n\n> あ... Final time?\n\n... 아무래도 외국인인 게 티가 나는 모양입니다. 처음부터 영어로 물어볼 걸... 아무튼 마지막 로망스카는 오후 7시 30분쯤에 있었습니다. 이 때까지 하코네마치를 한 바퀴 돌고 올 계획입니다.\n\n하코네유모토 역 입구 방향으로 쭉 직진하면 나오는 2번 버스정류장에서 버스를 탑승한 후 모토하코네로 이동했습니다.\n\n![하코네유모토 역 입구](./images/20230406170912_HakoneYumotoStation.jpg)\n\n![하코네유모토 역 근처 2번 버스정류장](./images/20230406101325_HakoneYumoto_Bus.jpg)\n\n![모토하코네 행 버스 안](./images/20230406102237_HakoneYumoto_Bus.jpg)\n\n\n## 🌊 간지폭풍 모토하코네\n\n버스를 타고 모토하코네로 이동하는 도중에 조금씩 비가 내리기 시작했습니다. 아이폰 날씨 앱에 오늘 비는 오지 않고 흐리다고만 되어 있어서 우산도 안 챙기고 하코네에 왔건만... 모토하코네로 가면 갈수록 점점 잣됐음을 느끼기 시작했습니다.\n\n모코하코네에 도착하니 비가 오고 강풍이 불고, 야시노 호수는 범람하려 하고 안개는 엄청 끼어있었습니다. 아... 오늘 여행은 정말 잣됐구나... 하하하... 😂\n\n![야시노 호수](./images/20230406111412_MotoHakoneko_Lake.jpg)\n\n![야시노 호수](./images/20230406110557_MotoHakoneko_Lake.jpg)\n\n![25일 작가 짤: 전생에 꽈배기였나? 왜 하는 일마다 꼬이지?](./images/25jw_TwistedDoughnut.jpg)\n\n\n## ⛩️ 하코네 신사\n\n하코네 신사는 평화의 토리이에 들르기 전에 잠시 들러본 곳입니다. 신사에 들러서 꼭 찾아보는 것이 바로 에마(소원 등을 적는 나무판)인데요. 사람들이 어떤 소원을 비는지 읽어보는 재미가 있습니다. 영어 자격증으로 보이는 시험과 학교 무사 졸업 및 합격 기원이 눈에 띄네요.\n\n![하코네 신사](./images/20230406112322_HakoneShrine.jpg)\n\n![하코네 신사](./images/20230406112342_HakoneShrine.jpg)\n\n![하코네 신사 에마](./images/20230406112440_HakoneShrine_Ema.jpg)\n\n\n## ⛩️ 평화의 토리이\n\n토리이는 신사의 입구에 세우는 기둥문입니다. 토리이는 신의 영역과 일반 세계의 경계를 이루는 관문 역할을 한다고 합니다. 하코네 신사에서 야시노 호수 방향으로 내려가면 특이하게 물 위에 떠있는 듯한 평화의 토리이가 있습니다. 이 평화의 토리이는 하코네 신사 입구의 일종이려나요...? 🤔\n\n궂은 날씨에도 평화의 토리이 앞에서 사진을 찍으려는 행렬이 엄청났습니다. 날씨가 맑을 때 오리배를 타고 평화의 토리이를 금방 지나가지 못하고 근처에 남아있으면 왠지 눈치보일 것 같습니다.\n\n![평화의 토리이](./images/20230406113034_PeaceTorii.jpg)\n\n![평화의 토리이 행렬](./images/20230406113120_PeaceTorii.jpg)\n\n\n## ☠️ 점심 먹고 관광해적선 탑승\n\n하코네로 여행오기 전에 관광해적선을 모토하코네 항에서 타는 줄 알았습니다. 그런데 모토하코네 항에선 일반 크루즈 선을 탈 수 있습니다. 알고보니 관광해적선은 모토하코네 항에서 남쪽으로 1.5km 떨어진 하코네마치 항에서 타야 합니다. 버스를 타고 가자니 버스 대기시간과 이동시간을 합치면 걸어가는 시간과 별 차이가 나지 않을 것 같아서 걸어서 하코네마치 항으로 이동했습니다.\n\n관광해적선은 매 시간 정각에 출발합니다. 하필 5분 늦어서 다음 시간까지 기다려야 했는데, 이렇게 된 이상 근처에서 점심을 먹기로 했습니다. 하코네마치 항 입구 건너편에 음식을 파는 곳이 있었지만 대부분 문을 닫아서 이곳저곳 돌아보다가 [히레카츠를 파는 음식점](https://goo.gl/maps/TTF3Gr8JbNvrPXwY6)에 갔습니다.\n\n고기와 튀김옷이 잘 분리되는 게 흠이었지만, 튀김옷이 마치 닭껍질튀김처럼 느껴져서 신박했습니다. \n\n![음식점 입구](./images/20230406124018_Hakonemachiko_Asuka_Entry.jpg)\n\n![음식점 메뉴](./images/20230406124004_Hakonemachiko_Asuka_Menu.jpg)\n\n![음식점 히레카츠 정식](./images/20230406122400_Hakonemachiko_Asuka_Food.jpg)\n\n아무튼 맛있게 먹은 다음\n\n![음식점 히레카츠 정식](./images/20230406123738_Hakonemachiko_Asuka_EatEverything.jpg)\n\n해적선을 타고 도겐다이 항으로 갑니다. 안개가 잔뜩 껴서 그런지 해적선 위에서 바라본 야시노 호수 풍경은 운치가 있는 듯하면서 별로였습니다... 🙄\n\n![하코네마치 항 입구](./images/20230406124314_Hakonemachiko.jpg)\n\n![하코네마치 항 내부](./images/20230406124452_Hakonemachiko.jpg)\n\n![하코네 관광해적선](./images/20230406120416_Hakonemachiko_Pirateship.jpg)\n\n![하코네 관광해적선 내부](./images/20230406130818_Pirateship_GoingToDogendaiko.jpg)\n\n![하코네 관광해적선 전망](./images/20230406130449_Pirateship_GoingToDogendaiko.jpg)\n\n\n## 🚡 도겐다이 항에서 로프웨이는 달리고 싶다...\n\n로프웨이 탈 생각에 싱글벙글할 예정(?) 이었지만...\n\n![도겐다이 항](./images/20230406132742_Togendaiko.jpg)\n\n강풍 때문에 로프웨이 운행이 중단됐습니다. 애초에 기대를 하니까 실망을 하는 것인지... 😭\n\n![하코네 로프웨이 중단 안내](./images/20230406132947_Togendaiko_CanceledRopeway.jpg)\n\n아니 오와쿠다니에 가서 유황이 분출하는 것도 봐야 하고 하코네마치를 한바퀴 돌려면 로프웨이를 타야 하는데 이를 어찌하나... 이미 하코네 여행은 날씨 때문에 망했으니 해적선을 타고 다시 하코네유모토로 돌아가야 하나 걸어서 오와쿠다니를 가야 하나 만감이 교차했습니다. (만약 이 때 정말 걸어서 오와쿠다니에 갔다면 무사하지 못했을 겁니다. 😨)\n\n근처 안내원에게 오와쿠다니에 갈 수 있는 방법이 있는지 물어보니, 도겐다이 항 밖으로 조금만 나가면 있는 코지리 터미널에서 버스를 타면 된다고 합니다. 버스를 탈 때 하코네 교통패스를 사용할 수 있냐고 물어보니 안 된다고 합니다. 일단 스이카(선불 교통카드)로 버스에 탑승한 후 오와쿠다니로 이동했습니다.\n\n![하코네 코지리 터미널](./images/20230406134018_HakoneKojiriTerminal.jpg)\n\n그런데 오와쿠다니로 갈수록 안개가 심해집니다... 아 설마...? 😱\n\n![오와쿠다니 행 버스 탑승](./images/20230406140208_Bus_GoingToOwakudani.jpg)\n\n\n## 🥚 오와쿠다니\n\n설마가 그 설마였습니다. 이렇게 가시거리가 짧은 경우는 처음이었고, 유황이 분출하는 모습은 전혀 볼 수 없었으며 유황 냄새가 좀 나긴 했지만 별로 나지 않는 수준이었습니다.\n\n날씨가 좋으면 후지산을 보고, 날씨가 흐리면 유황이 분출하는 장면을 보며 쿠로타마고를 까먹으려 했었습니다. 아무리 날씨가 흐려도 유황은 볼 수 있겠지라고 생각했었지만 안개가 이렇게 심해서 아예 보이지 않을 줄은 몰랐습니다. 일단 쿠로타마고를 사긴 했지만 강풍이 너무 심해서 도저히 까먹을 수 없었습니다.\n\n뭐 긍정적으로 생각하자면 근처 관광객들이 강풍에 반응하는 모습이 너무 재밌긴 했습니다. 🤣 하지만 이미 날씨 때문에 망해버린 기분을 어찌 하오리까... 😭\n\n![오와쿠다니](./images/20230406140608_Owakudani.jpg)\n\n![오와쿠다니 경치](./images/20230406140512_Owakudani.jpg)\n\n![오와쿠다니 경치](./images/20230406140520_Owakudani.jpg)\n\n![쿠로타마고](./images/20230406142516_Owakudani_KuroTamago.jpg)\n\n![25일 작가 짤: 왜 나한테만 인생이 혹독한 건데!!](./images/25jw_HardLife.jpg)\n\n아쉬움을 뒤로 하고 다시 버스에 탄 후 소운잔으로 이동합니다.\n\n## ⛰️ 소운잔\n\n원래 소운잔엔 로프웨이를 타고 와야 했으나 어쩔 수 없이 버스를 타고 왔습니다. 이곳에선 족욕을 하며 주변 경치를 볼 수 있는데요. 하필 오른발 사마귀 치료를 받아 물집이 생기는 바람에 발을 담그고 오지는 못했습니다. ☹️\n\n바람이 잠잠해진 틈을 타서 후딱 사이다를 사온 후 쿠로타마고를 까먹었습니다. 맛은... 그냥 삶은 계란 맛입니다. 하지만 이런 특이한 걸 먹어줘야 여행온 기분이 나는 것 같습니다.\n\n![소운잔의 하코네 로프웨이](./images/20230406144342_Sounzan_Ropeway.jpg)\n\n![소운잔](./images/20230406144510_Sounzan.jpg)\n\n![소운잔 경치](./images/20230406145015_Sounzan.jpg)\n\n![소운잔 족욕장](./images/20230406144921_Sounzan.jpg)\n\n![소운잔 족욕장](./images/20230406144944_Sounzan_FootSoakingHotSpring.jpg)\n\n![소운잔 쿠로타마고와 사이다](./images/20230406145722_Sounzan_KuroTamagoAndSaida.jpg)\n\n\n## 🚡 다행이 케이블카는 운행 중...\n\n소운잔 역부터는 로프웨이가 아닌 케이블카를 타고 이동합니다. 설마 케이블카도 강풍 때문에 운행이 중단됐나 싶었지만 다행이 운행중이었습니다. 하코네 교통패스를 제시하고 무료로 탑승한 후 고라 역까지 이동했습니다.\n\n![마운틴 레일 외부](./images/20230406150637_CableCar_Outside.jpg)\n\n![마운틴 레일 내부](./images/20230406151009_CableCar_GoingToGora.jpg)\n\n\n## 🏞️ 고라 공원... 고라 파덕...\n\n원래 하코네 여행 중에 온천에 가볼 계획을 세웠었습니다. 그런데 오른발에 난 사마귀 치료를 받느라 온천에 가볼 수 없게 됐습니다. 그래서 대신 가본 곳이 바로 고라 공원입니다.\n\n고라 공원도 하코네 교통패스를 제시하면 무료로 입장할 수 있습니다. 잘 꾸며진 공원처럼 보였지만 역시나 그놈의 날씨 때문에... 고라 공원의 영문명(Gora Park)이 고라파덕(Gora Paduck)으로 읽히질 않나... 게다가 하코네(Hakone)가 학원(HakOne)으로 읽히질 않나... 점점 맛이 가기 시작했습니다. 🤪\n\n![고라파덕](./images/Gorapaduck.jpeg)\n\n![스누피 - 너 미쳤구나](./images/Snoopy_YouAreCrazy.JPG)\n\n![고라 역 입구](./images/20230406155119_GoraStation_Entry.jpg)\n\n![고라 공원 입구](./images/20230406154733_GoraPark_Entry.jpg)\n\n![고라 공원](./images/20230406153550_GoraPark.jpg)\n\n![고라 공원](./images/20230406153833_GoraPark.jpg)\n\n![고라 공원](./images/20230406153936_GoraPark.jpg)\n\n\n## 🚞 등산철도 탑승\n\n혹시 등산철도도...? 다행이 등산철도도 운행 중이었습니다. 사실 등산철도마저 운행이 중단될 정도로 강풍이 불었다면 거의 재난급이 아닐까 싶습니다.\n\n등산철도를 타고 하코네유모토를 향해 돌아갔습니다.\n\n![하코네 등산철도 외부](./images/20230406155222_GoraStation_BoardingMountailRail.jpg)\n\n![하코네 등산철도 내부](./images/20230406155740_Railway.jpg)\n\n\n## ☕ 나라야 카페\n\n하코네유모토로 돌아가기 전에 잠깐 미야노시타 역에서 내린 후 나라야 카페를 들렀습니다. 고독한 미식가에서 고로 상이 눈사람 모양의 모나카를 만들어 먹는 장면이 나오는데, 저도 한번 해보고 싶어서 가봤습니다.\n\n![나라야 카페 입구](./images/20230406160428_NarayaCafe_Entry.jpg)\n\n![나라야 카페 메뉴](./images/20230406160710_NarayaCafe_Menu.jpg)\n\n주문한 커피(아메리카노)와 팥 앙금 모나카입니다. 직접 팥을 채워서 모양을 만든 후 먹으면 됩니다. 별 것 아닌 것처럼 보이는 화과자를 만들어 먹는데 궂은 날씨 때문에 받은 상처(?)가 치유되는 느낌이 듭니다. 🥲\n\n![나라야 카페 모나카 1](./images/20230406161748_NarayaCafe_Monaka.jpg)\n\n![나라야 카페 모나카 2](./images/20230406161956_NarayaCafe_Monaka.jpg)\n\n![나라야 카페 모나카 3](./images/20230406161957_NarayaCafe_Monaka.jpg)\n\n카페인데 특이하게 족욕탕이 있습니다. 맛있게 냠냠 먹은 후 소운잔에서 담그지 않았던 발을 결국 족욕탕에 담가봤습니다. 물론 아쉽게도 왼발만...\n\n![나라야 카페 모나카 4](./images/20230406162538_NarayaCafe_Monaka.jpg)\n\n![나라야 카페 족욕탕](./images/20230406163641_NarayaCafe_FootSoakingHotSpring.jpg)\n\n\n## 🍜 하츠하나소바\n\n하코네유모토역에 도착해보니 로망스카 마지막 탑승시간까지 여유가 있어서 하츠하나소바 라는 가게에서 소바를 먹었습니다.\n\n![하츠하나소바 입구](./images/20230406171652_Hatsuhanasoba_Entry.jpg)\n\n![하츠하나소바 내부](./images/20230406172140_Hatsuhanasoba_Inside.jpg)\n\n주문한 메뉴는 텐자루입니다. 맛있게 먹고나니, 일본에서 먹었던 면 요리 중에 사누키 우동이 생각납니다. 예전에 다카마쓰를 짤막하게 여행했을 때 아무 우동집이나 가도 너무 맛있었던 기억이 생생한데, 나중에 돈 많이 벌어서(?) 다카마쓰로 우동 투어를 가보고 싶습니다. 😎\n\n![하츠하나소바 텐자루 1](./images/20230406173138_Hatsuhanasoba_Tenjaru.jpg)\n\n맛있게 먹고 하코네유모토 역으로 향하니...\n\n![하츠하나소바 텐자루 2](./images/20230406174336_Hatsuhanasoba_Tenjaru_EatEverything.jpg)\n\n날씨가 개기 시작합니다. 참 야속하기만 합니다. 킹받았던 날씨 함께헤서 더러웠고 제발 다시는 만나지 말자... \n\n(고 다짐했건만 다음날 요코하마에서 또 만날 예정(?)입니다. 😱)\n\n![하코네유모토 날씨 개는 중](./images/20230406174626_HakoneYumotoStreet.jpg)\n\n![신주쿠 행 로망스카 탑승 시간](./images/20230406181122_HakoneYumotoStation.jpg)\n\n\n다음 번엔 요코하마 여행기를...\n\n※ 이 글에서 사용한 짤의 출처는 [25일 작가님의 인스타그램](https://www.instagram.com/25_jw)입니다."},{"excerpt":"하던 일을 잠시 보류할 기회가 생겨 도쿄 주변 소도시(하코네, 요코하마, 가마쿠라)로 4박 5일 간 여행을 다녀왔습니다. 관광지를 잔뜩 조지러(?) 갈 생각에 벅찼으나, 조져지는건 나였습니다. 벚꽃이 만개할 것으로 예상한 4월 초로 일정을 잡고 갔으나 예년에 비해 벚꽃이 빨리 피는 바람에 벚꽃구경은 하지도 못했고, 무엇보다 날씨가 너무 안 좋아서 제대로된…","fields":{"slug":"/travel/2023-04-tokyo/tokyo-travel-1/"},"frontmatter":{"date":"April 20, 2023","title":"2023년 4월 도쿄 주변 소도시 병맛 여행기","description":"2023년 4월 도쿄 주변 소도시 병맛 여행기","tags":["travel"],"series":"병맛 여행기","previewImage":"travel.jpeg","isPrivate":null},"rawMarkdownBody":"\n![하지만 조져지는 건 나](./images/ImTheOneWhoIsGettingWorse.jpg)\n\n하던 일을 잠시 보류할 기회가 생겨 도쿄 주변 소도시(하코네, 요코하마, 가마쿠라)로 4박 5일 간 여행을 다녀왔습니다. 관광지를 잔뜩 조지러(?) 갈 생각에 벅찼으나, 조져지는건 나였습니다.\n\n벚꽃이 만개할 것으로 예상한 4월 초로 일정을 잡고 갔으나 예년에 비해 벚꽃이 빨리 피는 바람에 벚꽃구경은 하지도 못했고, 무엇보다 날씨가 너무 안 좋아서 제대로된 관광을 하기 힘들었습니다. 그나마 가마쿠라에 갔을 때 날씨가 좋아서 하드캐리(?) 한 게 아니었다면 제대로 망한 여행이 될 뻔했습니다. 😭\n\n날씨에 호되게 당해서 그런지 다음부터는 여행 1주일 전쯤, 여행 당일에 날씨가 좋을 것으로 예상될 때 비행기랑 호텔을 예약하고 여행을 떠나는게 어떨까 싶기도 합니다. 날씨가 안 좋을 것 같으면 1주일 미루고, 업무 때문에 미룰 수 없거나 여행경비가 더 늘어난다고 해도 날씨가 좋지 않으면 절대 여행을 안 가겠다는 식으로...\n\n이 글에서는 이번 여행을 통해 얻게 된 팁을 정리하고 추후 하코네, 요코하마 그리고 가마쿠라 관련 여행기를 적어보려고 합니다.\n\n\n## 😎 여행 팁\n\n### 캡슐호텔 예약시 유의사항\n\n일본 캡슐호텔은 가격이 저렴하지만 그만큼 감수해야할 사항이 있습니다. 소음에 민감하고 짐을 많이 챙겨야 하는 경우엔 캡슐호텔에 묵지 않는게 좋습니다. 그럼에도 캡슐호텔에 묵길 정했다면 아래 사항을 고려하는 게 좋습니다.\n\n1. **연박 시 매일 체크아웃을 해야 하는가?** 대부분의 일본 캡슐호텔은 연박 시 매일 오전에 체크아웃을 해야 합니다. 그렇지 않은 캡슐호텔도 있으나 대부분 해야 한다고 보면 될 것 같습니다. 매일 체크아웃을 해야 하는 경우 짐을 원래 보관하던 장소에 계속 둬도 되는지 알아봐야 합니다.\n2. **짐을 보관할 장소가 충분한가?** 캐리어가 충분히 들어가는 보관함이 있는 곳도 있고, 보관함이 있지만 기내용 캐리어도 안 들어가는 곳도 있고, 보관함이 없어 카운터에 캐리어를 맡겨야 하는 곳도 있으니 꼭 알아보는 게 좋습니다.\n3. **가능하면 2층보다는 1층 캡슐로** 일본 대부분의 캡슐호텔은 커튼과 비슷한 것으로 입구를 가리므로 입구를 완벽하게 막을 수 없습니다. 그리고 간혹 천장에 달린 형광등 근처에 2층 캡슐 입구가 있는 경우가 있습니다. 이 때 입구 틈새로 들어오는 형광등 불빛이 굉장히 거슬립니다. 그래서 가능하다면 2층보다는 1층 캡슐에 묵는 게 좋습니다.\n\n지금까지 가본 일본 캡슐호텔 중에서 가장 괜찮았던 곳은 [마이큐브 바이 마이스테이 아사쿠사 쿠라마에](https://goo.gl/maps/JnVFp1NrsfTiwrVx7)입니다. 2층식이 아닌 1층식이라 아주 넓고, 연박 시 매일 체크아웃을 하지 않아도 되고, 자는 곳 아래쪽에 엄청나게 넓은 짐 보관공간이 있을뿐 아니라 어메니티도 부족한 부분이 전혀 없었기 때문입니다. 5년 전에 묵었을때 정말 만족했던 캡슐호텔인데 이번 여행 때 묵지 못해 너무 아쉽습니다...\n\n\n### 도쿄 메트로 패스 사용법\n\n도쿄 메트로 패스는 도쿄 메트로 또는 도에이 지하철을 특정 기간 동안 무제한으로 탑승할 수 있는 승차권입니다. 난 무조건 선불 교통카드(스이카나 파스모)만 사용하겠다는 신념(?)이 있지 않는 한 도쿄 메트로 패스는 여행경비를 절약하기 위한 필수 아이템입니다. \n\n도쿄 메트로 패스는 나리타 공항 1층 LCB에서 구입할 수 있습니다. 저는 대부분 도쿄 주변 소도시를 여행할 계획이지만, 도쿄 도심도 군데군데 돌아다닐 일정이 있어 패스를 구입했습니다.\n\n도쿄 메트로 패스를 모든 지하철 노선에서 사용할 수 있는 게 아니므로 어느 노선에서 사용할 수 있는지 파악하는 게 중요한데요. 구글 지도 앱으로 지하철 경로를 검색하면 나타나는 단색 동그라미 안에 알파벳이 하나 들어가 있는 노선에서 도쿄 메트로 패스를 사용할 수 있습니다.\n\n아래 예를 들어 설명해보면, 긴자선과 히비야선 그리고 지요다선은 알파벳 한 자리에 단색 동그라미로 되어 있습니다. 이 노선에서 도쿄 메트로 패스를 사용할 수 있습니다. 게이힌토호쿠선은 알파벳 한 자리에 단색 동그라미가 아니므로 도쿄 메트로 패스를 사용할 수 없고, 대신 스이카나 파스모를 사용해야 합니다.\n\n![구글 맵 도쿄 지하철 경로 검색](./images/GoogleMap_Subway_Search.JPG)\n\n즉 탑승한 지하철 역이 도쿄 메트로 또는 도에이 지하철이지만 내릴 땐 아닌 경우, 일단 도쿄 메트로 패스로 지하철에 탑승한 후 환승할 때 스이카나 파스모를 사용하면 됩니다. 그 반대인 경우, 일단 스이카나 파스모로 지하철에 탑승한 후 환승할 때 도쿄 메트로 패스를 사용하면 됩니다.\n\n### 선불 교통카드(스이카 또는 파스모) 사용 팁\n\n스이카나 파스모는 일본 지하철이나 버스를 탑승할 때 사용하는 선불 교통카드입니다. 스이카나 파스모는 사실상 일본 내 모든 대중교통에서 사용할 수 있다고 보면 됩니다.\n\n스이카는 6개월 이상 사용하지 않으면 잠기는 경우가 있는데, 이 때 JR 지하철 역무원에게 가서 락을 해제해달라고 하면 됩니다. (대충 줄여서 말하자면... 스이카 롯쿠 카이조시테쿠다사이?)\n\n> Suicaを長い間使っていないのでロックがかかっています。 ロックを解除してください。<br>\n> 스이카오 나가이 아이다 츠캇테이나이노데 롯쿠가 카캇테이마스。 롯쿠오 카이조시테쿠다사이。\n> \n> 스이카를 오랫동안 사용하지 않아 잠겨있습니다. 잠금을 해제해주세요.\n\n그리고 선불 교통카드를 사용할 일이 없더라도 1~2천엔 정도는 예비용으로 충전해두는 게 좋습니다. 하코네로 여행을 갔다가 강풍 때문에 케이블 카를 못 타게 되어 강제로 버스를 타야했었는데, 주변에 스이카를 충전할 곳이 없어서 이 때 스이카에 남은 잔액이 없었으면 큰일 날 뻔했습니다. 물론 현금을 내고 버스를 타고 되긴 하지만 버스요금을 내거나 거스름돈 받을 때 시간을 꽤나 잡아먹을 수 있습니다.\n\n### 에어태그는 있으면 굳굳\n\n집에 하나 쯤 굴러 다니는(?) 국내한정 애물단지인 에어태그를 캐리어에 넣고 비행기 위탁 수하물로 맡기면 해외 공항 도착 후 캐리어 위치를 확인할 수 있습니다. 캐리어가 가만히 있다가 어느 순간 움직이기 시작하면 짐 찾는 곳에서 곧 캐리어를 찾을 수 있음을 직감할 수 있습니다.\n\n중요한 짐에 에어태그를 숨겨 놓았다면 분실 시 유용할 것 같습니다.\n\n![에어태그로 캐리어 위치 찾기](./images/Airtag_Location.jpg)\n\n\n## 🛌 다락휴 인천국제공항 제2터미널 지점 숙박\n\n다락휴는 인천국제공항 제1, 2터미널에 있는 캡슐호텔입니다. 새벽에 일찍 일어나 공항버스를 타기 싫어서 다락휴에 묵어봤습니다. 탑승하려는 비행기가 인천공항 제1터미널에 있었지만 다락휴 제1터미널점이 만석이었기 때문에 어쩔 수 없이 제2터미널점에서 숙박 후 공항철도를 타고 제1터미널로 이동했습니다. 😭\n\n캡슐호텔이라고 소개되어 있지만 그냥 조그마한 호텔입니다. 로비에 노트북이 비치되어 있고, 샤워실이 없는 객실 사용자를 위한 샤워부스가 있습니다.\n\n![다락휴 인천국제공항 제2터미널 샤워 부스](./images/20230405062055_Darakhyu_ShowerBooth.jpg)\n\n![다락휴 인천국제공항 제2터미널 홀](./images/20230404222227_Darakhyu_Hall.jpg)\n\n2인실 객실 내부엔 침대, 테이블, 세면대와 샤워실이 있습니다. 다만 변기가 없어서 객실 밖으로 나가서 공용화장실을 사용해야 합니다.\n\n![다락휴 인천국제공항 제2터미널 2인실 객실](./images/20230404235230_Darakhyu_Room.jpg)\n\n![다락휴 인천국제공항 제2터미널 2인실 샤워실](./images/20230404235046_Darakhyu_ShowerRoom.jpg)\n\n\n## 🛫 에어프레미아 비행기 탑승\n\n다락휴 인천공항 제2터미널점에서 하룻밤을 묵고 공항철도를 타고 제1터미널로 간 다음 탑승 수속을 밟았습니다. 해외여행자 코로나 19 격리 의무가 해제되어 해외여행 수요가 늘어서 수하물 위탁, 보안검색과 출국심사가 오래 걸릴 줄 알았으나 총 30분밖에 걸리지 않았습니다. 이럴 줄 알았으면 한 시간 더 자고 올걸. 껄껄껄...\n\n이번 여행에 탑승한 비행기는 에어프레미아 이코노미 35 좌석입니다. 좌석이 타 저비용 항공사보다 넓은 것 같았습니다. 모든 탑승객에게 이어폰을 나눠주는데, 이 이어폰으로 좌석 앞 스크린에 있는 영화나 드라마를 볼 수 있습니다.\n\n![에어 프레미아 스크린](./images/20230405084846_AirPremia.jpg)\n\n![에어 프레미아 좌석에 앚아서 다리 펼쳤을 때](./images/20230405104914_AirPremia.jpg)\n\n![에어 프레미아 간식(초코파이와 아메리카노)](./images/20230405095958_AirPremia.jpg)\n\n이 땐 몰랐습니다. 4박 5일 여행 중에 날씨가 대부분 이럴 줄은...\n\n![에어 프레미아 풍경](./images/20230405093058_AirPremia.jpg)\n\n\n## 🛬 나리타 공항 도착\n\n마참내(?) 나리타 공항에 도착했습니다. 입국수속을 밟으려 대기하는데 오우야... 도시락 신호가 엄청나게 터집니다.\n\n![Alt text](images/20230405113538_NaritaAirport_Dosirak.jpg)\n\n수하물로 맡긴 캐리어를 찾고, 나리타 공항 1층에 있는 LCB에 가서 도쿄 매트로 패스권을 구입합니다.\n\n![나리타 공항 LCB](./images/20230405122152_NaritaAirport_LCB.jpg)\n\n그리고 지하 1층에 있는 스카이라이너 & 케이세이 안내소에서 스카이라이너 탑승권을 구입합니다. 사실 다음번에 도쿄에 오면 스카이라이너가 아닌 다른 방식(나리타 익스프레스나 케이세이 전철 등)으로 도쿄에 가보려 했었지만 역시 스카이라이너가 가장 빠르게 갈 수 있는 방법이라 자꾸 스카이라이너를 선택하게 됩니다...\n\n![나리타 공항 스카이라이너 & 케이세이 안내소](./images/20230405121518_NaritaAirport_SkylinerInformationCenter.jpg)\n\n![도쿄 메트로 패스권과 스카이라이너 탑승권](images/20230405122322_TokyoSubwayFreepassTicketAndSkylinerTicker.jpg)\n\n케이세이우에노 역에 도착했습니다. 나중에 나리타 공항으로 돌아갈 때 케이세이우에노 역 스카이라이너 매표 카운터나 무인발급기로 스카이라이너 탑승권을 구입하면 됩니다.\n\n![케이세이우에노 역 스카이라이너 매표 카운터](images/20230405133132_KeiseiUenoStation_TicketOffice.jpg)\n\n\n## 💊 캡슐호텔(나인 아워스 아카사카 슬립 랩) 숙박\n\n도쿄 호텔 숙박료가 전체적으로 비쌌습니다. 5년 전에 비해 2배 가량 오른 것 같았습니다. 일반 호텔 숙박료는 1박당 최소 1만 엔 이상이 필요했고, 그나마 괜찮은 조건과 적절한 가격에 구한 숙소가 바로 [나인 아워스 아카사카 슬립 랩](https://goo.gl/maps/JZWmWHwP8StaQuHf6)이라는 캡슐호텔입니다. 4박 5일에 22,000엔 가량 들었는데 사실 이것도 좀 비싼 감이 있지 않나 싶습니다.\n\n이 캡슐호텔의 특징은 잠을 자고 있을 때 수면 패턴을 분석한 보고서를 이메일로 보내준다는 점입니다. 체크인 할 때 수면 분석을 해줄지 물어보는데 이 때 해달라고 하면 됩니다. 딱 한 가지 아쉬운 점은 공용공간이 너무 좁아서 밖에서 뭘 사가지고 와서 먹거나 노트북을 사용하기가 힘듭니다.\n\n다음에도 묵을 의향이 있냐고 묻는다면, 더 저렴한 가격에 묵는다면 OK...\n\n![나인 아워스 아카사카](images/20230405141502_NineHoursAkasaka.jpg)\n\n![나인 아워스 아카사카 이용규칙](images/20230405214120_NineHoursAkasaka_Rule.jpg)\n\n체크인 시 수건, 타올, 잠옷, 슬리퍼, 치약, 칫솔을 받습니다. 체크아웃 시 슬리퍼는 전용반납함에 넣어주고 나머지는 카운터에 반납하면 됩니다.\n\n![나인 아워스 아카사카 제공 물품(수건, 타올, 잠옷, 슬리퍼, 치약, 칫솔](images/20230405204354_NineHoursAkasaka_Amenity.jpg)\n\n락커룸엔 기내용 캐리어가 딱 알맞게 들어갑니다. 대형 캐리어는 카운터에 맡겨야 합니다.\n\n![나인 아워스 아카사카 락커룸](images/20230405203302_NineHoursAkasaka_Locker.jpg)\n\n![나인 아워스 아카사카 락커룸 내부](images/20230408072940_NineHoursAkasaka_LockerAndCarrier.jpg)\n\n![나인 아워스 아카사카 ](images/20230405203736_NineHoursAkasaka_WashRoom.jpg)\n\n잠을 자는 캡슐 외관은 1층과 2층 입구 방향이 달라서 2층 투숙객이 캡슐 내부로 이동할 때 1층 투숙객 신경을 쓰지 않아도 돼서 좋을 것 같습니다.\n\n검은색 U자로 보이는 건 손잡이처럼 보이지만 착시입니다. 내부는 생각보다 넓습니다. 캡슐 내부엔 수면 분석하는 카메라(?), 110v 콘센트, 램프, USB-A 포트가 있습니다.\n\n![나인 아워스 아카사카 캡슐 1](images/20230405212704_NineHoursAkasaka_Capsule.jpg) \n\n![나인 아워스 아카사카 캡슐 2](images/20230405212728_NineHoursAkasaka_Capsule.jpg) \n\n![나인 아워스 아카사카 캡슐 3](images/20230405213502_NineHoursAkasaka_Capsule.jpg) \n\n\n## 🍺 오모이데요코초\n\n오모이데요코초는 신주쿠 역 근처에 있는 술집거리입니다. 번역하면 추억의 거리인데 앞으로 있을 여행의 추억이 영... 🤐\n\n![오모이데요코초 입구](./images/20230405184358_Omoideyokocho_Entry.jpg)\n\n![오모이데요코초 거리](./images/20230405185130_Omoideyokocho_Street.jpg)\n\n![오모이데요코초 거리](./images/20230405185302_Omoideyokocho_Street.jpg)\n\n아무 가게나 들어가서 꼬치랑 술 한잔하려 했지만 빈 자리가 있는 가게가 거의 없었습니다. 꼬치구이를 먹고 싶었지만 꼬치구이를 파는 가게는 빈 자리가 하나도 없었습니다. 골목을 세 바퀴 정도 돌고 돌아 결국 [야스베](https://goo.gl/maps/yPvh3Ni8B1CxwdDg8)라는 가게에 갔습니다.\n\n![오모이데요코초 야스베](./images/20230405200116_Omoideyokocho_Yasubee_Entry.jpg)\n\n![오모이데요코초 야스베 세트 메뉴](./images/20230405190112_Omoideyokocho_Yasubee_Menu.jpg)\n\n맥주로 갈증을 해소할 수 있다는 걸 이 때 처음 알았습니다. 맥주가 떨어져서 하이볼도 주문하고, 호피(Hoppy)라는 맥주도 처음 마셔봤는데 저렴하니 가성비가 좋습니다!\n\n![오모이데요코초 야스베 맥주](./images/20230405190148_Omoideyokocho_Yasubee_Beer.jpg)\n\n![오모이데요코초 야스베 하이볼](./images/20230405192056_Omoideyokocho_Yasubee_Highball.jpg)\n\n![오모이데요코초 야스베 호피](./images/20230405194700_Omoideyokocho_Yasubee_Hoppy.jpg)\n\n꼬치구이를 먹고 오지 못해서 아쉽긴 하지만, 대충 오뎅 세트랑 단품 메뉴 몇 가지 추가해서 맛있게 먹고 나왔습니다.\n\n![오모이데요코초 야스베 5세트 메뉴](./images/20230405192454_Omoideyokocho_Yasubee_5Set.jpg)\n\n![오모이데요코초 야스베 오뎅과 꼬치](./images/20230405194810_Omoideyokocho_Yasubee_Odeng.jpg)\n\n![오모이데요코초 야스베 5세트 메뉴](./images/20230405195710_Omoideyokocho_Yasubee_EatEverything.jpg)\n\n이제 다음날부터 본격적인 여행을 시작합니다!"},{"excerpt":"커스텀 도메인을 Github Pages 블로그에 연결하는 방법입니다. 🔧 DNS 설정 먼저 도메인을 구입한 곳에서 DNS 설정을 해야 합니다. 구글 도메인을 구입한 경우 Google Domains에 접속한 후 DNS 메뉴에서 아래와 같이 DNS 설정을 등록해줍니다. 호스트 이름 유형 TTL 데이터 DOMAIN_NAME A 1시간 185.199.108.15…","fields":{"slug":"/blogging/githubpages-custom-domain-setting/"},"frontmatter":{"date":"April 16, 2023","title":"Github Pages 블로그 커스텀 도메인 설정","description":"Github Pages 블로그 커스텀 도메인 설정","tags":["blogging"],"series":"블로그 운영","previewImage":"setting.png","isPrivate":null},"rawMarkdownBody":"\n커스텀 도메인을 Github Pages 블로그에 연결하는 방법입니다.\n\n## 🔧 DNS 설정\n\n먼저 도메인을 구입한 곳에서 DNS 설정을 해야 합니다.\n\n구글 도메인을 구입한 경우 [Google Domains](https://domains.google.com)에 접속한 후 DNS 메뉴에서 아래와 같이 DNS 설정을 등록해줍니다.\n\n| 호스트 이름        |  유형  |  TTL  | 데이터          |\n| --------------- | :---: | :---: | --------------- |\n| DOMAIN_NAME     |   A   | 1시간 | 185.199.108.153 |\n| DOMAIN_NAME     |   A   | 1시간 | 185.199.109.153 |\n| DOMAIN_NAME     |   A   | 1시간 | 185.199.110.153 |\n| DOMAIN_NAME     |   A   | 1시간 | 185.199.111.153 |\n| www.DOMAIN_NAME | CNAME | 1시간 | DOMAIN_NAME     |\n\n\n## ⚙️ Github Pages 설정\n\nGithub Pages 리포지토리의 Settings 메뉴 → Pages 메뉴 → Custom domain 항목에 커스텀 도메인을 입력한 후 Save 버튼을 클릭합니다.\n\n정상적으로 저장됐다면 `DNS Check in Progress` 메시지가 나타나고, Enforce HTTPS 설정을 할 수 있게 됩니다.\n\nEnforce HTTPS 설정을 활성화하면 `https://<DOMAIN_NAME>` 주소로 Github Pages 블로그에 접속할 수 있습니다.\n\n\n## 🧐 참고\n\n* [How to setup google domain for github pages](https://dev.to/trentyang/how-to-setup-google-domain-for-github-pages-1p58)"},{"excerpt":"😃 Hello GitHub Pages! GitHub Pages와 정적 사이트 생성기인 Gatsby를 사용하여 만든 블로그입니다. Gatsby 테마 여러 종류로 블로그를 만들며 지지고 볶다가, 마음에 드는 것이 zoomkoding-gatsby-blog와 gatsby-starter-bee 두 가지 뿐이었습니다. 둘 중에 고민하다가 결국 후자를 택했었다가...…","fields":{"slug":"/blogging/hello-github-pages/"},"frontmatter":{"date":"April 16, 2023","title":"Hello GitHub Pages! (Gatsby + gatsby-starter-bee)","description":"Hello GitHub Pages! (Gatsby + gatsby-starter-bee)","tags":["blogging"],"series":"블로그 운영","previewImage":"setting.png","isPrivate":null},"rawMarkdownBody":"\n![Github Pages](./images/github_pages.jpg)\n\n## 😃 Hello GitHub Pages!\n\nGitHub Pages와 정적 사이트 생성기인 [Gatsby](https://www.gatsbyjs.com)를 사용하여 만든 블로그입니다.\n\nGatsby 테마 여러 종류로 블로그를 만들며 지지고 볶다가, 마음에 드는 것이 [zoomkoding-gatsby-blog](https://github.com/zoomKoding/zoomkoding-gatsby-blog)와 [gatsby-starter-bee](https://github.com/JaeYeopHan/gatsby-starter-bee) 두 가지 뿐이었습니다. 둘 중에 고민하다가 결국 후자를 택했었다가... **지금은 Gatsby-Starter-Haon 테마로 이전했습니다.**\n\n\n## 🤔 구축과정\n\n먼저 로컬에 git과 nvm이 설치되어 있어야 합니다. nvm이 필요한 이유는 Gatsby를 실행하기 위한 Node 버전과 gatsby-starter-bee 테마 관련 패키지와 호환되는 Node 버전이 서로 다르기 때문입니다. 여기서는 gatsby-starter-bee 테마를 설치할 때만 Node 18.14.0 버전을 사용하고, 이 외엔 모두 Node 14.15.0 버전을 사용합니다.\n\n1. GitHub에 `<GITHUB_ID>.github.io` 라는 이름의 리포지토리를 만듭니다.\n2. `git clone <GITHUB_REPOSITORY_LINK>` 명령어로 위에서 만든 리포지토리를 로컬로 복제해옵니다.\n3. `npx gatsby new my-blog-starter https://github.com/JaeYeopHan/gatsby-starter-bee` 명령어로 gatsby-starter-bee 테마를 로컬에 설치합니다. 이 때 사용하는 Node 버전은 18 이상이어야 하며, 저는 18.14.0 버전을 사용했습니다.\n4. 생성된 gatsby-starter-bee 테마 파일을 리포지토리 경로로 복사합니다.\n5. `package-lock.json` 파일을 삭제합니다. 이 파일을 삭제하지 않으면 npm으로 패키지 설치 시 에러가 발생합니다.\n6. `nvm install 14.15.0` 명령어로 Node 14.15.0 버전을 설치한 후, `nvm use 14.15.0` 명령어를 실행하여 Node 14.15.0 버전을 사용하도록 설정합니다.\n7. 리포지토리 경로로 이동한 후 `npm i` 명령어를 실행하여 gatsby-starter-bee 테마에 필요한 패키지를 설치합니다. 추후 GitHub Pages로 배포할 것을 고려하여 `npm i gh-pages` 명령어로 gh-pages 패키지를 설치합니다.\n8. `npm audit fix` 명령어를 실행하여 패키지 취약점을 개선합니다. 사실 아래 10번 과정이 잘 실행된다면 하지 않아도 됩니다.\n9. 보유한 도메인이 있다면 리포지토리 최상위 경로에 `CNAME` 파일을 만든 후 파일 내용에 도메인 명을 넣어 저장합니다.\n10. `npm start` 명령어를 실행한 후 http://localhost:8000 주소로 접속이 잘 되는지 확인합니다.\n\n\n## ⚙️ 설정\n\n### 블로그 정보 설정\n\n`gatsby-meta-config.js` 파일 내용을 수정합니다. 주석 설명대로 수정하면 됩니다.\n\nrobots.txt 파일과 사이트맵 경로 설정을 위해 `gatsby-config-js` 파일 내용을 수정합니다.\n\n```js\n{\n  resolve: 'gatsby-plugin-robots-txt',\n  options: {\n    host: 'https://<DOMAIN_NAME>',\n    sitemap: 'https://<DOMAIN_NAME>/sitemap.xml',\n    policy: [\n      {\n        userAgent: '*',\n        allow: '/',\n      },\n    ],\n  },\n},\n```\n\n### 글 최대 폭 설정\n\ngatsby-starter-bee 테마의 글 최대 폭을 수정하려면 `src/layout/index.jsx` 파일 내 maxWidth 속성 값의 rhythm 함수 매개변수 값을 수정해줍니다. 기본 값은 24이고, 이 블로그는 28로 설정되어 있습니다.\n\n```jsx\n<div\n  style={{\n    marginLeft: `auto`,\n    marginRight: `auto`,\n    maxWidth: rhythm(24), // 수정\n    padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n  }}\n>\n```\n\n### 기타 설정\n\n* About 페이지를 수정하려면 `content/__about/resume-en.md` 파일을 수정합니다.\n* Footer를 수정하려면 `src/components/footer/index.jsx` 파일을 수정합니다.\n* 우측 상단 깃허브 링크를 수정하려면 `src/components/social-share/github-icon/index.jsx` 파일을 수정합니다.\n\n## ✏️ 포스팅\n\n### 마크다운 파일 만들기\n\n보통 Gatsby 테마를 사용하는 경우 글을 작성할 때 `content` 경로에 마크다운 파일을 만들면 됩니다. 다만 gatsby-starter-bee 테마를 사용한다면 `content/blog` 경로에 마크다운 파일을 만들면 됩니다.\n\n마크다운 파일을 만드는 방법은 두 가지가 있습니다. 마크다운 파일명을 **index.md**로 만드는 경우와 그렇지 않은 경우인데요. 예시를 들어 설명하자면 다음과 같습니다.\n\n1. `content/blog/blogging/hello-world` 경로에 **index.md** 마크다운 파일을 만들었다면, 위와 동일하게 해당 포스트의 URL은 `https://<YOUR_DOMAIN>/blogging/hello-world`가 됩니다.\n2. `content/blog/blogging` 경로에 **hello-world.md** 마크다운 파일을 만들었다면, 해당 포스트의 URL은 `https://<YOUR_DOMAIN>/blogging/hello-world`가 됩니다.\n\n즉 마크다운 파일 이름을 **index.md**로 만들었다면 마크다운 파일 경로가 URL이 되고, 파일 이름을 그렇게 만들지 않았다면 마크다운 파일 경로와 파일 이름이 URL이 됩니다.\n\n### 마크다운 파일 작성\n\n마크다운 파일 내용 최상단에는 아래 속성 값이 들어가야 합니다. draft 속성 값이 false이면 해당 포스트는 공개됩니다. 글을 작성중이라면 true로 해놓는 것이 좋겠습니다.\n\n```txt\n---\ntitle: 'Post Title'\ndate: 2023-04-16 14:17:00\ncategory: 'Category'\ndraft: false\n---\n```\n\n위 속성들은 Gatsby 테마에 따라 사용되는 종류가 달라집니다. Gatsby 테마를 변경한 후 에러가 난다면, 테마에서 필요로 하는 위의 속성 값들이 빠지지 않았는지 확인해야 합니다.\n\n이후 마크다운 문법을 사용하여 글을 작성하면 됩니다.\n\n\n## 💠 형상관리\n\nGit 리포지토리를 통해 형상관리를 하므로 스테이징, 커밋 및 푸시 작업이 필요합니다. 주로 사용할만한 명령어는 다음과 같습니다.\n\n* 모든 파일을 스테이징: `git add *`\n* 커밋: `git commit -m \"Commit Message\"`\n* 원격 리포지토리로 전송: `git push`\n\n\n## 🚀 배포\n\n`package.json` 파일에 아래 스크립트를 추가합니다.\n\n```json\n\"scripts\": {\n    \"deploy\": \"gatsby build && cp CNAME ./public && gh-pages -d public\"\n}\n```\n\n보유한 도메인이 없다면 위의 `cp CNAME ./public &&`을 삭제합니다.\n\n그 다음 `npm run deploy` 명령어를 실행하면 public 폴더의 파일들이 깃허브 리포지토리의 gh-pages 브랜치에 배포됩니다. 깃허브 리포지토리 Settings 메뉴 → pages 메뉴에 들어간 다음, Branch를 gh-pages로 수정합니다.\n\n\n## 🔗 접속\n\n이제 [https://<GITHUB_ID>.github.io](https://<GITHUB_ID>.github.io) 주소로 블로그 접속이 가능합니다. 보유한 도메인이 있다면 보유한 도메인 주소로 접속하면 됩니다. 드더이(?) 끝났습니다. 😁"},{"excerpt":"나는 천체의 움직임까지 계산할 수 있지만, 인간의 광기는 도저히 계산할 수가 없다. - 뉴턴 부동산 가격은 항상 오르기만 한다고 생각해왔었지만 최근 부동산 가격이 하락하기 시작했습니다. 쥐꼬리만한 월급을 받고 있는 내게 향후 내집 마련의 꿈은 어림도 없겠구나 싶었지만 왠지 가능성이 생길 것만 같습니다. 그렇게 점점 부동산에 관심을 갖게 되었고, 이현철 소…","fields":{"slug":"/reading/the-real-estate-skyrocketing-is-coming/"},"frontmatter":{"date":"February 17, 2023","title":"독서: 이현철 《부동산 폭등장이 온다》","description":"독서: 이현철 《부동산 폭등장이 온다》","tags":["reading"],"series":"독서","previewImage":"reading.png","isPrivate":null},"rawMarkdownBody":"\n![](./images/real_estate_skyrocketing.jpeg)\n\n> 나는 천체의 움직임까지 계산할 수 있지만, 인간의 광기는 도저히 계산할 수가 없다. - 뉴턴\n\n부동산 가격은 항상 오르기만 한다고 생각해왔었지만 최근 부동산 가격이 하락하기 시작했습니다. 쥐꼬리만한 월급을 받고 있는 내게 향후 내집 마련의 꿈은 어림도 없겠구나 싶었지만 왠지 가능성이 생길 것만 같습니다. 그렇게 점점 부동산에 관심을 갖게 되었고, 이현철 소장의 책 《부동산 폭등장이 온다》라는 책을 추천받아 입문서로 읽어보았습니다. \n\n이 책은 우리나라의 부동산이 하락기, 하락 안정기, 상승기, 상승 조정기 및 폭등기의 사이클을 반복하고 있음을 설명합니다. 부동산 사이클과 더불어 우리나라에만 있는 전세제도가 부동산 시장에 어떤 영향을 끼치는지 꽤나 이해하게 된 것 같습니다.\n\n\n## 투기의 역사\n\n![](./images/unanimity_brain_eyes_hand.jpg)\n\n어떤 상품이든 가격이 오르는 상황이 지속되면 사람들은 그것에 관심을 가지기 시작합니다. 또한 여기저기서 돈을 벌었다는 사람들이 등장합니다. 이런 상황이 확대 및 재생산되면서 가치와 상관 없이 투기에 동참한 사람들에 의해 광풍이 불어닥칩니다. 하지만 산이 높아야 골이 깊다는 속담이 있듯 상승폭이 컸던 만큼 큰 하락폭으로 거품이 꺼집니다. **이러한 상황과 비합리적인 행동이 반복적으로 일어난 것이 바로 우리나라 부동산의 역사입니다.**\n\n부동산 가격에 영향을 미치는 요인엔 금리, 인구수, 경기상황 및 공급수요 등이 있습니다. 이런 요인들이 부동산 가격에 잘 적용되기 위해서는 인간은 이성적이고 합리적이라는 전제조건이 필요합니다. 하지만 인간은 위기 상황이 오면 대응 지침을 잊어버립니다. 그저 분위기에 휩쓸릴 뿐이지요. 상품의 가치가 폭등하거나 폭락하는 상황에서 **인간은 이성이 아닌 본성에 따르기 쉬우므로 이런 요인들만 가지고 부동산을 분석하기에는 한계가 따릅니다.**\n\n**따라서 우리나라 부동산 시장을 예측하기 위해서는 전세제도, 선분양제도, 부동산 정책 및 대중심리를 잘 이해해야 합니다.**\n\n\n## 부동산 사이클을 결정짓는 힘\n\n![부동산 사이클 3형제](./images/budongsan_cycle_3brothers.jpg)\n\n### 전세제도\n\n우리나라에만 있는 **전세제도는 매매가격의 하락을 지지해주는 역할을 합니다.** 부동산 하락기에 매매가격과 전세가격이 지속적으로 하락하면 전세가격이 안정을 찾아가면서 상승 전환이 일어납니다. 매매가격이 계속 떨어지면 부동산 보유자가 전세로 갈아타기를 시도하면서 전세 수요가 늘고 공급은 줄어들기 때문입니다.\n\n이후 인기 아파트의 전세가격이 상승해서 매매가격에 근접하여 인기 없는 아파트도 감지덕지해야 하는 상황이 됩니다. 이로 인해 매매가격이 오르지 않던 인기 없는 아파트도 **전세가격이 상승하여 매매가격에 근접하는 일이 발생합니다.**\n\n전세 수요자가 늘면서 상승한 **전세가격이 매매호가를 밀어올립니다.** 매매 물건이 하나 정도 오른 가격에 거래되면, 이것을 기준으로 해당 아파트의 매매가격이 정해지고 호가가 더 올라가게 됩니다.\n\n\n### 선분양제도\n\n**선분양제도는 시행사가 토지를 확보한 뒤 아파트 착공 전후에 입주자를 모집하는 제도입니다.** 이 제도로 인해 부동산 상승기엔 분양 물량이 증가하고 하락기엔 초과 공급이 되는 일이 반복됩니다.\n\n부동산 상승기엔 아파트 청약 경쟁률이 높아집니다. 집값이 오르리라는 심리가 깔려있기 때문에 청약에 떨어진 사람들이 프리미엄을 주고서라도 분양권을 사려고 합니다. 이렇게 시장이 점점 투기화됩니다. 입주물량이 대규모로 늘어나면 일시적으로 전세가격은 하락합니다. 이로인해 역전세난이 발생할 수 있지만 프리미엄이 높다면 전세가격도 그만큼 높게 형성됩니다.\n\n\n### 부동산 정책\n\n우리나라 역대 정권들은 부동산 시장이 침체되어 있을 때엔 규제 완화 정책을, 과열되어 있을 때엔 규제 강화 정책을 시행했습니다. 아주 단순하고 당연해 보이지만 이러한 **정책의 부작용으로 규제 완화 뒤 시장 과열이, 규제 강화 뒤 시장 침체가 이어진 것도 반복적으로 일어났습니다.**\n\n부동산 상승을 완벽하게 막으려면 부동산 보유세를 한 30% 이상으로 지정하면 되지 않을까 싶습니다. 하지만 정부는 이런 정책을 시행할 수 없습니다. 비이성적으로 변하기도 하는 시장과 달리 정부는 이성적이고 합리적인 정책을 시행할 수 밖에 없고, 정부의 임기는 부동산 사이클 대비 비교적 짧은 5년이기 때문에 정권을 빼앗길 각오를 해야 하기 때문입니다.\n\n\n## 부동산 사이클\n\n![기대와 현실](./images/expect_meme.jpg)\n\n### 하락기\n\n하락기로 전환되기 전 발생하는 여건은 크게 네 가지가 있습니다. \n\n1. 초과 공급: 대형 아파트가 인기일 때는 대형 아파트를, 소형 아파트가 인기일 때는 소형 아파트를 많이 짓다 보니 어느 순간 초과 공급되어 당시 인기있는 면적이 미분양으로 남게됩니다.\n2. 부담스러운 가격: 매수자들이 접근하기 어려운 가격까지 상승하면 매도-매수 간 힘겨루기 양상을 보이면서 지루한 정체 구간이 이어진 다음 하락 전환 여건이 마련됩니다.\n3. 무분별한 투자자: 어떤 분야에서든 투기장이 끝나갈 무렵엔 무분별한 투자자들이 진입합니다. 이런 투자자들은 어려운 상황에 처했을 때의 대응책을 세워놓지 않았고 부동산 가격이 계속 오르리라는 확신이 없기 때문에 하락 전환 시 급매물을 내놓게 됩니다.\n4. 낮은 전세가율: 부동산 상승 및 폭등기엔 매매가격의 상승폭이 크지만 전세가격은 완만하게 상승하므로 전세가율은 떨어집니다. 전세가율이 낮으면 아파트 매매가격이 떨어질 수 있는 폭이 매우 큽니다.\n\n**하락장을 탄생시키는 뇌관은 바로 입주 미분양입니다.** 입주 미분양이 발생하면 잔금을 감당하지 못할 보유자들이 급매물을 내놓습니다. 이로 인해 매도물량이 쏟아집니다. 이런 입주 미분양은 다른 지역으로 확산되며 적체되기 시작합니다. 여기저기 미분양이 넘쳐나는 상황에서 신축 아파트의 입주가 시작되면 구축 아파트까지 매매가격과 전세가격이 떨어지기 시작합니다. 더불어 아파트 가격은 호가보다 저렴한 가격에 팔리고, 다시 그보다 저렴한 매물이 나와 팔리는 일이 반복됩니다.\n\n이 시기에 계약을 연장하지 않으려는 임차인과 전세 보증금을 돌려줄 수 없는 임대인 사이의 분쟁이 발생하기 쉽습니다. 매수자를 찾는 것 자체가 어렵다보니 부동산 중개인은 매수자의 편을 들게 됩니다. 매도자가 매수자의 편의를 들어줘야 계약이 성사될 가능성이 커지기 때문입니다. 따라서 **매수자 우위의 시장으로 변하게 됩니다.**\n\n**건설사들은 신규 공급을 축소합니다.** 건설사들은 아파트를 높은 가격에 팔 수 있느냐에 관심이 있습니다. 아파트를 높은 가격에 팔 수 없는 시기는 피하고자 하므로 기존에 짓기 시작했던 아파트 건설을 중단할 수 없는 경우를 제외하곤 아파트 공급 물량을 줄이게 됩니다.\n\n따라서 하락장에 부동산을 보유하고 있다면 웬만한면 매도해야 합니다. 매도해서 얻은 현금으로 서울 시장과 반대 사이클을 그리고 있는 지방에 투자하는 것이 현명하다고 하지만... 2023년을 기준으로 서울과 지방 모두 같은 사이클을 타고있는 것 같습니다.\n\n\n### 하락 안정기\n\n**하락장에서 매매가격과 전세가격이 동반 하락하다가 어느 시점이 되면 전세가격이 상승 전환하기 시작합니다.** 이 때 하락하던 매매가격이 상승하는 전세가격과 만나게 됩니다. 이로 인해 전세가격이 상승하기 시작합니다.\n\n**줄어들었던 입주물량 때문에 전세 물량도 줄어들게 됩니다.** 집값이 오를 거라는 기대가 사라져서 집을 사기보다는 빌리는 쪽을 택하는 사람들이 많아지므로 전세 수요가 늘어나게 됩니다. 이로 인해 전세가율이 점점 상승합니다. 인기 좋은 아파트는 전세가율이 60 ~ 70%에 이르면 매수자들이 서서히 거래를 시작하므로 이 시점에서 매매가격 하락이 멈춥니다. 인기 없는 아파트는 전세가율이 80%에 육박하거나 넘을 때까지 계속 하락할 수 있습니다.\n\n여기저기 미분양된 아파트가 널려있는 상황에 **매수자를 유혹하는 특별 혜택으로 인해 새 아파트 미분양 물건에 계약이 집중됩니다.** 이 때 거래량은 최근 몇 년 사이 최대치를 기록하지만 대부분 미분양 물건의 거래량이므로 가격 변화는 거의 없습니다. 어찌됐든 미분양 물건이 시장에서 점점 사라지게 됩니다.\n\n\n### 상승기\n\n**상승기엔 전세가격이 매매가격을 지지하여 전세가격이 점차 상승합니다.** 또한 실수요에 가수요(만기 6개월 전부터 전셋집을 미리 구하려는 수요)까지 붙게 되어 **전세난이 시작됩니다.** 전세난이 시작되면 전세가율이 최고치(인기 아파트는 70%, 선호도가 떨어지는 아파트는 80~90%)에 이르므로 **갭 투자가 성행하게 됩니다.**\n\n**신규 아파트 분양 가격이 과거 상승장에 책정됐던 가격에 비해 낮게 책정**되며, 낮은 가격으로 인해 자연스레 프리미엄이 형성되며 완판됩니다.\n\n**상승장 후반부에 분양권 및 갭 투자가 과열되면 정부의 규제가 시작됩니다.** 과열된 갭 투자로 인해 전세매물이 시장에 많이 나오면 전세 시장이 점차 안정화됩니다. 이 시기에 갭 투자자는 전세매물의 공급책이 되는 셈입니다.\n\n\n### 상승 조정기\n\n상승 조정기엔 정부의 역대급(?) 규제정책이 시행됩니다. 이로 인해 시장이 빠르게 얼어붙지만 그것도 잠시였을 뿐 다시 상승합니다. 그 이유는 하락장으로 돌아설 만큼의 여건이 완성되지 않았기 때문입니다. 올라가려는 힘을 정부가 잠시 인위적으로 억눌렀을 뿐, 웅크렸던 에너지(대중심리)가 응축되어 폭발하게 되는 것입니다. 하지만 **정부 입장에선 가만히 있을 수 없으므로 규제정책을 시행할 수 밖에 없습니다.**\n\n**강력한 규제 정책이 나오더라도 보유자들은 계속 보유하는 쪽으로 마음을 다잡을 가능성이 큽니다.** 잠시 손실을 보더라도 계속해서 가격이 오를 거라는 심리 때문에 매도물량은 쏟아지지 않게 됩니다.\n\n이 시기에 부동산 보유자는 무조건 존버(?)해야 하며, 일시적인 가격 조정을 하락 전환으로 오해한 매도자가 던진 매물을 과감하게 잡아볼 법합니다. 단 폭등기는 짧게 이어지므로 주의해야 합니다.\n\n\n### 폭등기\n\n부동산 가격 폭등 직전에 나타나는 전조 현상은 매도물량이 줄어드는 것이며, **폭등의 근본적인 원인은 대중심리입니다.** 이런 상황으로 몰고가는 건 다름아닌 정부 정책의 부작용입니다. 정부가 추가 규제를 시행하면 시장이 일시적으로 반응하지만 이미 내성이 생긴 시장엔 큰 효과가 나타나지 않습니다.\n\n**부동산 가격이 폭등한 지역은 매수-매도 세력이 팽팽하게 붙는 정체구간으로 이어집니다.** 이 시기에는 부동산을 팔려고 해도 잘 팔리지 않습니다. 왜냐하면 가격이 너무 비싸고 시장 분위기가 가라앉았기 때문입니다. 이렇게 정체 구간을 이어가던 부동산은 어느 순간 하락장으로 들어서며 사이클이 반복됩니다.\n\n\n## 기타\n\n어느 지역이든 사람들이 관심을 두고 선호하는 동네가 있습니다. 그런 동네가 서울에선 강남입니다. 이 동네는 시장이 변할 때 항상 먼저 움직입니다. 그렇게 되면 대중의 관심이 아직 움직이지 않은 인접 지역으로 퍼져 나가고, 그 다음 인접 지역이 반응하면서 연쇄 작용이 일어나게 됩니다.\n\n가격이 폭등할 때 부동산을 팔면 반드시 그보다 가격이 더 오르게 되어 있습니다. 이 때 매도자는 발목 매도(?)를 했다며 마음이 편치 않겠지만 이 상황에 익숙해지지 않으면 향후 합리적인 대응이 어렵습니다. 좀 더 오를 것이라고 확신하며 존버(?)하다간 팔고 싶어도 팔지 못하는 상황이 올 수 있습니다.\n\n정부가 내놓는 부동산 규제와 완화는 마땅한 해결책이 아닙니다. 그저 시장이 극단적인 방향으로 흘러가는 것을 막기 위한 최선일 뿐입니다. 정부는 이성적으로만 대응할 수 밖에 없는 반면 시장은 비이성적으로 변하기도 하기 때문에 시장은 늘 언제나 정부를 이길 수 밖에 없지 않나... 싶습니다.\n\n\n## 결론은... 어쩔TV?\n\n![노력 드립(?)](./images/25_no_force.jpg)\n\n2023년 2월 기준 하락장이 시작 중인 것으로 판단됩니다. 2022년까지 아파트 가격이 너무 많이 올랐고, 무분별하게 들어온 갭 투자자와 임대인-임차인 간 갈등에 대한 뉴스들이 간간이 보이기도 할 뿐만 아니라 [호갱노노](https://hogangnono.com)에서 여러 아파트의 전세가율을 보면 최저치를 기록한 후 점점 높아지고 있기 때문입니다. [전국 미분양이 7만 호 가량 육박한다는 뉴스](https://www.yna.co.kr/view/AKR20230131066552003)를 봤지만 [입주 미분양 물량](https://data.kbland.kr/publicdata/unsold-apartments)은 과거 하락장 대비 적어서 본격적인 하락장은 아직 아니지 않나 싶습니다.\n\n하락 안정기가 올 때까지 꾸준히 부동산 공부를 하며 기회를 기다려야겠습니다. 과거 아파트 사이클 사례를 보면 향후 5 ~ 10년 사이에 기회가 오지 않을까 싶기도 하다가도... 2022년에 급격하게 오른 금리 인상의 여파로 인한 것인지 폭등 후 정체구간 없이 빠르게 하락장으로 전환되기 시작한 걸 보면 기회가 앞당겨 올 수 있을지도 모르겠습니다."},{"excerpt":"🧐 D2 언어란? D2 언어는 스크립트를 도표(다이어그램)로 바꿔주는 언어입니다. 아키텍처, 그래프 등을 일일이 손으로 그릴 필요 없이 스크립트를 작성하면 이에 맞는 svg 또는 png 파일을 생성해 줍니다. 요소들을 원하는 곳에 배치하는 게 좀 애매하긴 하지만, 파워포인트나 비쥬얼 빌더 등으로 도표를 그리는 것보다 빠르게 그릴 수 있어 매우 좋습니다. …","fields":{"slug":"/system/d2-language-usage/"},"frontmatter":{"date":"February 04, 2023","title":"D2 언어 사용법 정리","description":"D2 언어 사용법 정리","tags":["system"],"series":"시스템 관리","previewImage":"system.jpg","isPrivate":null},"rawMarkdownBody":"\n![](./images/d2.jpg)\n\n## 🧐 D2 언어란?\n\nD2 언어는 스크립트를 도표(다이어그램)로 바꿔주는 언어입니다. 아키텍처, 그래프 등을 일일이 손으로 그릴 필요 없이 스크립트를 작성하면 이에 맞는 svg 또는 png 파일을 생성해 줍니다.\n\n요소들을 원하는 곳에 배치하는 게 좀 애매하긴 하지만, 파워포인트나 비쥬얼 빌더 등으로 도표를 그리는 것보다 빠르게 그릴 수 있어 매우 좋습니다.\n\nD2 언어에 대한 소개 및 사용 방법은 [https://d2lang.com](https://d2lang.com) 사이트에서 확인할 수 있으며, 치트 시트는 [이곳](https://terrastruct-site-assets.s3.us-west-1.amazonaws.com/documents/d2_cheat_sheet.pdf)을 참고합니다.\n\n\n## 📥 설치 & 삭제\n\nMacOS에서는 `curl -fsSL https://d2lang.com/install.sh | sh -s --` 명령어를 실행하여 설치합니다. 삭제하려는 경우 `curl -fsSL https://d2lang.com/install.sh | sh -s -- --uninstall` 명령어를 실행합니다.\n\n윈도우에서는 [https://github.com/terrastruct/d2/releases](https://github.com/terrastruct/d2/releases) 에서 설치파일을 다운로드 후 설치합니다.\n\n\n## 🆕 Hello World!\n\n아래와 같이 작성한 후 test.d2 이름으로 저장합니다. 주석을 작성하려면 맨 앞에 `#`를 붙입니다.\n\n```text\n# 아래와 같이 작성 후 test.d2 이름으로 저장\nx -> y: Hello World!\n```\n\n`d2 test.d2` 명령어를 실행하면 test.svg 파일이 생성됩니다. 이 파일을 열어보면 다이어그램을 확인할 수 있습니다.\n\n\n## 🖥️ 주요 명령어\n\n```shell\n# 웹 브라우저를 통해 작성 내용을 변경할 때마다 다이어그램 확인\n$ d2 --watch=true test.d2\n\n# png 파일로 저장\n$ d2 test.d2 test.png\n\n# 스케치 테마 적용\n$ d2 test.d2 --sketch\n```\n\n\n## 💠 형태(Shapes)\n\n다이어그램에 나타나는 요소들을 형태(Shapes)라고 부릅니다. 형태는 키 값을 입력하여 선언합니다.\n\n```text\nimAshape # 키 값이 imAshape인 형태 선언\ni'm a-shape # ', - 및 공백 사용 가능\n```\n\n기본적으로 형태의 라벨(Label)은 키 값과 동일합니다. 라벨을 따로 붙이려면 키 값 뒤에 콜론(`:`)을 붙입니다.\n\n```text\n# 키 값은 py, 이름은 Phtyon인 형태 선언\npy: Python\n```\n\n형태의 기본 타입은 사각형(Rectangle) 입니다. 형태의 shape 속성 값을 변경하면 타입을 변경할 수 있습니다.\n\n* 타입 종류: rectangle, square, page, parallelogram, document, cylinder, queue, package, step, callout, stored_data, person, diamond, oval, circle, hexagon, cloud\n* 특별 타입: text, code, class sql_table, image, sequence_diagram\n\n```text\nCloud: My cloud\nCloud.shape: cloud\n```\n\n## ➡️ 연결(Connections)\n\n형태와 형태는 서로 연결할 수 있으며, `--`, `<-`, `->`, `<->` 를 사용합니다. 연결에도 라벨을 붙일 수 있습니다.\n\n```text\n# 2개의 형태끼리 연결\nA -- B\nA <- B\nA -> B\nA <-> B\n\n# 3개 이상을 한 번에 연결하거나 순환 연결도 가능함\nA -> B -> C -> A: Cycle\n\n# 연결에 Service request라는 이름 부여\nClient -> Server: Service request \n```\n\n\n## 📦 컨테이너(Containers)\n\n또 다른 형태를 포함한 형태를 컨테이너라고 합니다.\n\n```text\n# Nested syntax를 사용하지 않고 DB 컨테이너 선언\nDB: 데이터베이스\nDB.Oracle: 오라클\nDB.MariaDB: 마리아DB\n\n# Nested syntax를 사용하여 DB 컨테이너 선언\nDB: 데이터베이스 {\n  Oracle: 오라클\n  MariaDB: 마리아DB\n}\n\nDB {\n  label: 데이터베이스 # label 예약어를 사용하여 컨테이너 이름 지정 가능\n  Oracle: 오라클\n  MariaDB: 마리아DB\n}\n```\n\n## 💡 특별 객체(Special Objects)\n\n### 텍스트 & 코드\n\n마크다운을 입력하려면 키 값 뒤에 `|md`를 붙입니다.\n\n```text\nexplanation: |md\n  # Title\n    * content\n|\n```\n\nLaTeX 수식을 입력하려면 키 값 뒤에 `|tex` 또는 `|latex`를 붙입니다.\n\n```text\nplankton -> formula: will steal\nformula: {\n  equation: |latex\n    \\\\lim_{h \\\\rightarrow 0 } \\\\frac{f(x+h)-f(x)}{h}\n  |\n}\n```\n\n마크다운과 LaTeX 형태를 어느 형태 근처에 둘지 near 속성을 추가하여 설정할 수 있습니다. near 속성 값에 근처에 둘 형태의 키 값을 넣거나 아래 상수값을 넣습니다.\n* near 속성 상수값: top-left, top-center, top-right, center-left, center-right, bottom-left, bottom-center, bottom-right\n\n```text\naws: {\n  load_balancer -> api\n  api -> db\n}\ngcloud: {\n  auth -> db\n}\n\ngcloud -> aws\n\nexplanation: |md\n  # Why do we use AWS?\n  - It has more uptime than GCloud\n  - We have free credits\n| {\n  near: aws # explanation을 aws 근처에 배치\n}\n```\n\n### 아이콘\n\n```text\nmy network: {\n  icon: https://icons.terrastruct.com/infra/019-network.svg\n}\n```\n\n### 이미지\n\n```text\nserver: {\n  shape: image\n  icon: https://icons.terrastruct.com/tech/022-server.svg\n}\n```\n\n## 🤪 커스텀(Customization)\n\n### 테마(Themes)\n\nd2 명령어에 `-t [THEME_ID]` 또는 `--theme [THEME_ID]` 플래그를 사용하여 테마를 설정합니다. THEME_ID 값은 [이곳](https://d2lang.com/assets/images/theme_1-973ca3b84f78e3332f3b589288691e06.png)을 참고합니다.\n\n```text\n# 테마 ID 101번 사용\n$ d2 -t 101 input.d2 out.svg\n$ d2 -theme 101 input.d2 out.svg\n```\n\n### 스타일(Styles)\n\n형태의 style 속성을 사용합니다.\n\n```text\nA {\n  style: {\n    opacity: 0.4         # 투명도\n    stroke: deepskyblue  # 선 색(CSS 컬러 이름 또는 hex값)\n    fill: \"f4a261\"       # 배경 색(CSS 컬러 이름 또는 hex값)\n    stroke-width: 8      # 선 두께(1 ~ 15)\n    stroke-dash: 3       # 대시 선(0 ~ 10)\n    border-radius: 3     # 테두리 반경(0 ~ 20)\n    shadow: true         # 그림자(true or false)\n    multiple: true       # 3D 효과(true of false)\n    font-size: 28        # 글씨 크기(8 ~ 100)\n    font-color: red      # 글씨 색(CSS 컬러 이름 또는 hex값)\n    animated: true       # 애니메이션 효과(true or false)\n    bold: true           # 진한 글씨체(true or false)\n    italic: true         # 이탤릭체(true or false)\n    underline: true      #  밑줄(true or false)\n  }\n}\n```\n\n### 크기 조절(Dimensions)\n\n컨테이너가 아닌 형태의 너비 및 높이를 설정할 수 있습니다.\n\n```text\nsmall jerry: \"\" {\n  shape: image\n  icon: https://static.wikia.nocookie.net/tomandjerry/images/4/46/JerryJumbo3-1-.jpg\n  width: 200\n  height: 200\n}\n```\n\n### 대화형(interactive)\n\n형태의 우측 상단에 툴팁과 링크를 달 수 있습니다.\n\n```text\napple: { \n  tooltip: Apple\n  link: https://apple.com\n}\n```\n\n\n## 참고 사이트\n\n* [D2 Documentation](https://d2lang.com)\n* [D2 언어 사용해보기](https://velog.io/@sihyeong671/D2-언어-사용해보기)"},{"excerpt":"소스코드 링크: https://github.com/jeon-won/study-svelte/tree/main/svelte-todo 개발환경 구성 SvelteKit을 사용하여 프로젝트 생성:  프로젝트 경로로 이동:  의존성 패키지 설치:  추가 패키지 설치:  bootstrap은 UI를 구성하기 위해 사용 uuid는 여러 Todo 컴포넌트에 고유한 ID를 …","fields":{"slug":"/web/SVELTEs/svelte-create-todo-app/"},"frontmatter":{"date":"October 22, 2022","title":"스벨트(Svelte) Todo App 만들어 보기","description":"스벨트(Svelte) Todo App 만들어 보기","tags":["web"],"series":"web","previewImage":"web.jpg","isPrivate":null},"rawMarkdownBody":"\n![](./images/svelte-todo.jpg)\n\n소스코드 링크: [https://github.com/jeon-won/study-svelte/tree/main/svelte-todo](https://github.com/jeon-won/study-svelte/tree/main/svelte-todo)\n\n## 개발환경 구성\n\n1. SvelteKit을 사용하여 프로젝트 생성: `npm create svelte@latest <PROJECT_NAME>`\n2. 프로젝트 경로로 이동: `cd <PROJECT_NAME>`\n3. 의존성 패키지 설치: `npm i`\n4. 추가 패키지 설치: `npm i bootstrap uuid`\n    * bootstrap은 UI를 구성하기 위해 사용\n    * uuid는 여러 Todo 컴포넌트에 고유한 ID를 부여하기 위해 사용\n  \n## 스토어(Store) 생성\n\n* 스토어는 [https://hoontae24.github.io/4](https://hoontae24.github.io/4)를 참고하여 만듦.\n* 스토어 CRUD(Create, Read, Update, Delete)를 다른 컴포넌트에서 수행해도 되지만, 스토어를 만들 때 CRUD를 제공하는 함수도 같이 만들어주는 게 편한 것 같음...\n\n```javascript\n/*** src/todos.js ***/\n\nimport { writable } from \"svelte/store\";\nimport { v4 } from \"uuid\";\n\n/* Todo 목록 */\nlet _todos = [\n  { id: v4(), title: \"스벨트 공부\", done: false },\n  { id: v4(), title: \"숨쉬기\", done: true },\n  { id: v4(), title: \"밥먹기\", done: false },\n]\n\nconst createTodos = () => {\n  // Writable 스토어 생성\n  const todos = writable(_todos);\n\n  // Writable 스토어가 제공하는 함수 꺼내오기\n  //  * _update 함수는 Writable 스토어가 제공하는 함수\n  //  * update 함수는 아래에서 재정의할 커스텀 함수\n  const { subscribe, reset, update: _update } = todos;\n\n  // Todo 추가 함수\n  const add = (title) => {\n    _update(todos => todos.concat({ id: v4(), title, done: false }));\n  }\n\n  // Todo 제거 함수\n  const remove = (item) => {\n    if(!item) return;\n    _update(items => items.filter(_item => _item.id !== item.id));\n  }\n\n  // Todo 수정 함수(_update와는 다르다. _update와는...)\n  const update = (item) => {\n    if(!item) return;\n    _update(todos => todos.map(_item => (_item.id === item.id ? item : _item)));\n  }\n\n  // Todo CRUD 관련 함수 리턴\n  return { subscribe, reset, add, remove, update };\n}\n\nexport const todos = createTodos();\n```\n\n## 최상위 컴포넌트 구현\n\nBootstrap 5 사용 방법은 아래 링크 참고\n* [https://getbootstrap.kr/docs/5.2/getting-started/introduction](https://getbootstrap.kr/docs/5.2/getting-started/introduction)\n* [https://www.w3schools.com/bootstrap5/index.php](https://www.w3schools.com/bootstrap5/index.php)\n\n### 스크립트 블록 구성\n\n* 스토어 구독 및 구독종료: `subscribe` 및 `unsubscribe` 함수 사용\n* 변수\n  - `inputTodo`: 입력된 할 일 값\n  - `refInput`: 할 일을 입력받는 input 태그에 포커스를 맞추기 위한 참조 변수\n* 이벤트 처리 함수\n  - `handleEnterKey`: input 태그에서 엔터 키 입력 이벤트 처리.\n  - `handleAddbtn`: 추가 버튼 클릭 이벤트 처리. 입력된 할 일을 스토어에 저장함.\n  - `handleCancelBtn`: 취소 버튼 클릭 이벤트 처리. 입력된 할 일을 초기화함.\n* 하위 컴포넌트에서 전달받은 이벤트 처리 함수\n  - `removeTodo`: 하위 컴포넌트에서 할 일 제거 이벤트를 보내면 스토어에서 해당 할 일을 제거\n  - `changeTodo`: 하위 컴포넌트에서 할 일 수정 이벤트를 보내면 스토어에서 해당 할 일을 수정\n\n### HTML 블록 구성\n\n* `<nav>` 태그로 네비게이션 바 구성\n* `<main>` 태그 내에 주 콘텐츠 배치\n  - `<h1>` 태그로 제목 배치\n  - `<input>` 태그로 할 일 입력 받기\n  - `<button>` 태그로 추가/취소 버튼 생성\n  - `<Todo>` 태그로 Todo 컴포넌트 배치\n\n### 스타일 블록 구성\n\n* 구글 폰트 import\n* 모든 HTML 요소에 나눔고딕 폰트 적용\n* h1 태그 색상 설정\n\n```html\n<!-- src/routes/+page.svelte -->\n\n<script>\n  import \"bootstrap/dist/css/bootstrap.min.css\";\n  import { onDestroy } from \"svelte\";\n  import Todo from \"../Todo.svelte\";\n  import { todos } from \"../todos\";\n\n  // 스토어 구독\n  const unsubscribe = todos.subscribe((v) => {\n    console.log(v);\n  });\n\n  // 컴포넌트가 파괴될 때 스토어 구독 종료\n  onDestroy(unsubscribe);\n\n  /* 변수 */\n  let inputTodo = \"\"; // Todo 입력 값\n  let refInput; // input 태그를 제어하기 위한 참조 변수\n\n  /* 이벤트 처리 함수 */\n  // input 태그 내 엔터 키 입력 이벤트 처리 함수\n  const handleEnterKey = () => {\n    if(window.event.keyCode == 13) {\n      if(inputTodo === \"\"){ // 입력 값이 비어 있으면 경고 띄운 후 포커스 맞춤\n        alert(\"할 일을 입력해주세요.\");\n        refInput.focus();\n        return;\n      }\n\n      todos.add(inputTodo); // 입력 값을 스토어에 저장\n      inputTodo = \"\";\n    }\n  }\n\n  // 추가 버튼 클릭 이벤트 처리 함수\n  const handleAddBtn = () => {\n    if(inputTodo === \"\"){ // 입력 값이 비어 있으면 경고 띄운 후 포커스 맞춤\n      alert(\"할 일을 입력해주세요.\");\n      refInput.focus();\n      return;\n    }\n\n    todos.add(inputTodo); // 입력 값을 스토어에 저장\n    inputTodo = \"\";\n  }\n\n  // 취소 버튼 클릭 이벤트 함수\n  const handleCancelBtn = () => {\n    inputTodo = \"\"; // 입력 값을 초기화 하고 포커스 맞춤\n    refInput.focus();\n  }\n\n  /* 하위(Todo) 컴포넌트에서 보내온 이벤트를 처리하는 함수 */\n  const removeTodo = (e) => todos.remove(e.detail);\n  const changeTodo = (e) => todos.update(e.detail);  \n</script>\n\n<!-- 네비게이션 바 -->\n<nav class=\"navbar navbar-expand-sm navbar-dark bg-primary\">\n  <div class=\"container-fluid\">\n    <a class=\"navbar-brand\" href=\"/\">\n      <span>Svelte App</span>\n    </a>\n  </div>\n</nav>\n\n<!-- 메인 항목 -->\n<main class=\"container p-3\">\n  <!-- 제목 -->\n  <h1 class=\"text-center\">TODO LIST</h1>\n\n  <!-- Todo 입력 -->\n  <div class=\"form-floating mb-3\">\n    <input type=\"text\" class=\"form-control\" id=\"floatingInput\" placeholder=\"무엇을 해야 하나요?\" bind:value={inputTodo} bind:this={refInput} on:keyup={handleEnterKey}>\n    <label for=\"floatingInput\">무엇을 해야 하나요?</label>\n  </div>\n\n  <!-- 추가/취소 버튼 -->\n  <div class=\"row\">\n    <div class=\"col\">\n      <button class=\"btn btn-primary w-100 p-2\" on:click={handleAddBtn}>추가</button>\n    </div>\n    <div class=\"col\">\n      <button class=\"btn btn-danger w-100 p-2\" on:click={handleCancelBtn}>취소</button>\n    </div>\n  </div>\n\n  <!-- Todo 컴포넌트 배치 -->\n  {#each $todos as todo (todo.id)}\n    <Todo todo={todo} on:removeTodo={removeTodo} on:changeTodo={changeTodo}/>\n  {/each}\n</main>\n\n<style>\n  /* 구글폰트 import 후 모든 HTML 요소에 나눔고딕 적용 */\n  @import url('https://fonts.googleapis.com/css2?family=Nanum+Gothic&display=swap');\n  \n  * {\n    font-family: 'Nanum Gothic', sans-serif;\n  }\n\n  h1 {\n    color: #F22208;\n  }\n</style>\n```\n\n## Todo 컴포넌트 구현\n\n### 스크립트 블록\n\n* 상위 컴포넌트에 전달할 이벤트 처리 함수\n  - `dispatch`: 이벤트 부착 함수\n  - `changeTodo`: 할 일 수정 이벤트를 상위 컴포넌트에 전달\n  - `remoteTodo`: 할 일 제거 이벤트를 상위 컴포넌트에 전달\n* 플래그 및 변수\n  - `isDone`: 할 일 완료 여부\n  - `isChanging`: 할 일 수정 중 여부\n  - `changeBtnName`: 수정/완료 버튼 이름\n* 이벤트 처리 함수\n  - `handleChangeBtn`: 수정 버튼 이벤트 처리 함수. 수정 중일 때 버튼 이름을 '완료'로, 수정 중이 아닐 때 버튼 이름을 '수정'으로 변경 후 상위 컴포넌트에 할 일 수정 이벤트 전달.\n\n### HTML 블록\n\n* `<input>` 태그로 체크박스 표시. 체크박스를 표시하면 할 일이 완료 처리됨.\n* 할 일 변경 중이면 `<input>` 태그로 할 일을 수정받는 입력박스를, 그게 아니라면 `<span>` 태그로 할 일 텍스트를 출력.\n  - 완료된 일인 경우 span 태그의 클래스 값에 done을 입력하여 취소선 스타일을 적용하도록 함\n* `<button>` 태그로 수정/삭제 버튼 생성\n  - '수정' 버튼을 클릭하여 할 일을 수정하며,이후 나타난 '완료' 버튼을 클릭하여 할 일 수정을 마침.\n  - '삭제' 버튼 클릭 시 할 일 삭제.\n  \n### 스타일 블록\ndone 클래스로 지정된 HTML 요소에 취소선 스타일 적용\n\n```html\n<!-- src/Todo.svelte -->\n\n<script>\n  import { createEventDispatcher } from \"svelte\";\n  export let todo; // 상위 컴포넌트에서 받아온 Props\n\n  /* 상위 컴포넌트에 전달할 이벤트 */\n  const dispatch = createEventDispatcher();\n  const changeTodo = () => dispatch(\"changeTodo\", todo);\n  const removeTodo = () => dispatch(\"removeTodo\", todo);\n\n  /* 플래그 및 변수 */\n  let isDone = todo.done; // 할 일 완료 여부\n  let isChanging = false; // 할 일 수정 중 여부\n  let changeBtnName = \"수정\"; // 버튼 이름(수정 <-> 완료)\n\n  /* 수정 버튼 이벤트 처리 기 */\n  const handleChangeBtn = () => {\n    isChanging = !isChanging;\n    isChanging ? changeBtnName = \"완료\" : changeBtnName = \"수정\";\n    changeTodo(); // change 이벤트를 상위 컴포넌트로 전달\n  }\n</script>\n\n<div class=\"shadow-sm p-3 mb-3 bg-body rounded\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <!-- 체크박스: 체크되어 있으면 취소선 표시 -->\n      <input type=\"checkbox\" checked={todo.done} on:click={() => isDone = !isDone}>\n\n      <!-- 할 일 변경 중이면 입력 태그를, 아니면 텍스트 출력 -->\n      {#if isChanging}\n        <input type=\"text\" class=\"input w-75\" bind:value={todo.title}>\n      {:else}\n        <span class=\"{isDone ? 'done' : ''}\">{todo.title}</span>\n      {/if}\n    </div>\n    <div class=\"col-3\">\n      <!-- 수정/삭제 버튼 -->\n      <div class=\"btn-group w-100\" role=\"group\" aria-label=\"Basic mixed styles example\">\n        <button type=\"button\" class=\"btn btn-primary\" on:click={handleChangeBtn}>{changeBtnName}</button>\n        <button type=\"button\" class=\"btn btn-danger\" on:click={removeTodo}>삭제</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<style>\n  .done {\n    text-decoration: line-through;\n    color: gray;\n  }\n</style>\n```"},{"excerpt":"🤔 스벨트란? React, Vue.js 등과 같은 웹 프레임워크 매우 적은 코드로 프론트엔드 결과물을 만들 수 있음 🧑‍💻 개발환경 구성 REPL 짧은 코드를 테스트하는 경우 REPL을 사용 로컬 환경 구성 Visual Studio Code 및 Node.js 설치 스벨트 프로젝트 생성 SvelteKit을 사용하지 않는 경우:  SvelteKit을 사용하는 경…","fields":{"slug":"/web/SVELTEs/svelte-usage-summary/"},"frontmatter":{"date":"October 20, 2022","title":"스벨트(Svelte) 정리","description":"스벨트(Svelte) 정리","tags":["web"],"series":"web","previewImage":"web.jpg","isPrivate":null},"rawMarkdownBody":"\n![](./images/cookie_react_svelte.jpg)\n\n## 🤔 스벨트란? \n\n* React, Vue.js 등과 같은 웹 프레임워크\n* 매우 적은 코드로 프론트엔드 결과물을 만들 수 있음\n\n\n## 🧑‍💻 개발환경 구성\n\n### REPL\n\n짧은 코드를 테스트하는 경우 [REPL](https://svelte.dev/repl)을 사용\n\n### 로컬 환경 구성\n\n1. Visual Studio Code 및 Node.js 설치\n2. 스벨트 프로젝트 생성\n  - SvelteKit을 사용하지 않는 경우: `npx degit sveltejs/template <PROJECT_NAME>`\n  - SvelteKit을 사용하는 경우: `npm create svelte@latest <PROJECT_NAME>`\n3. 생성된 프로젝트로 이동: `cd <PROJECT_NAME>`\n4. 관련 패키지 설치: `npm install`(또는 `npm i`)\n5. 스벨트 개발 서버 실행: `npm run dev`\n6. HELLO WORLD 페이지 접속(위 명령어 실행 시 접속 주소가 나타남)\n\n\n## 📦 스벨트 프로젝트 구성\n\n스벨트는 컴포넌트로 구성되며, 각 컴포넌트는 스크립트 블록, HTML 블록 및 스타일 블록 세 가지로 구성됨.\n\n```html\n<script>스크립트 블록(자바스크립트 작성)</script>\n<main>HTML 블록</main> <!-- main 태그를 빼기도 함 -->\n<style>스타일 블록(CSS 작성)</style>\n```\n\n## ➗ 기본적인 표현식 및 블록\n\n### 중괄호 표현식\n\n중괄호 표현식 `{}`은 스크립트 블록에 선언된 값을 HTML 블록에서 접근할 때 사용.\n\n```html\n<script>\n  let title = \"Hello Svelte!\";\n</script>\n\n<!-- 스크립트 블록에서 선언한 title 변수 값을 HTML 블록에서 사용-->\n<h1>{title}</h1>\n```\n\n### if 블록\n\nif 블록은 조건을 판별할 때 사용.\n\n```html\n<script>\n  let  a = 1;\n</script>\n\n{#if a > 0}\n  <p>a는 양수</p>\n{:else if a < 0}\n  <p>a는 음수</p>\n{:else}\n  <p>a는 0</p>\n{/if}\n```\n\n### each 블록\n\neach 블록은 배열 내 요소들을 하나씩 꺼내올 때 사용.\n\n```html\n<script>\n  let fruits = [\"🍎\", \"🍊\", \"🍌\", \"🍓\", \"🍑\"]\n</script>\n\n<select>\n  <option>Select</option>\n  {#each fruits as fruit, idx}\n    <option>{idx}: {fruit}</option>\n  {/each}\n</select>\n````\n\n### await 블록\n\nawait 블록은 Promise 객체가 Pending 상태일 때 {#await} 식이, Fulfilled 상태일 때 {:then} 식을 실행함.\n\n```html\n<script>\n  async function getPosts(){\n    const res = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\n    const json = await res.json();\n    return json;\n  }\n  let promisePosts = \"\";\n</script>\n\n<button on:click={() => promisePosts = getPosts()}>Get post lists</button>\n\n<!-- promisePosts가 Pending 상태일 때 #await 식이 실행되고, -->\n{#await promisePosts}\n<p>Wait...</p>\n<!-- promisePosts가 Fulfilled 상태로 변하면 :then 식이 실행됨 -->\n{:then posts}\n<p>대충 posts를 가공하는 코드...</p>\n{/await}\n```\n\n### key 블록\n\nkey 블록은 키로 선언된 변수 값이 바뀔 때 블록 내부를 재생성함.\n\n```html\n<script>\n  let name = \"Svelte\";\n</script>\n\n<main>\n  <input type=\"text\" bind:value={name}>\n\n  <!-- name 값이 바뀌면 key 블록이 재생성됨 -->\n  {#key name}\n    <h1>Hello {name}!</h1>\n    <p>{Date()}</p>\n  {/key}\n</main>\n```\n\n### html 블록\n\n`{@html}` 블록은 HTML로 구성된 문자열을 텍스트가 아닌 HTML 엘리먼트로 표현함.\n\n```html\n<script>\n  let content = `\n    <h1>Hello</h1>\n    <p>World!</p>\n  `;\n</script>\n\n{@html content}\n```\n\n### 클래스 속성 값 표현\n\nHTML 엘리먼트의 class 속성 값을 다양한 방법으로 지정할 수 있음.\n\n```html\n<script>\n  let pStyle = \"active\";\n  let active = true;\n  let admin = true;\n</script>\n\n<h1>클래스 속성 다양하게 사용하기</h1>\n<p class=\"active\">1. 클래스 속성을 직접 명시</p>\n<p class={pStyle}>2. 클래스 속성과 스크립트 변수 바인딩</p>\n<p class:active={active}>3. class 지시자 사용(`<p class=\"active\">`와 동일함)</p>\n<p class:active>4. class 지시자 줄여쓰기(`<p class=\"active\">`와 동일함)</p>\n<p class:active class:admin>5. class 지시자 여러 개 사용</p>\n```\n\n\n## ⚡ 반응성(Reactivity)\n\n* 스벨트는 연산자 `=`를 사용하여 반응형 변수를 선언하고 값을 할당함.\n* 값이 할당되면 트리거가 발생하며, 이로 인해 센서 `$:`가 반응함.\n\n```html\n<script>\n  // 1. 반응형 변수 선언 및 값 할당\n  let a = 1; \n  \n  // 3. 반응현 변수 값이 바뀌면 센서가 반응함\n  $: console.log(`a는 {a} 입니다.`);\n</script>\n<!-- 2. 트리거 발생 -->\n<button on:click={() => a = a + 1}>a는 {a} 입니다.</button>\n```\n\n센서 뒤에 오는 코드는 한 줄이거나 여러 줄일 수 있음.\n\n```html\n<script>\n  let a = 1\n  \n  $: console.log(`a는 ${a}`);\n  \n  $: {\n    console.log(`a는 ${a}임`);\n    console.log(`왜냐하면 ${a}이기 때문임`);\n  }\n  \n  $: if(a > 0) {\n    console.log('a는 양수임');\n    console.log('왜냐하면 양수이기 때문임');\n  }\n  \n  $: for(let i=0 ; i<4 ; i++) {\n    console.log(`${i+1}번째 for문 그냥 돌려봄: ${a}`)\n  }\n</script>\n```\n\n배열과 JSON 객체는 변경한 후엔 반드시 할당을 해야 변화가 감지됨\n\n```html\n<script>\n  let fruits = [\"🍓\", \"🍉\", \"🍒\"];\n  \n  function trigger(){\n    fruits.push(\"🍊\");\n    fruits = fruits; // 배열을 변경한 후 반드시 할당(=)을 해야 변경 감지\n  }\n  \n  $: console.log(`배열 변경 감지됨. fruits = ${fruits}`)\n</script>\n```\n\n\n## 🧷 바인딩(Binding)\n\n바인딩은 스크립트 블록과 HTML 블록 간 데이터를 연계하기 위해 사용하며, 지시자 `bind`를 사용함.\n\n### 텍스트 바인딩\n\n```html\n<script>\n  let name = 'world';\n</script>\n\n<!-- input 태그에 입력된 텍스트 값이 name 변수에 저장됨 -->\n<h1>Hello {name}!</h1>\n<input type=\"text\" bind:value={name}> \n```\n\n### 숫자 바인딩\n\n```html\n<script>\n  let size = 20;\n</script>\n\n<!-- input 태그에 입력된 숫자 값이 name 변수에 저장됨 -->\n<h1>Size: {size}</h1>\n<input type=\"range\" bind:value={size} min=0 max=100>\n```\n\n### 체크박스 바인딩\n\n```html\n<script>\n  let editable = false;\n</script>\n\n<!-- 체크박스 체크 여부가 editable 변수에 저장됨 -->\n<h1>editable: {editable}</h1>\n<input type=\"checkbox\" bind:checked={editable}>Check\n```\n\n### 그룹 바인딩\n\n```html\n<script>\n  let where = \"\";\n</script>\n\n<!-- 어느 라디오 버튼이 선택됐는지 where 변수에 저장됨 -->\n<h1>당신의 성별은? {where}</h1>\n<input type=\"radio\" bind:group={where} value=\"남성\">남성\n<input type=\"radio\" bind:group={where} value=\"여성\">여성\n```\n\n### 단일 선택 바인딩\n\n```html\n<script>\n  let choice;\n</script>\n\n<!-- 어떤 값이 선택되었는지 choice 변수에 저장됨 -->\n<h1>선택한 값: {choice}</h1>\n<select bind:value={choice}>\n  <option value=\"Svelte\">Svelte</option>\n  <option value=\"React\">React</option>\n  <option value=\"Vue\">Vue</option>\n</select>\n```\n\n### 다중 선택 바인딩\n\nselect 태그에 multiple 속성 사용\n\n```html\n<script>\n  let chosen = [];\n</script>\n\n<!-- 어떤 값이 선택되었는지 chosen 변수에 저장됨 -->\n<h1>선택한 값: {chosen}</h1>\n<select multiple bind:value={chosen}>\n  <option value=\"Svelte\">Svelte</option>\n  <option value=\"React\">React</option>\n  <option value=\"Vue\">Vue</option>\n</select>\n```\n\n### innerHTML 바인딩\n\ninnerHTML 바인딩은 엘리먼트에 HTML 태그를 넣을 때 사용하며, 이 때 contenteditable 속성을 추가해야 함.\n\n```html\n<script>\n  let html = `\n  <h1>Hello</h1>\n  <p>Svelte!</p>\n  `;\n</script>\n\n<!-- bind:innerHTML을 사용하려면 contenteditable 속성이 필요함 -->\n<div contenteditable=\"true\" bind:innerHTML={html}></div>\n```\n\n### HTML 엘리먼트 크기 값 바인딩\n\nHTML 엘리먼트 크기 값 바인딩에 사용하는 속성 (clientWidth, clientHeight, offsetWidth, offsetHeight)은 블록 엘리먼트에서 읽기 전용으로 바인딩 됨. 따라서 블록 엘리먼트 크기를 감지하는 코드를 작성할 수는 있지만 크기를 조절하는 코드는 작성할 수 없음.\n\n블록 엘리먼트 크기를 조절하는 코드를 작성하려면 블록 엘리먼트를 인라인 엘리먼트에 포함시킨 후 인라인 엘리먼트 크기를 조절하는 코드를 작성해야 함. 다만 오버헤드가 발생할 수 있으므로 많은 엘리먼트에 해당 속성을 바인딩하지 않는 것이 좋음.\n\n> 💡 블록 엘리먼트: DOM에 표현될 때 새 줄에서 시작하고 가로 크기를 전부 차지하는 엘리먼트\n\n> 💡 인라인 엘리먼트: DOM에 표현될 때 새 줄에서 시작하지 않고 필요한 크기 만큼 차지하는 엘리먼트\n\n```html\n<script>\n  let clientWidth, clientHeight, offsetWidth, offsetHeight;\n</script>\n\n<h1 \n    bind:clientWidth={clientWidth} \n    bind:clientHeight={clientHeight} \n    bind:offsetWidth={offsetWidth} \n    bind:offsetHeight={offsetHeight}>Hello Svelte!\n</h1>\n<ul>\n  <li>clientWidth: {clientWidth}</li>\n  <li>clientHeight: {clientHeight}</li>\n  <li>offsetWidth: {offsetWidth}</li>\n  <li>offsetHeight: {offsetHeight}</li>\n</ul>\n```\n\n\n## ↩️ 컴포넌트 라이프 사이클\n\n### onMount\n\n* 컴포넌트가 돔에 렌더링 되고 모든 엘리먼트의 동작 준비가 완료되었을 때 딱 한 번 콜백함수 호출\n* 서버에서 데이터를 가져오거나, 엘리먼트에 포커스를 줄 때 onMount에서 처리하는 것이 좋음\n\n```html\n<script>\n  import { onMount } from \"svelte\";\n  \n  onMount(() => console.log(\"onMount() 호출됨.\"));\n</script>\n```\n\n### onDestroy\n\n* 컴포넌트가 돔에서 파괴될 때 딱 한 번 콜백함수 호출.\n* onMount() 콜백함수가 무기명 함수를 return하면 해당 무기명 함수는 onDestory() 콜백함수와 같은 기능을 함.\n\n```html\n<script>\n  import { onMount, onDestroy } from \"svelte\";\n  \n  onMount(() => {\n    console.log(\"onMount() 호출됨.\");\n    \n    // onDestroy() 콜백함수와 같은 기능\n    return () => console.log(\"컴포넌트 파괴됨.\");\n  });\n  \n  onDestroy(() => console.log(\"onDestroy() 호출됨.\"));\n</script>\n```\n\n### beforeUpdate, afterUpdate\n\n* 엘리먼트 인스턴스 생성 → beforeUpdate 호출 → 돔 업데이트 → onMount 호출 → afterUpdate 순으로 호출됨.\n* 컴포넌트가 최초 DOM에 렌더링된 이후, 사용자 이벤트에 의해 DOM이 변경되어야 할 때 사용하면 유용.\n\n```html\n<script>\n    import { beforeUpdate, afterUpdate } from \"svelte\";\n\n    beforeUpdate(() => console.log(\"beforeUpdate() 호출됨\"));\n    afterUpdate(() => console.log(\"afterUpdate() 호출됨\"));\n</script>\n```\n\n### tick\n\n* 원하는 시점에 DOM을 업데이트 하고 싶을 때 사용하는 함수\n* 컴포넌트 라이프 사이클 함수 중 가장 늦게 실행됨\n\n```html\n<script>\n  import { tick } from \"svelte\";\n  \n  let count = 0;\n  \n    // async 함수가 tick 함수를 호출해야 함\n  const handleButton = async () => {\n    count = count + 1;\n    await tick(); // 돔이 업데이트 되면 tick 함수 실행 이후 코드가 실행됨\n  }\n</script>\n\n<h1>{count}</h1>\n<button on:click={handleButton}>Count</button>\n```\n\n\n## 🚚 객체 전달\n\n### Props\n\nProps(Properties)는 컴포넌트가 가지는 값. 상위 컴포넌트가 하위 컴포넌트에 값을 전달하기 위해 사용.\n\n```html\n<!-- App.svelte: 상위 컴포넌트 -->\n\n<script>\n    // 하위 컴포넌트 import\n  import Child from \"./Child.svelte\";\n\n    // props로 전달할 객체\n  let list = [\n    { code: \"svelte\", desc: \"스벨트\" },\n    { code: \"react\", desc: \"리액트\" },\n    { code: \"javascript\", desc: \"자바스크립트\" }\n  ];\n</script>\n\n<!-- Child 컴포넌트에 list props 전달 -->\n<Child list={list} />\n```\n\n```html\n<!-- Child.svelte: 하위 컴포넌트 -->\n\n<script>\n  export let list; // props로 받아올 변수에 export 사용\n</script>\n\n<ul>\n  {#each list as item}\n  <li>{item.code}: {item.desc}</li>\n  {/each}\n</ul>\n```\n\n### Slot\n\n슬롯은 상위 컴포넌트가 하위 컴포넌트에 콘텐츠를 전달하는 수단. 상위 컴포넌트에서 하위 컴포넌트 태그 사이에 콘텐츠를 넣어주면\n\n```html\n<script>\n  import Card from \"./Card.svelte\";\n</script>\n\n<Child>콘텐츠 영역<Child>\n```\n\n하위 컴포넌트에서는 `<slot>` 태그로 콘텐츠를 받아올 수 있음.\n\n```html\n<slot></slot>\n```\n\nNamed Slot은 하위 컴포넌트의 원하는 곳에 콘텐츠를 넣을 수 있음.\n\n```html\n<!-- App.svelte -->\n\n<script>\n  import Child from \"./Child.svelte\";\n  let user = \"스벨트\";\n</script>\n\n<Child>\n    <!-- Named Slot을 사용하여 슬롯을 구분 -->\n  <h2 slot=\"user\">{user}</h2>\n  <span slot=\"id\">svelte</span>\n</Child>\n```\n\n```html\n<!-- Child.svelte -->\n\n<!-- Named Slot을 사용하여 슬롯을 구분 -->\n<slot name=\"user\"></slot>\n<p>아이디: <slot name=\"id\"></slot></p>\n```\n\n`$$slots` 객체를 사용하면 slot에 값이 들어있는지 확인할 수 있음.\n\n```html\n<!-- App.svelte -->\n\n<script>\n  import Child from \"./Child.svelte\";\n  let user = \"스벨트\";\n</script>\n\n<Child>\n  <h2 slot=\"user\">{user}</h2>\n  <!-- id slot을 전달하지 않음 -->\n</Child>\n```\n\n```html\n<!-- Child.svelte -->\n\n<slot name=\"user\"></slot>\n\n<!-- id slot에 값이 들어있는지 확인 -->\n{#if $$slots.id}\n<p>아이디: <slot name=\"id\"></slot></p>\n{:else}\n<p>아이디: 비어있음</p>\n{/if}\n```\n\n슬롯의 변화나 값 등을 하위 컴포넌트에서 상위 컴포넌트로 전달하려면 슬롯의 Props를 사용해야 함.\n1. 하위 컴포넌트의 `<slot>` 태그 안에 name이라는 이름만 피해서 Props를 정의한 후\n2. 상위 컴포넌트에서 `let:` 지시자를 사용하여 Props를 사용하면 됨\n\n```html\n<script>\n  import Child from \"./Child.svelte\";\n</script>\n\n<Child>\n  <!-- 하위 컴포넌트 슬롯의 Props를 let 지시자를 사용하여 가져옴 -->\n  <h1 slot=\"foo\" let:hovered={isFocused} class:hovered={isFocused}>Hello Svelte!</h1>\n</Child>\n\n<style>\n  .hovered {\n    font-style: italic;\n  }\n</style>\n```\n\n```html\n<script>\n  let isHovered = false;\n  const handleMouseEnter = () => isHovered = true;\n  const handleMouseLeave = () => isHovered = false;\n</script>\n\n<!-- Slot에는 지시자를 사용할 수 없으므로 Slot을 div 태그로 감싼 후 이 태그에 이벤트 지시자를 사용함 -->\n<div on:mouseenter={handleMouseEnter} on:mouseleave={handleMouseLeave}>\n  <!-- 마우스 커서 진입 및 탈출 이벤트 상태를 슬롯의 Props를 사용하여 전달 -->\n  <slot name=\"foo\" hovered={isHovered}></slot>\n</div>\n```\n\n### Context API\n\n* 컨텍스트 API는 하위 컴포넌트에서 상위 컴포넌트에 접근하기 위한 방법\n* 모든 컴포넌트는 컨텍스트 객체를 가질 수 있으며, 이 객체는 하위 컴포넌트에서만 접근 가능.\n* 애플리케이션 전체에 데이터 공유를 해야 한다면 스토어를, 하위 컴포넌트에만 제한적으로 데이터 접근을 해야 한다면 컨텍스트 API를 사용하는 것이 효율적.\n\n상위 컴포넌트에서 setContext 함수로 컨텍스트 객체를 만든 후\n\n```html\n<script>\n  import { setContext } from \"svelte\";\n  import Child from \"./Child.svelte\";\n  \n  // 첫 번째 파라미터: 키(식별자)\n  // 두 번째 파라미터: 값\n  setContext(\"num\", 10);\n</script>\n\n<Child />\n```\n\n하위 컴포넌트에서 getContext 함수로 컨텍스트 객체를 가져오면 됨. \n\n```html\n<script>\n  import { getContext, hasContext } from \"svelte\";\n  let num;\n  \n  if(hasContext(\"num\")) {\n    num = getContext(\"num\");\n  }\n</script>\n\n<h1>Context: {num}</h1>\n```\n\n### Event\n\nHTML DOM 이벤트\n* HTML DOM 이벤트 종류는 [https://www.w3schools.com/jsref/dom_obj_event.asp](https://www.w3schools.com/jsref/dom_obj_event.asp) 참고\n* HTML DOM 이벤트는 `on:` 지시자로 이벤트 처리 함수를 지정하여 처리. 이 이벤트 처리 함수는 이벤트 객체를 처리함.\n* `on:` 지시자를 여러 번 사용하면 여러 개의 이벤트 처리 함수 지정이 가능\n\n```html\n<script>\n  let count = 0;\n  \n  /* 이벤트 처리 함수 */\n  const handleCount = () => count = count + 1;\n  const handleEvent = (e) => console.log(e.target);\n</script>\n\n<!-- on 지시자로 이벤트 처리 함수 지정. -->\n<button on:click={handleCount} on:click={handleEvent}>Click ({count})</button>\n```\n\n이벤트 처리 함수를 사용하지 않고 HTML에 스크립트를 삽입하여 이벤트를 처리할 수도 있음(인라인 이벤트 처리)\n\n```html\n<script>\n  let count = 0;\n</script>\n\n<h1>{count}</h1>\n<button on:click={(e) => count = count + 1 }>Count</button>\n```\n\n이벤트 제한자는 `on` 지시자 뒤에 붙어 추가 동작을 정의하는 것. 이벤트 이름 뒤에 파이프 기호(`|`)를 붙여 사용함.\n\n| 제한자 | 설명 |\n| --- | --- |\n| preventDefault | 엘리먼트의 기본 이벤트 동작을 무시함 |\n| stopPropagation | 상위 엘리먼트로 이벤트가 전달되지 않도록 함 |\n| once | 이벤트 처리 함수가 한 번만 실행되도록 함 |\n\n```html\n<script>\n  let count = 0;\n</script>\n\n<!-- 버튼이 한 번만 동작함 --->\n<h1>{count}</h1>\n<button on:click|once={(e) => count = count + 1 }>Count</button>\n```\n\n`on` 지시자는 커스텀 이벤트 처리도 가능하며, 하위 컴포넌트에서 발생한 이벤트를 상위 컴포넌트로 넘겨주는 것도 가능함.\n\n```html\n<!-- Child.svelete: 커스텀 이벤트를 보낼 하위 컴포넌트 -->\n<script>\n  // 1. 상위 컴포넌트로 커스텀 이벤트를 전달하기 위한 dispatch 생성\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n  \n  // 2. 상위 컴포넌트로 커스텀 이벤트를 전달하는 함수(커스텀 이벤트 명, 전달할 데이터)\n  function handleChildButton() {\n    dispatch(\"childButtonClicked\", { text: \"Child button clicked.\" });\n  }\n</script>\n\n<!-- 3. HTML 엘리먼트에 커스텀 이벤트 처리 함수 부착 -->\n<button on:click={handleChildButton}>Click!</button>\n```\n\n```html\n<!-- App.svelte: 커스텀 이벤트를 받을 상위 컴포넌트 -->\n<script>\n  import Child from \"./Child.svelte\";\n  \n  // 4. 하위 컴포넌트가 보내온 이벤트를 처리하는 함수\n  const handleChildEvent = (e) => {\n    alert(e.detail.text);\n  }\n</script>\n\n<Child on:childButtonClicked={handleChildEvent} />\n```\n\n\n## 🛍️ Store\n\n스토어는 같은 스벨트 애플리케이션에 속한 컴포넌트끼리 데이터를 공유하기 위한 방식.\n\n### Store 사용 과정\n\n* 구독 사용: subscribe 함수를 사용하거나, 스토어 이름 앞에 `$`를 붙이면 자동 구독됨.\n* 스토어 값 변경: set 또는 update 함수 사용\n* 스토어 값 조회: get 함수를 사용하거나, 스토어 이름 앞에 `$`를 붙여 접근\n* 구독 종료: unsubscribe 함수 사용\n\n### Writable Store\n\n어떤 컴포넌트에서든지 자유롭게 읽고 쓸 수 있는 스토어\n\n```javascript\n/* store.js */\n\nimport { writable } from \"svelte/store\";\n\n// 1. Writable을 사용하여 변수 초기값 설정\n// 초기값은 숫자, 문자, 배열, 객체 등 자유롭게 설정 가능\nexport const count = writable(0);\n\nconsole.log(\"Writable Store 생성 완료.\", count);\n```\n\n```html\n<!-- App.svelte -->\n\n<script>\n  import { onDestroy } from \"svelte\";\n  import { count } from \"./store.js\";\n\n  let buttonCount;\n  const handleButton = () => {\n    buttonCount = buttonCount + 1;\n  }\n\n  // 2. Store 구독\n  //  * subscribe 함수는 변수 값 변경 여부를 감지 후 콜백 함수를 실행함\n  //  * 매개변수는 누군가가 변경한 스토어 값\n  const unsubscribe = count.subscribe((v) => {\n    buttonCount = v;\n    console.log(\"count 값이 변경되었습니다.\", v);\n  });\n\n  // 3. Store 변경\n  $: count.set(buttonCount);\n\n  // 4. Store 구독 종료\n  onDestroy(unsubscribe);\n</script>\n\n<h1>{buttonCount}</h1>\n<button on:click={handleButton}>Count</button>\n```\n\n자동 구독하려면 스토어 이름 앞에 `$`를 붙여 사용하면 됨.\n\n```html\n<script>\n  import { count } from \"./store.js\";\n\n  // 스토어 이름 앞에 $를 붙여 사용하면 자동 구독됨\n  const handleButton = () => $count = $count + 1;\n</script>\n\n<h1>{$count}</h1>\n<button on:click={handleButton}>Count</button>\n```\n\n### Readable 스토어\n\n읽기만 가능한 스토어. subscribe 함수는 제공하지만 update 및 set 함수는 제공하지 않음.\n\n```javascript\n/* store.js */\n\nimport { readable } from \"svelte/store\";\n\n// 1. Readable Store 생성\n//  * readable 함수의 첫번째 매개변수는 스토어의 초기값\n//  * readable 함수의 두번째 매개변수는 구독 시 호출되는 콜백함수\n//   - 이 콜백함수는 스토어를 업데이트하는 set 함수를 파라미터로 받음\n//   - 이 콜백함수는 구독이 종료될 때 호출되는 stop 함수를 반환함\nexport const time = readable(new Date(), function start(set) {\n  console.log(\"Readable Store 구독 시작.\");\n\n  // 1초 간격으로 시간 갱신\n  const interval = setInterval(() => {\n    set(new Date());\n  }, 1000);\n\n  return function stop() {\n    console.log(\"Readable Store 구독 종료.\");\n    clearInterval(interval);\n  }\n});\n\nconsole.log(\"Readable Store 생성 완료.\", time);\n```\n\n```html\n<script>\n  import { time } from \"./store.js\";\n</script>\n\n<h1>현재 시간: {$time}</h1>\n```\n\n### Derived Store\n\n기존 스토어 값으로 다른 값을 자동으로 만들기 위한 스토어\n\n```javascript\n/* store.js */\n\nimport { writable, derived } from \"svelte/store\";\n\nexport const num = writable(2);\n\n// Derived Store 생성\n//  * derived 함수의 첫 번째 파라미터는 원본 스토어\n//  * derived 함수의 두 번째 파라미터는 무기명 함수(원본 스토어가 변경될 때마다 호출할 콜백 함수)\nexport const sqrt1 = derived(num, $num => Math.sqrt($num));\n\n// derived 함수에서 사용하는 무기명 함수의 매개변수가 2개인 경우\n// * 첫 번째 매개변수: 스토어 값\n// * 두 번째 매개변수: set 함수(새롭게 계산된 값을 derived 스토어에 저장하는 함수)\nexport const sqrt2 = derived(num, ($num, set) => {\n  set(Math.sqrt($num));\n  return () => {\n    // 실행이 종료되었을 때 실행할 코드\n  };\n});\n```\n\n```html\n<script>\n  import { num, sqrt1, sqrt2 } from \"./store.js\";\n</script>\n\n<main>\n  <h1>{$num}의 제곱근은 {$sqrt1}입니다.</h1>\n  <h1>{$num}의 제곱근은 {$sqrt2}입니다.</h1>\n</main>\n```\n\n### Store 값에 접근하는 여러 가지 방법\n\n1. `$<STORE_NAME>` 으로 접근\n2. subscribe의 콜백함수에서 넘겨받는 인자로 접근\n3. get() 함수를 사용하여 접근.\n  * 1, 2번째 방법은 변경사항을 실시간으로 알 수 있는 리액티브한 방법으로, 시스템 자원을 필요로 함\n  * 특정 시점에만 스토어 값에 접근한다면 get() 함수를 쓰는 걸 추천\n\n```html\n<script>\n  import { num } from \"./store.js\";\n  import { get } from \"svelte/store\";\n</script>\n\n\n<h1>1. `$STORE_NAME`으로 스토어 객체에 접근하는 경우</h1>\n<p>num의 값은 {$num}입니다.</p>\n\n<h1>2. subscribe의 콜백 함수에서 넘겨 받는 매개변수로 스토어 값에 접근하는 경우</h1>\n<p>이건 subscribe 함수 내에서 접근해야 함...</p>\n\n<h1>3. get 함수를 사용하여 접근하는 경우</h1>\n<p>num의 값은 {get(num)}입니다.</p>\n```\n\n\n## 특수 엘리먼트\n\n특수 엘리먼트는 `<svelte:ELEMENT_NAME>` 형태로 HTML 블록에 사용할 수 있는 엘리먼트\n\n### svelte:self\n\n자기 자신을 재귀 형태로 임포트할 때 사용\n\n### svelte:component\n\n하위 컴포넌트를 동적으로 렌더링할 때 사용\n\n```html\n<script>\n  import Child1 from \"./Child1.svelte\";\n  import Child2 from \"./Child2.svelte\";\n\n  const lists = [\n    { mode: \"Child1\", component: Child1 },\n    { mode: \"Child2\", component: Child2 }\n  ];\n\n  let current = lists[0];\n  let text = \"Svelte\";\n</script>\n\n<select bind:value={current}>\n  {#each lists as list}\n    <option value={list}>{list.mode}</option>\n  {/each}\n</select>\n\n<!-- 선택된 옵션에 따라 하위 컴포넌트가 달리 렌더링됨 -->\n<!-- current.component를 렌더링하고, content Props를 전달 -->\n<svelte:component this={current.component} content={text}/>\n```\n\n### svelte:window\n\n* window 객체에 직접 접근하지 않고도 이벤트와 속성값 바인딩을 할 때 사용\n* svelte:window 엘리먼트는 최상위 컴포넌트에서만 사용 가능함\n\n```html\n<script>\n  let innerWidth;\n  let innerHeight;\n  let outerWidth;\n  let outerHeight;\n  let scrollX;\n  let scrollY;\n  let online;\n\n  function handleKeydown(e) {\n    alert(e.key + \"키를 누르셨군요.\");\n  }\n</script>\n\n<svelte:window bind:innerWidth bind:innerHeight bind:outerWidth bind:outerHeight bind:scrollX bind:scrollY bind:online on:keydown={handleKeydown} />\n\n<p>브라우저 콘텐츠 영역의 가로 픽셀 크기(읽기 전용): {innerWidth}</p>\n<p>브라우저 콘텐츠 영역의 세로 픽셀 크기(읽기 전용): {innerHeight}</p>\n<p>브라우저의 가로 픽셀 크기(읽기 전용): {outerWidth}</p>\n<p>브라우저의 세로 픽셀 크기(읽기 전용): {outerHeight}</p>\n<p>수평 방향으로 스크롤한 픽셀 값: {scrollX}</p>\n<p>수직 방향으로 스크롤한 픽셀 값: {scrollY}</p>\n<p>브라우저 온라인 상태 여부: {online}</p>\n```\n\n### svelte:body\n\n자바스크립트에서 document.body 객체에 접근하여 이벤트 리스너를 등록할 때 사용하는 엘리먼트\n\n```html\n<script>\n  let message = \"마우스가 어디 갔어요...?\";\n\n  function handleMouseLeave() {\n    message = \"마우스가 어디 갔어요...?\";\n  }\n\n  function handleMouseEnter() {\n    message = \"마우스 포인터 발견!\";\n  }\n</script>\n\n\n<!-- body 영역에 마우스를 옮기거나 바깥 영역으로 이동하면 메시지가 바뀜 -->\n<svelte:body \n  on:mouseleave={handleMouseLeave}\n  on:mouseenter={handleMouseEnter}\n/>\n\n<h1>{message}</h1>\n```\n\n### svelte:head\n\nMeta, Link, Title 등의 하위 엘리먼트를 제어할 때 사용하는 엘리먼트\n\n```html\n<svelte:head>\n  <title>svelte:head로 Title 설정</title>\n  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css\" integrity=\"sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi\" crossorigin=\"anonymous\">\n  <meta http-equiv=\"속성값\" content=\"속성값\" name=\"속성값\" />\n</svelte:head>\n```\n\n### svelte:options\n\n* 스벨트 컴파일러가 참고할 옵션 지정할 때 사용\n* immutable 옵션: 값이 변경된 컴포넌트만 동작하게 하여 다른 컴포넌트의 불필요한 반응성을 줄이는 옵션\n* accessors 옵션: 컴포넌트의 내부 데이터를 외부에서 직접 접근 허용 여부 설정. 기본 값은 False.\n\n```html\n<svelte:options immutable={true} accessors={true} />\n\n<script>\n  // 대충 자바 스크립트 코드\n</script>\n```"},{"excerpt":"🤔 가상화폐 포지션을 자동으로 잡아주는 프로그램은 만들 수 없을까? 주식이나 가상화폐의 대표적인 보조지표로 거래량, RSI 및 볼린저밴드 등이 있습니다. 흔히 보조지표를 사용하여 가상화폐 포지션을 잡는 시점을 알아내곤 합니다. 그렇다면 보조지표가 과매수/과매도 상태임을 가리키는 순간 자동으로 가상화폐 포지션을 잡아주는 프로그램을 만들어보면 어떨까 싶지만.…","fields":{"slug":"/coin/making-cryptocurrency-position-prediction-alarm/"},"frontmatter":{"date":"September 12, 2022","title":"가상화폐 포지션 진입 예상시점 알리미 만들어 보기","description":"가상화폐 포지션 진입 예상시점 알리미 만들어 보기","tags":["bitcoin"],"series":"비트코인","previewImage":"bitcoin.jpg","isPrivate":null},"rawMarkdownBody":"\n![](./images/ant_buy.jpg)\n\n## 🤔 가상화폐 포지션을 자동으로 잡아주는 프로그램은 만들 수 없을까?\n\n주식이나 가상화폐의 대표적인 보조지표로 거래량, RSI 및 볼린저밴드 등이 있습니다. 흔히 보조지표를 사용하여 가상화폐 포지션을 잡는 시점을 알아내곤 합니다. 그렇다면 보조지표가 과매수/과매도 상태임을 가리키는 순간 자동으로 가상화폐 포지션을 잡아주는 프로그램을 만들어보면 어떨까 싶지만...\n\n> 거래량은 무엇보다 가장 중요한 보조지표입니다. 평균 거래량보다 3배 이상 터졌을 때 포지션을 자동으로 잡는다고 가정해봅시다. 이 경우 거래량이 그보다 훨씬 더 터지면서 패닉셀/패닉바잉이 발생하면 큰 손해를 볼 수 있습니다.\n\n> 흔히 RSI 값이 30 이하면 과매도, 70 이상이면 과매수 상태로 봅니다. 추세가 전환될 것을 예상하고 RSI 30 이하일 때 롱 포지션, 70 이상일 때 숏 포지션을 자동으로 잡는다고 가정해봅시다. \n>\n>이 경우 롱 포지션을 자동으로 잡았는데 RSI 값이 한자리 수까지 떨어지거나, 숏 포지션을 자동으로 잡았는데 RSI 값이 90이 넘게 치솟으면 막대한 손해를 볼 수 있습니다.\n\n> 볼린저 밴드에서 사용하는 %B 값이 0 이하면 과매도, 1 이상이면 과매수 상태로 봅니다. 추세가 전환될 것을 예상하고 %B 값이 1을 상향돌파하는 순간 숏 포지션, 0을 하향돌파하는 순간 롱 포지션을 잡는다고 가정하더라도 위의 RSI 사례와 비슷하게 손해를 볼 수 있습니다.\n\n![](./images/badak_of_badak.jpg)\n\n피보나치나 지지저항선 등을 자동으로 계산해주는 프로그램을 만들어보면 어떨까 싶기도 하지만... 이것들도 맹신하면 큰 손실이 발생하며 물릴 수 있으므로 포지션을 자동으로 잡아주는 프로그램을 만드는 건 매우 힘들어보입니다.\n\n따라서 가상화폐 보조지표가 과매수/과매도임을 가리키는 순간 프로그램을 통해 알림을 받고, 이후 포지션 진입 각(?)을 직접 재는 게 가장 좋은 방법인 것 같습니다. \n\n## ₿ 보조지표 값 계산하기\n\n여기서는 거의 대부분의 가상화폐 거래소 API를 쉽게 사용하도록 도와주는 ccxt 파이썬 라이브러리를 사용하여 보조지표가 과매수/과매도 상태를 가리키는 시점을 계산하는 파이썬 코드를 만들어보겠습니다. 사용하는 가상화폐 거래소는 바이낸스입니다.\n\n### CCXT로 OHLCV 값 얻어오기\n\nOHLCV는 시가(Open), 고가(High), 저가(Low), 종가/현재가(Close), 거래량(Volume) 입니다. ccxt의 fetch_ohlcv() 함수를 사용하여 OHLCV 리스트 데이터를 얻어올 수 있습니다.\n\n```python\nimport ccxt\n\nbinance = ccxt.binance()\n\n# BTC/USDT 5분봉 최근 5개 캔들 데이터 얻어온 후 출력\nohlcvs = binance.fetch_ohlcv(\"BTC/USDT\", \"5m\", limit=5)\nprint(ohlcvs)\n```\n\n위 코드를 실행하면 비트코인 5분봉 최근 5개 캔들 데이터에 대한 유닉스시간, 시가(Open), 고가(High), 저가(Low), 종가(Close) 및 거래량(Volume) 데이터가 출력됩니다.\n\n```shell\n# python3 test.py\n[\n[1662905100000, 21548.66, 21556.61, 21534.59, 21553.03, 799.58521], \n[1662905400000, 21552.34, 21568.18, 21545.44, 21561.77, 753.83204], \n[1662905700000, 21562.41, 21567.64, 21480.74, 21500.55, 1210.14678], \n[1662906000000, 21501.21, 21522.06, 21467.53, 21484.46, 1264.75615], \n[1662906300000, 21484.25, 21515.24, 21455.0, 21487.38, 1844.99901]\n]\n```\n\n### 평균 거래량 계산하기\n\n거래량을 모아 평균을 내주면 됩니다. 현재 거래량이 평균 거래량보다 몇 배 이상 차이날 때 포지션 진입 준비를 해볼 수 있습니다.\n\n```python\nimport ccxt\nimport numpy as np\n\ndef get_ccxt_volume_mean(ohlcv_list: list):\n    # 거래량을 모아놓은 numpy 배열 생성\n    volume_array = []\n    for ohlcv in ohlcv_list:\n        volume_array.append(ohlcv[5])\n    volume_np_array = np.array(volume_array)\n\n    # 거래량 평균 반환\n    return volume_np_array.mean()\n\nbinance = ccxt.binance()\n\n# 5분봉 최근 캔들 70개에 대한 평균 거래량 계산 후 출력\nohlcvs = binance.fetch_ohlcv(\"BTC/USDT\", \"5m\", limit=70)\nvolume_mean = get_ccxt_volume_mean(ohlcvs)\nprint(volume_mean)\n```\n\n거래량 평균을 계산하는 함수는 OHLCV 리스트 데이터를 매개변수로 받는 방식으로 작동합니다. 함수 안에서 OHLCV 리스트 데이터를 직접 가져오게끔 만들어도 되지만, 이렇게 하면 하나의 프로그램에서 함수를 여러 번 호출할 때 OHLCV 리스트를 여러 번 가져오게 되므로 효율이 떨어지고 작동 속도도 느려집니다. \n\n아래에서 설명할 함수들도 위와 같은 방식으로 작동합니다.\n\n### 볼린저 밴드 계산하기\n\n볼린저 밴드에 사용하는 값은 중심선, 상한선, 하한선 및 %B 입니다. 계산식은 다음과 같습니다.\n* 중심선: 캔들 20개의 종가에 대한 이동평균\n* 상한선: 중심선 + (캔들 20개에 대한 표준편차) * 2\n* 하한선: 중심선 - (캔들 20개에 대한 표준편차) * 2\n* %B: (현재가 - 하한선) / (상한선 - 하한선)\n\n현재 %B 값이 1 이상이면 숏 포지션, 0 이하면 롱 포지션 진입 준비를 해볼 수 있습니다.\n\n```python\nimport ccxt\nimport numpy as np\n\ndef get_ccxt_bb(ticker: str, ohlcv_list: list, multiplier: int = 2):\n    # 종가를 모아놓은 numpy 배열 생성\n    close_array = []\n    for ohlcv in ohlcv_list:\n        close_array.append(ohlcv[4])\n    close_np_array = np.array(close_array)\n\n    # 볼린저 밴드에 사용되는 값들 계산\n    current_price = ohlcv_list[len(ohlcv_list)-1][4]  # 현재가\n    std = close_np_array.std()                        # 종가 기준 표준편차\n    mbb = close_np_array.mean()                       # 볼린저 밴드 중심선(이동평균)\n    ubb = mbb + std * multiplier                      # 상한선 = 중심선 + 기간 내 표준편차 * 승수\n    lbb = mbb - std * multiplier                      # 하한선 = 중신선 + 기간 내 표준편차 * 승수\n    per_b = (current_price - lbb) / (ubb - lbb)       # %b = (현재가 - 하한선) / (상한선 - 하한선)\n\n    # 볼린저 밴드에 사용되는 값들을 딕셔너리 형태로 생성 후 반환\n    dict_bb = {}\n    dict_bb[\"ticker\"] = ticker\n    dict_bb[\"mbb\"] = mbb\n    dict_bb[\"ubb\"] = ubb\n    dict_bb[\"lbb\"] = lbb\n    dict_bb[\"current_price\"] = current_price\n    dict_bb[\"per_b\"] = per_b\n    \n    return dict_bb\n\nbinance = ccxt.binance()\n\n# 현재 5분봉 볼린저 밴드 정보를 얻어온 후 %B 값 출력\nohlcvs = binance.fetch_ohlcv(\"BTC/USDT\", \"5m\", limit=20)\nbb = get_ccxt_bb(\"BTC/USDT\", ohlcvs)\nper_b = bb[\"per_b\"]\nprint(per_b)\n```\n\n### RSI 계산하기\n\nRSI를 계산하는 코드는 [[python] ccxt 사용하여 binance 비트코인 rsi 구하기](https://codereader37.tistory.com/173) 글을 주로 참고했습니다.\n\n현재 RSI 값이 70 이상이면 숏 포지션, 30 이하면 롱 포지션 진입 준비를 해볼 수 있습니다.\n\n```python\nimport ccxt\nimport pandas as pd\n\ndef get_ccxt_rsi(ohlcv_list: list):\n    df = pd.DataFrame(ohlcv_list)\n    rsi = rsi_calc(df, 14).iloc[-1]\n    return rsi\n\ndef rsi_calc(ohlc: pd.DataFrame, period: int = 14):\n    ohlc = ohlc[4].astype(float)\n    delta = ohlc.diff()\n    gains, declines = delta.copy(), delta.copy()\n    gains[gains < 0] = 0\n    declines[declines > 0] = 0\n\n    _gain = gains.ewm(com=(period-1), min_periods=period).mean()\n    _loss = declines.abs().ewm(com=(period-1), min_periods=period).mean()\n\n    RS = _gain / _loss\n\n    return pd.Series(100-(100/(1+RS)), name=\"RSI\")\n\nbinance = ccxt.binance()\n\n# 현재 5분봉 RSI 값을 얻어온 후 출력\nohlcvs = binance.fetch_ohlcv(\"BTC/USDT\", \"5m\", limit=200)\nrsi = get_ccxt_rsi(ohlcvs)\nprint(rsi)\n```\n\n### 캔들크기 계산하기\n\n캔들크기는 보조지표는 아니지만 현재 캔들크기가 평균 캔들크기와 몇 배 이상 차이가 날 때 포지션을 잡는 전략을 세워볼 수 있습니다.\n\n```python\nimport ccxt\nimport numpy as np\n\ndef get_ccxt_candle_len_mean(ohlcv_list: list):\n    # 시가-종가 차이 값을 모아놓은 numpy 배열 생성\n    len_array = []\n    for ohlcv in ohlcv_list:\n        len_array.append(abs(ohlcv[1] - ohlcv[4]))\n    len_np_array = np.array(len_array)\n\n    # 고가-저가 차이 평균값 반환\n    return len_np_array.mean()\n\nbinance = ccxt.binance()\n\n# 현재 5분봉 최근 캔들 70개에 대한 평균 캔들크기 계산 후 출력\nohlcvs = binance.fetch_ohlcv(\"BTC/USDT\", \"5m\", limit=70)\ncandle_len_mean = get_ccxt_candle_len_mean(ohlcvs)\nprint(candle_len_mean)\n```\n\n## 🚨 알림 보내기\n\n보조지표가 과매수/과매도 상태를 가리키는 시점을 계산한 후 알림까지 보내는 전체적인 코드는 [https://github.com/jeon-won/crypto-bot-python-v2](https://github.com/jeon-won/crypto-bot-python-v2) 에서 볼 수 있습니다.\n\n### 알림 사운드 재생\n\nplaysound 패키지를 사용합니다.\n\n```python\nfrom playsound import playsound\n\n# 대충 과매수/과매도 상태를 체크하는 보조지표 계산 코드\n# ...\nIS_ALARM_SOUND = True\n\n# 알림 조건에 부합하면 alarm.mp3 파일 재생\nif(IS_ALARM_SOUND):\n    playsound(\"alarm.mp3\")\n```\n\n### 텔레그램 알림 메시지 전송\n\n텔레그램 봇 토큰과 아이디를 발급받은 후 telegram 패키지를 사용합니다.\n\n```python\nimport telegram\n\nTELEGRAM_TOKEN = \"tElEgRaMtOkEn\"  # 텔레그렘 봇 토큰\nTELEGRAM_CHAT_ID = 000000000      # 텔레그램 봇 아이디\n\nbot = telegram.Bot(TELEGRAM_TOKEN)\n\n# 대충 과매수/과매도 상태를 체크하는 보조지표 계산 코드\n# ...\nIS_ALARM_TELEGRAM = True\n\n# 알림 조건에 부합하면 텔레그램 메시지 전송\nif(IS_ALARM_TELEGRAM):\n    message = f\"비트코인 과매수/과매도 알림\"\n    bot.sendMessage(TELEGRAM_CHAT_ID, text=message)\n```\n\n\n## 📈 포지션은 언제 어떻게 잡나\n\n알림을 받았으면 차트를 분석한 후 포지션을 잡습니다. 단타만 하는 저는 아래 유튜버의 도움을 크게 받고 있습니다.\n* [나씨TV - 비트코인 단타의 모든것](https://www.youtube.com/c/ocllos)\n* [머프TV - 코인단타 교과서](https://www.youtube.com/c/MoneyPrinter)\n* ~~[초강력 보조지표 호두형](https://www.youtube.com/channel/UC9KQaCA_EMobJUxZszQ4wlg)~~"},{"excerpt":"너의 주소는. 여기서 설명하는 은 JEUS가 설치된 경로를 가리킴. 🤔 JEUS란? 티맥스소프트에서 개발한 WAS(Web Application Server) 주로 동적 데이터(JSP, DB연결 등)를 제공하기 위해 사용. 정적 데이터(HTML, 파일 등)도 제공 가능하나 이건 웹서버인 WebtoB에 맡기는 편. 📦 JEUS 구성요소 JEUS는 으로 구성됨…","fields":{"slug":"/web/jeus-8-usage-summary/"},"frontmatter":{"date":"July 08, 2022","title":"JEUS 8 간단 정리","description":"JEUS 8 간단 정리","tags":["web"],"series":"web","previewImage":"web.jpg","isPrivate":null},"rawMarkdownBody":"\n![](./images/cookie_address.jpg)\n\n~~너의 주소는.~~\n\n여기서 설명하는 `$JEUS_HOME`은 JEUS가 설치된 경로를 가리킴. \n\n## 🤔 JEUS란?\n* 티맥스소프트에서 개발한 WAS(Web Application Server)\n* 주로 동적 데이터(JSP, DB연결 등)를 제공하기 위해 사용. 정적 데이터(HTML, 파일 등)도 제공 가능하나 이건 웹서버인 WebtoB에 맡기는 편.\n\n## 📦 JEUS 구성요소\n\nJEUS는 `Domain / Domain Administration Server / Node Manager / Managed Server / Application`으로 구성됨\n\n* Domain: 관련있는 서버들의 그룹이자 기본 관리 단위.\n* DAS(Domain Administration Server): JEUS WebAdmin 접속에 사용되는 관리자용 서버. DAS가 죽더라도 MS가 멀쩡하면 서비스 제공에 아무런 문제가 없음. 노드(서버장비) 여러 대로 이중화를 구성해도 DAS는 하나만 구축함. 둘 이상 구축할 이유가 없음.\n* Node Manager: DAS가 MS를 관리하기 위해 사용하는 프로세스\n* MS(Managed Server): 작업을 수행하는 프로세스, 인스턴스 또는 컨테이너 같은 것. 흔히 서버라고 부름. MS는 여러 개 생성 가능.\n* Application: MS에 의해 제공되는 서비스(HTML, JSP 등)\n\n## 🪪 JEUS 라이선스\n\nJEUS 라이선스 확인은 `$JEUS_HOME/bin/jeusadmin -licenseinfo` 명령어로 확인\n\n* 트라이얼 라이선스는 JEUS 설치 시 기본 적용되는 라이선스. 기간은 무제한이나 접속 수가 최대 5로 제한됨.\n* 데모 라이선스는 2개월 간 사용 가능한 라이선스. [https://technet.tmaxsoft.com](https://technet.tmaxsoft.com/) 회원가입 후 발급 가능.\n* 스탠더드 라이선스는 세션 클러스터링 불가\n* 엔터프라이즈 라이선스는 세션 클러스터링 가능. ~~스탠더드 라이선스 사용중인데 세션 클러스터링이 안 된다는 문의 매우 많다고 함.~~\n\n## 💾 JEUS 설치\n\n테스트에 사용한 서버 OS는 Rocky Linux release 8.5, JAVA는 OpenJDK 1.8.\n\n### JDK 설치\n\n* OpenJDK 1.8을 설치했음에도 JEUS 설치할 때 JDK 1.7 이상의 경로를 선택해야 한다고 뜨는데, 그래도 잘 설치되고 잘 기동되는 것 같음.\n* OpenJDK 1.8 설치 명령어: `dnf install java-1.8.0-openjdk`\n\n### 호스트네임 설정\n\n나중에 라이선스 적용하려면 호스트네임 설정 필요.\n\n```html\n[root@localhost ~]# hostnamectl set-hostname jeustest  # 호스트네임을 jeustest로 설정\n[root@localhost ~]# cat /etc/hostname  # 호스트네임 확인\njeustest\n```\n\n### JEUS 설치파일 다운로드 및 실행\n\n* [https://technet.tmaxsoft.com](https://technet.tmaxsoft.com/ko/front/download/viewDownload.do?cmProductCode=0101&version_seq=PVER-20190227-000001&doc_type_cd=DN#binary) 회원가입 후 다운로드 가능\n* 여기선 JEUS 8 Fix#1을 다운받아 설치해봄\n* 설치파일 실행권한 추가: `chmod u+x jeus8001_unix_generic_ko.bin`\n* 설치파일 실행: `./images/jeus8001_unix_generic_ko.bin`\n\n설치할 때 이것저것 물어보는 것이 많은데, 모두 Default 설정을 했다면 아래와 같이 설정되었을 것임\n\n* Domain Name: jeus_domain\n* DAS Server Name: adminServer\n* JEUS Base Port: 9736\n* Admin User Name: administrator\n* Admin User Password: 너님이 정한 대로...\n\n## ⚙️ DAS, Node Manager, MS 기동 및 종료\n\n아래에서 설명하는 명령어는 `$JEUS_HOME/bin` 경로에서 실행해야 함.\n\n### DAS 기동\n\n* JEUS WebAdmin 접속을 위한 DAS 기동 명령어는 `./images/startDomainAdminServer -domain jeus_domain -u administrator -p PASSWORD`\n* 위 명령어를 매번 치기 귀찮으니  `dsboot.sh` 파일을 만들어 사용하면 편함\n* [http://SERVER_IP:9736/webadmin](http://SERVER_IP:9736/webadmin) 주소로 접속되는지 확인.\n* 만약 접속되지 않는다면 `systemctl stop firewalld` 명령어로 OS 방화벽을 비활성화한 후, `netstat -an | grep 9736` 명령어로 9736번 포트 LISTENING 상태인지 확인. ~~실습용이니 보안 따위...~~\n\n![](./images/jeus_web_login.jpg)\n    \n* ID: administrator / PW: 설정한 값 입력하여 잘 로그인되는지 확인\n\n![](./images/jeus_web_main.jpg)\n\n### Node Manager 기동\n\n* DAS가 MS를 제어하기 위한 Node Manager 기동 명령어는 `./images/startNodeManager`\n* 위 명령어를 실행하면 백그라운드로 실행되지 않으므로 `$JEUS_HOME/bin` 경로에 `nmboot.sh` 파일을 만들어 `nohup ./images/startNodeManager &` 명령어 넣어서 사용하는 게 좋은 듯.\n* JEUS WebAdmin 로그인하여 Node 설정 메뉴에 들어가서 Under Control 값이 Y면 정상 기동된 것\n\n![](./images/jeus_web_nodes.jpg)\n\n### MS 기동\n\n* MS(Managed Server)는 JEUS WebAdmin의 Servers 메뉴에서 생성, 기동 및 종료 가능\n* DAS가 MS를 기동하기 위해 Node Manager가 실행되어 있어야 함\n* MS를 실행한 후 해당 MS 이름을 클릭하고 Resource 탭의 Listener 메뉴에 들어가면 http 리스너 포트가 나타남. 이 포트로 접속되는지 확인.\n\n![](./images/jeus_web.jpg)\n\n\n### MS 생성\n\n기존에 있는 MS를 복제하려면 JEUS WebAdmin의 Servers 메뉴에서 `DUP` 버튼을 클릭하여 복제\n\n* 서버 복제 후 기존 서버와 포트 충돌나지 않도록 서버의 Resource 탭에서 리스너 포트를 변경해야 함\n\n새로운 서버를 생성하려면 JEUS WebAdmin의 Servers 메뉴에서 `ADD` 버튼을 클릭하여 생성하면 됨.\n\n* 서버이름 입력 및 Node Name 선택\n* JVM Option은 필요 시 입력(예: 힙메모리 설정 `-Xms64m -Xmx128m`)\n* Resource 탭에서 리스너 포트 설정 필요. BASE 포트는 필수로 추가해야 하며, HTTP 포트도 추가.\n* Engine 탭의 Web Connections에서 HTTP 연결 추가. Server Listener Ref는 Resource 탭에서 만들었던 HTTP 포트를 선택. Thread Pool Size는 대충 20 정도로 입력.\n\n### MS 종료\n\nJEUS WebAdmin의 Servers 메뉴에서 해당 서버 stop\n\n### Node Manager 종료\n\n* Node Manager 종료 명령어는 `./images/stopNodeManager -properties $JEUS_HOME/nodemanager/jeusnm.xml`\n* 위 명령어를 매번 치기 귀찮으니 `nmdown.sh` 파일을 만들어 사용하면 편함\n\n### DAS 종료\n\n* DAS 종료: `./images/jeusadmin -host SERVER_IP:9736 -domain jeus_domain -u administrator -p PASSWORD \"local-shutdown -to 120”`\n* 위 명령어를 매번 치기 귀찮으니 `dsdown.sh` 파일을 만들어 사용하면 편함\n\n## 📱 애플리케이션 배포\n\n위에서 만든 MS를 켠 후 MS의 HTTP 리스너 포트로 접속하면 HTTP 404 에러가 발생함. MS가 뭘 서비스해야 할지 명시하지 않았기 때문.\n\n아무 경로에 myjeusapp 이라는 디렉터리를 만든 후 그 안에 index.html 파일을 만들고 다음과 같이 작성\n\n```html\n<html>\n<head></head>\n<body>Hello JEUS!</body>\n</html>\n```\n\nJEUS WebAdmin의 Applications 메뉴에서 deploy 버튼 클릭\n\n* ID는 대충 입력, Path는 경로 입력, Target Server는 위에서 만든 MS 선택, Context Path는 / 입력\n\nMS의 HTTP 리스너 포트로 접속하면 Hello JEUS! 가 보일 것임. JSP를 아예 몰라서 HTML로 테스트함...\n\nWAR(Web Application aRchive)도 JEUS WebAdmin의 Applications 메뉴에서 MS로 배포함\n\n## ⬇️ 리소스 추가\n\n예를 들어, JEUS와 DB를 연동하려면 JDBC 드라이버를 리소스로 추가해줘야 함.\n\n* `$JEUS_HOME/lib/datasource` 경로에 JDBC jar 파일 복사\n* 추가된 리소스를 인식하기 위해 DAS 재기동\n* JEUS WebAdmin의 Resource 메뉴 → DataSource 메뉴에서 JDBC jar 추가\n\n참고로 WAS는 DB와 직접 연동하지 않고 JDBC 드라이버를 통해 연동하므로, 둘이 서로 호환되는지를 알아보려면 둘 다 호환 가능한 JDBC 드라이버 버전이 있는지를 확인해야 함(JEUS 8은 JDBC 드라이버 4.0 버전과 호환됨).\n\n## 📝 로그\n\n### 로그 경로\n\n`$JEUS_HOME/domains/DOMAIN_NAME/servers` 경로에 각각의 MS 로그가 저장됨.\n\n### 로그 파일\n\n* 아래 `$SERVER_HOME`은 `$JEUS_HOME/domains/DOMAIN_NAME/servers` 경로에 있는 각 MS의 경로를 가리킴\n* `$SERVER_HOME/logs/servlet/access.log` : 웹 애플리케이션(사용자) 요청에 대한 접근 로그\n* `$SERVER_HOME/logs/JeusLauncher.log`: 서버 기동 로그\n* `$SERVER_HOME/logs/JeusServer.log`: 서버에서 로깅하는 기본 로그\n* `$SERVER_HOME/logs/jvm.log`: 서버 JVM에서 발생하는 로그 메시지\n\n### 로그 형식\n\n로그 형식은 `[시간] [레벨] [Thread 정보] [로그 메시지 ID] [로그 메시지]`\n\n* 기본 레벨은 2(INFO). 5 이상 설정 시 로그가 과도하게 쌓임.\n* 장애 발생 시 티맥스 엔지니어 분께 로그 메시지 ID를 알려드리면 빠른 안내를 받을 수 있다고 함."},{"excerpt":"이미지: 클리앙 - 독보적이었던 그의 업적을 기억하며.JPG 🤔 문제 2022년 6월 15일부터 인터넷 익스플로러(IE) 지원이 종료됨에 따라 IE로만 접속해야 하는 시스템을 걷어내거나 엣지 브라우저에서 제공하는 IE 모드를 사용해야 합니다. 문제는 전자는 돈돈돈... 이고 후자는 사용자가 30일에 한 번씩 IE 모드 설정을 해줘야 한다는 것입니다. 윈도…","fields":{"slug":"/web/edge-browser-ie-mode-setting/"},"frontmatter":{"date":"July 03, 2022","title":"윈도우 엣지 브라우저의 인터넷 익스플로러 모드 무기한 설정","description":"윈도우 엣지 브라우저의 인터넷 익스플로러 모드 무기한 설정","tags":["web"],"series":"web","previewImage":"web.jpg","isPrivate":null},"rawMarkdownBody":"\n![](./images/ie-tombstone.jpg)\n\n이미지: [클리앙 - 독보적이었던 그의 업적을 기억하며.JPG](https://www.clien.net/service/board/park/17331335)\n\n## 🤔 문제\n\n2022년 6월 15일부터 인터넷 익스플로러(IE) 지원이 종료됨에 따라 IE로만 접속해야 하는 시스템을 걷어내거나 엣지 브라우저에서 제공하는 IE 모드를 사용해야 합니다.\n\n문제는 전자는 돈돈돈... 이고 후자는 사용자가 30일에 한 번씩 IE 모드 설정을 해줘야 한다는 것입니다. 윈도우 10 PC에서 아래와 같이 무기한으로 설정하는 방법이 있긴 하지만...\n\n1. IE 모드로 접속할 사이트 정보를 명시한 XML 파일 생성\n2. [마이크로소프트 홈페이지](https://www.microsoft.com/ko-kr/edge/business/download)에서 정책 파일 다운로드 받아 압축 풀기\n3. 압축 풀어서 생성된 파일을 아래 경로로 복사\n\t* `msedge.admx` → `C:\\Windows\\PolicyDefinitions`\n    * `msedge.adml` → `C:\\Windows\\PolicyDefinitions\\ko-KR` \n4. 로컬 그룹 정책 편집기 `gpedit.msc`를 실행하여 아래 두 정책 설정\n\t* Internet Explorer 통합 구성: 사용\n    * 엔터프라이즈 모드 사이트 목록 구성: XML 파일 경로\n\n위 설정을 일반 사용자들에게 직접 하라고 시키면 잘 안 될 가능성이 클 것입니다.\n\n![](./images/why_engineer_salary.jpg)\n\n\n## 💡 해결법\n\n그래서 엣지 브라우저 IE 모드를 활성화하도록 레지스트리를 수정하는 배치파일을 만들어 사용자들에게 배포한 후 실행하게 하면 간단하게 해결되지 않을까 싶습니다.\n\n1. 윈도우 10 20H2 버전 이상, 엣지 브라우저 93 버전 이상으로 업데이트 합니다.\n\n2. IE 모드로 접속할 사이트를 명시한 XML 파일을 아래와 같이 만든 후 웹 서버에 업로드하거나 특정 로컬 경로에 저장합니다. url 속성 값에 아스테리스크(`*`)는 사용할 수 없습니다.\n\n```xml\n<site-list version=\"1\">\n  <created-by>\n    <tool>EMIESiteListManager</tool>\n    <version>12.0.0.0</version>\n    <date-created>01/01/2022 05:51:35</date-created>\n  </created-by>\n  <site url=\"192.168.1.1\"> <!-- IE 모드로 접속할 사이트 IP -->\n    <compat-mode>Default</compat-mode>\n    <open-in>IE11</open-in>\n  </site>\n  <site url=\"www.iemode.co.kr\"> <!-- 또는 URL 입력 -->\n    <compat-mode>Default</compat-mode>\n    <open-in>IE11</open-in>\n  </site>\n</site-list>\n```\n\n3. 엣지 브라우저 IE 모드가 활성화되도록 레지스트리를 수정합니다.\n\n4. [마이크로소프트 홈페이지](https://www.microsoft.com/ko-kr/edge/business/download)에서 정책 파일을 다운로드 받아 압축을 풀어서 나온 `msedge.admx` 파일과 `msedge.adml` 파일을 Windows 내 특정 폴더로 복사합니다\n\n5. 정책 설정을 업데이트합니다.\n\n위 과정을 배치파일(bat)로 만들면 다음과 같습니다.\n\n```shell\n@echo off\n\nset IEModeInstallPath=%~dp0\n\necho 엣지 브라우저 IE Mode 패치를 설치합니다.\n\necho.\necho 1. IE Mode 설정 적용 중...\n\necho 1-1) Internet Explorer 모드 설정 중...\nreg add HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Edge /v InternetExplorerIntegrationLevel /t reg_dword /d 1 /f\n\necho 1-2) Internet Explorer 모드 사이트 목록 구성 중...\nreg add HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Edge /v InternetExplorerIntegrationSiteList /t reg_sz /d \"http://192.168.1.1/IEModeSiteList.xml\" /f\n\n\necho.\necho 2. 엣지 브라우저 정책 파일 복사 중...\ncd %IEModeInstallPath%\ncopy /y msedge.admx \"C:\\Windows\\PolicyDefinitions\"\ncopy /y msedge.adml \"C:\\Windows\\PolicyDefinitions\\ko-KR\"\n\necho.\necho 3. 변경된 정책 업데이트 중...\ngpupdate /force\n\necho.\necho 4. 완료!\n\npause\n```\n\n아래는 선택사항으로, 필요한 경우 배치파일(bat)에 추가하여 실행하면 됩니다.\n\n```shell\necho 사이트 목록 갱신 주기를 240분으로 설정 중...\nreg add HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Edge /v InternetExplorerIntegrationSiteListRefreshInterval /t reg_dword /d 240 /f\n\necho IE모드 활성화된 상태에서, 사이트 목록에 구성 안 된 사이트들도 IE 모드로 접속되도록 설정 중...\nreg add HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Edge /v InternetExplorerIntegrationSiteRedirect /t reg_dword /d 2 /f\n\necho 모든 사이트에서 팝업을 표시하도록 허용 설정 중...\nreg add HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Edge /v DefaultPopupsSetting /t reg_dword /d 1 /f\n\necho 엣지 브라우저를 기본 브라우저로 설정 중...\nreg add HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\Shell\\Associations\\UrlAssociations\\http\\UserChoice /v ProgId /t reg_sz /d MSEdgeHTM /f\nreg add HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\Shell\\Associations\\UrlAssociations\\https\\UserChoice /v ProgId /t reg_sz /d MSEdgeHTM /f\n```\n\n정책이 잘 적용됐는지 확인하려면, 엣지 브라우저 주소창에 `edge:policy` 입력 후 접속하여 `InternetExplorerIntegrationLevel` 및 `InternetExplorerIntegrationSiteList` 정책이 잘 나타나는지 확인합니다.\n\nIE 모드로 사이트가 열리지 않는다면, 엣지 브라우저 주소창에 `edge:compat` 입력 후 접속한 다음, `업데이트 강제 적용` 버튼을 클릭하여 IE 모드로 접속할 도메인이 잘 나타나는지 확인합니다.\n\n\n## 📎 참고 사이트\n\n* [Microsoft Edge 브라우저 정책 설명서 | Microsoft Docs](https://docs.microsoft.com/ko-kr/deployedge/microsoft-edge-policies)\n* [Enable IE Mode and use a Site List in Edge Chromium with Microsoft Endpoint Manager](https://byteben.com/bb/enable-ie-mode-and-use-a-site-list-in-edge-chromium-with-microsoft-endpoint-manager/)"},{"excerpt":"🤔 yt-dlp란? 유튜브 외 여러 사이트의 동영상을 다운로드하는 CLI 기반 소프트웨어 지원하는 사이트 목록: https://github.com/yt-dlp/yt-dlp/blob/master/supportedsites.md 💻 설치법(MacOS) https://brew.sh/index_ko 를 참고하여 Homebrew 설치  명령어로 yt-dlp 설치 …","fields":{"slug":"/video/how-to-use-yt-dlp/"},"frontmatter":{"date":"July 03, 2022","title":"yt-dlp 사용법 간단 정리","description":"yt-dlp 사용법 간단 정리","tags":["video"],"series":"비디오 편집","previewImage":"video.jpg","isPrivate":null},"rawMarkdownBody":"\n![](./images/yt_dlp.png)\n\n## 🤔 yt-dlp란?\n\n* 유튜브 외 여러 사이트의 동영상을 다운로드하는 CLI 기반 소프트웨어\n* 지원하는 사이트 목록: [https://github.com/yt-dlp/yt-dlp/blob/master/supportedsites.md](https://github.com/yt-dlp/yt-dlp/blob/master/supportedsites.md)\n\n\n## 💻 설치법(MacOS)\n\n1. [https://brew.sh/index_ko](https://brew.sh/index_ko) 를 참고하여 Homebrew 설치\n2. `brew install yt-dlp/taps/yt-dlp` 명령어로 yt-dlp 설치\n\n\n## 📥 기본적인 사용 방법\n\n`yt-dlp -f bestvideo+bestaudio URL` 명령어를 사용하면 최상 옵션으로 알아서 동영상을 다운로드 해줌\n\n\n## ⚙️ 원하는 포맷으로 다운로드\n\n* 위의 방법을 사용하면 원하는 동영상 포맷(컨테이너, 해상도, 코덱 등)으로 다운로드가 안 될 수 있음 \n* `yt-dlp -F URL` 명령어를 사용하면 다운로드 가능한 포맷 목록을 보여줌\n* 목록을 보고 원하는 비디오 및 오디오 포맷 ID를 메모한 후 `yt-dlp -f VIDEO_ID+AUDIO_ID URL` 명령어를 실행하면 원하는 포맷으로 동영상을 다운로드 해줌\n\n```shell\n# 다운로드 가능한 동영상 포맷 목록 출력\n> yt-dlp -F https://youtu.be/dOwNlO@D_Url\n[youtube] dOwNlO@D_Url: Downloading webpage\n[youtube] dOwNlO@D_Url: Downloading android player API JSON\n[info] Available formats for dOwNlO@D_Url:\nID  EXT   RESOLUTION FPS │   FILESIZE  TBR PROTO │ VCODEC       VBR ACODEC      ABR     ASR MORE INFO\n──────────────────────────────────────────────────────────────────────────────────────────────────────────────\nsb2 mhtml 48x27          │                 mhtml │ images                                   storyboard\nsb1 mhtml 80x45          │                 mhtml │ images                                   storyboard\nsb0 mhtml 160x90         │                 mhtml │ images                                   storyboard\n139 m4a   audio only     │    8.74MiB  48k https │ audio only       mp4a.40.5   48k 22050Hz low, m4a_dash\n249 webm  audio only     │    9.00MiB  50k https │ audio only       opus        50k 48000Hz low, webm_dash\n250 webm  audio only     │   10.73MiB  59k https │ audio only       opus        59k 48000Hz low, webm_dash\n140 m4a   audio only     │   23.19MiB 129k https │ audio only       mp4a.40.2  129k 44100Hz medium, m4a_dash\n251 webm  audio only     │   19.86MiB 110k https │ audio only       opus       110k 48000Hz medium, webm_dash\n17  3gp   176x144      8 │    9.68MiB  54k https │ mp4v.20.3    54k mp4a.40.2    0k 22050Hz 144p\n160 mp4   256x144     30 │    2.92MiB  16k https │ avc1.4d400c  16k video only              144p, mp4_dash\n278 webm  256x144     30 │    5.54MiB  30k https │ vp9          30k video only              144p, webm_dash\n133 mp4   426x240     30 │    5.53MiB  30k https │ avc1.4d4015  30k video only              240p, mp4_dash\n242 webm  426x240     30 │    8.12MiB  45k https │ vp9          45k video only              240p, webm_dash\n134 mp4   640x360     30 │    9.64MiB  53k https │ avc1.4d401e  53k video only              360p, mp4_dash\n18  mp4   640x360     30 │   48.09MiB 268k https │ avc1.42001E 268k mp4a.40.2    0k 44100Hz 360p\n243 webm  640x360     30 │   19.42MiB 108k https │ vp9         108k video only              360p, webm_dash\n135 mp4   854x480     30 │   14.03MiB  78k https │ avc1.4d401f  78k video only              480p, mp4_dash\n244 webm  854x480     30 │   27.93MiB 155k https │ vp9         155k video only              480p, webm_dash\n136 mp4   1280x720    30 │   19.70MiB 109k https │ avc1.4d401f 109k video only              720p, mp4_dash\n22  mp4   1280x720    30 │ ~ 43.83MiB 238k https │ avc1.64001F 238k mp4a.40.2    0k 44100Hz 720p\n247 webm  1280x720    30 │   52.02MiB 290k https │ vp9         290k video only              720p, webm_dash\n137 mp4   1920x1080   30 │   58.83MiB 328k https │ avc1.640028 328k video only              1080p, mp4_dash\n248 webm  1920x1080   30 │  101.44MiB 566k https │ vp9         566k video only              1080p, webm_dash\n\n# mp4(1080p) 비디오 + m4a 오디오 포맷으로 동영상 다운로드\n# (위 리스트를 보면 mp4 1080p 비디오 ID는 137, m4a 오디오 ID는 140)\n> yt-dlp -f 137+140 https://youtu.be/dOwNlO@D_Url\n[youtube] dOwNlO@D_Url: Downloading webpage\n[youtube] dOwNlO@D_Url: Downloading android player API JSON\n[info] dOwNlO@D_Url: Downloading 1 format(s): 137+140\n[download] Destination: dOwNlO@D_vIdEo.f137.mp4\n[download] 100% of 58.83MiB in 00:01\n[download] Destination: dOwNlO@D_vIdEo.f140.m4a\n[download] 100% of 23.19MiB in 00:00\n[Merger] Merging formats into \"dOwNlO@D_vIdEo.mp4\"\nDeleting original file dOwNlO@D_vIdEo.m4a (pass -k to keep)\nDeleting original file dOwNlO@D_vIdEo.f137.mp4 (pass -k to keep)\n```\n\n```toc\n```"},{"excerpt":"파이널 컷 한시간에 끝내기 유튜브 동영상 보고 파이널 컷 프로(Final Cut Pro) 사용법을 정리한 글. 🤔 파이널 컷 프로를 쓰는 이유 가장 큰 이유는 맥북이 있어서... 어도비 프리미어 프로는 구독료를 내고 써야 하는데, 1년 넘게 쓸수록 파이널 컷 프로를 쓰는게 더 이득. 📁 파일시스템 구조 확장자가  인 파일로 모든 것이 관리됨. 변경 사항은…","fields":{"slug":"/video/how-to-use-fcpx-usage/"},"frontmatter":{"date":"May 11, 2022","title":"파이널 컷 프로 사용법 간단 정리","description":"파이널 컷 프로 사용법 간단 정리","tags":["video"],"series":"비디오 편집","previewImage":"video.jpg","isPrivate":null},"rawMarkdownBody":"\n![](./images/fcpx.jpg)\n\n[파이널 컷 한시간에 끝내기](https://youtu.be/2aORJ7hKVMI) 유튜브 동영상 보고 파이널 컷 프로(Final Cut Pro) 사용법을 정리한 글.\n\n\n## 🤔 파이널 컷 프로를 쓰는 이유\n* 가장 큰 이유는 맥북이 있어서...\n* 어도비 프리미어 프로는 구독료를 내고 써야 하는데, 1년 넘게 쓸수록 파이널 컷 프로를 쓰는게 더 이득.\n\n## 📁 파일시스템 구조\n\n- 확장자가 `.fcpbundle` 인 파일로 모든 것이 관리됨. 변경 사항은 `.fcpbundle` 파일에 자동 저장됨.\n- `.fcpbundle` 파일 안에 편집할 미디어(동영상, 이미지 등)를 보관할 수 있는데, 가장 권장하는 방법임.\n- `.fcpbundle` 파일 내부는 `라이브러리 → 이벤트 → 폴더 → (스마트/키워드)컬렉션 → 프로젝트`로 구성되어 있음\n\n\n## 🗃️ 컬렉션\n\n### 스마트 컬렉션\n\n라이브러리 생성 시 자동으로 생성되는 컬렉션\n\n### 키워드 컬렉션\n\n- 미디어들을 분류할 때 사용(태그라고 생각하면 될듯)\n- 사용방법: 좌측 이벤트 목록을 마우스 우클릭 → 새로운 키워드 모음(New Keyword Collection) 클릭 → 키워드 지정할 동영상을 키워드 컬렉션으로 드래그 앤 드롭\n- 한 동영상에 여러 개의 키워드 컬렉션을 설정할 수 있음\n\n\n## 😨 용량이 너무 커질 때\n\n편집을 거듭할수록 `.fcpbundle` 파일 용량이 기가 단위로 커짐. 설정(CMD+,)에서 다음과 같이 설정\n\n- 재생 탭에서 `배경 렌더링(Background render)` 및 `멀티캠 클립에 최적화된 미디어 생성(Create optimized media for Multicam clips)` 체크 해제\n- 가져오기 탭에서 `최적화된 미디어 생성 및 프록시 미디어 생성` 체크 해제(단, 이 기능은 사양이 낮은 MacOS 기기에서 필요할 수 있음)\n\n\n## 🗓️ 프로젝트 생성\n\n- 생성된 프로젝트가 없다면 화면 하단에 프로젝트 생성 버튼을 클릭하여 생성\n- 생성할 프로젝트의 해상도, 프레임 등을 모른다면 가져온 미디어(동영상)을 마우스 우클릭 → 새로운 프로젝트(New Project) 클릭 → 자동으로 해상도, 프레임 등이 설정됨\n\n\n## ✂️ 주요 단축키\n\n### 편집\n\n- `I`(in-point), `O`(out-point): 이벤트 내의 미디어를 프로젝트로 가져오기 전에 필요한 부분만 자르기 위해 사용\n- `A`: 클립 선택 모드\n- `B`(Blade): 클립 자르기 모드(CMD + B 단축키로 대체 사용 가능)\n- `P`(Position): 마그네틱 타임라인 비활성화하여 클립을 드래그할 때 사용\n- `R`(Range): 범위 선택 모드\n\n### 타임라인\n\n- `Q`: 선택한 미디어를 타임라인 뒤에 붙여넣기\n- `W`: 선택한 미디어를 Time Indicator 기준으로 비집고 넣기\n- `E`: 선택한 미디어를 Main Storyline 맨 뒤에 클립 넣기\n- `V`: 클립 비활성화\n- `Delete`: 타임라인 내 클립과 공간을 모두 삭제\n- `Shift + Delete`: 클립은 삭제하되 공간은 유지\n- `CMD + +`: 타임라인 확대\n- `CMD + -`: 타임라인 축소\n- `OPTION + [`: 타임라인 앞쪽 클립 삭제\n- `OPTION + ]`: 타임라인 뒤쪽 클립 삭제\n- `SHIFT + /`: 편집포인트 주변 미리보기\n\n### 클립 양 끝 다듬기\n\n클립의 양끝을 마우스로 클립의 처음 또는 끝 부분을 클릭한 후\n\n- `,`: 왼쪽으로 1프레임 자르기\n- `.`: 오른쪽으로 1프레임 자르기\n- `SHIFT + ,`: 왼쪽으로 10프레임 자르기\n- `SHIFT + .`: 오른쪽으로 10프레임 자르기\n\n위 단축키는 클립 전체를 선택했을 때 사용하면 슬라이드됨\n\n### 서로 인접한 클립 다듬기\n\n- 두 클립의 인접한 부분을 다듬기(Trim) 도구(단축키 `T`)로 선택한 상태에서 양옆으로 움직이면 두 클립의 길이를 조절할 수 있음\n- 세 클립이 연달아 있는 경우, OPTION키를 누른 상태에서 다듬기 도구로 중간에 있는 클립을 마우스로 드래그하면 양 끝에 위치한 클립의 길이를 조절할 수 있음\n\n### 속도 조절\n\n- `CMD + R`을 누르면 속도 조절 바가 나타남\n- 값을 직접 입력하거나, 바 양 끝을 늘이거나 줄여서 조절할 수 있음\n\n### 동영상 가져오기\n\n- `SHIFT + 1`: 비디오와 오디오 모두 타임라인으로 가져오기\n- `SHIFT + 2`: 비디오만 타임라인으로 가져오기\n- `SHIFT + 3`: 오디오만 타임라인으로 가져오기\n\n### 음량 조절\n\n- `CONTROL + -`: 1db씩 음량 감소\n- `CONTROL + +`: 1db씩 음량 증가\n\n### 자막\n\n- `CONTROL + T`: 자막 삽입\n\n### 기타\n\n- `COMMAND + 9`: 백그라운드 작업 표시\n- `CONTROL + SHIFT + V`: 효과 붙여넣기\n\n\n## 🎦 비디오 편집\n\n### 꼭지\n\n프로젝트 내 동영상에 자막을 추가하면 서로의 틈새에 꼭지 같은 세로 바가 보임. 이 동영상을 다른 타임라인으로 옮기면 자막도 같이 이동됨.\n\n### 자막 삽입\n\n- 자세한 설정은 자막을 선택한 후 우측 상단 인스펙터 탭에서 설정\n- 프리셋 저장: 포맷(모양) 속성 저장[Save Font(Appearance) Attributes]\n\n### 변형(Transform), 자르기(Crop), 왜곡(Distort)\n\n- 화면 중간쯤 위 세 가지를 선택할 수 있는 아이콘이 있음. 이 아이콘을 클릭하여 마우스로 클립 조절\n- 세부적으로 설정하려는 경우, 클립을 선택한 후 우측 상단 인스펙터 탭을 사용\n\n### 애니메이션\n\n- 애니메이션이 시작될 지점에 타임라인을 둔 후 클립의 키프레임을 추가\n- 에니메이션이 종료될 지점에 타임라인을 둔 후(맨 뒤 프레임으로 이동한 후) 변형, 자르기, 왜곡 값 설정\n\n### 클립 복사\n\n`COMMAND + C, V` 사용해도 되지만 OPTION 키를 누른 채로 드래그해도 복사됨\n\n### 거꾸로 재생\n\n프로젝트 내 동영상 선택 → 화면 중간 쯤 시계 아이콘 클릭 → 클립 반전(Reverse Clip)\n\n\n## 🔉 오디오 편집\n\n### 음파 표시 변경\n\n- 소리를 들으며 컷 편집을 해야 하는 경우, 음파 표시를 크게 설정하면 좀 더 편함.\n- 프로젝트 내 동영상을 선택한 후 화면 오른쪽에 있는 클립 모양 변경(Select a clip display option) 아이콘을 클릭하여 음파 표시를 크게 설정\n\n### 오디오 삭제 또는 병합\n\n- 타임라인 내 클립을 마우스 우클릭 → 오디오 구성요소 확장(Expand Audio Components) → 비디오와 오디오가 분리되면 오디오 삭제(단축키는 `CONTROL + OPTION + S`)\n\n### 오디오 설정\n\n- 자세한 설정은 오디오를 선택한 후 우측 상단 인스펙터 탭에서 설정\n- 오디오를 선택하면 나타나는 동그란 모양의 Audio Fade In, Out 표시를 드래그하여 설정\n\n### 오디오 일부 구간 볼륨 줄이기\n\n- 범위선택 도구(단축키 R)을 사용하여 볼륨 줄일 구간 선택\n- 오디오 클립에 나타나는 가로 선을 드래그하여 볼륨 조절\n\n### 보이스오버 녹음\n\n- 단축키: `OPTION + COMMAND + 8`\n- 잘못 녹음했을 때, 삭제하고 다시 녹음할 필요 없이 다시 녹음하면 이전에 녹음했던 것과 비교하여 선택할 수 있음\n\n```toc\n```"},{"excerpt":"증상 Avamar(DataDomain) 백업 시 DNS resolve 에러 발생 원인분석 백업대상 서버에서 Avamar(DataDomain)로 ping을 날릴 때 IP주소로 날리면 성공하지만, 도메인 네임으로 날리면  에러 발생  파일에 도메인 정보가 잘 등록되어 있음.  파일에도 DNS 정보가 잘 등록되어 있음. 뭐임? 대체 뭐임?  원인  파일이 없어…","fields":{"slug":"/system/backup/avamar-backup-dns-error/"},"frontmatter":{"date":"March 29, 2022","title":"Avamar Administrator 백업 스케쥴 설정 오류","description":"Avamar Administrator 백업 스케쥴 설정 오류","tags":["system","backup"],"series":"시스템 관리","previewImage":"system.jpg","isPrivate":null},"rawMarkdownBody":"\n## 증상\n\nAvamar(DataDomain) 백업 시 DNS resolve 에러 발생\n\n```log\n2022-03-27 23:04:57 avtar Error <10541>: Failed to resolve Data Domain Server name \"datadomain.co.kr\" to an IP address. Data Domain login FAILED (Log #1) \n2022-03-27 23:04:57 avtar Error <10509>: Problem logging into the DDR server:'', only GSAN communication was enabled. (Log #1) \n2022-03-27 23:04:57 avtar FATAL <17964>: Backup is incomplete because file \"/ddr_files.xml\" is missing (Log #1) \n2022-03-27 23:04:57 avtar FATAL <8941>: Fatal server connection problem, aborting initialization. Verify correct server address and login credentials. (Log #1)\n```\n\n\n## 원인분석\n\n백업대상 서버에서 Avamar(DataDomain)로 ping을 날릴 때 IP주소로 날리면 성공하지만, 도메인 네임으로 날리면 `unknown host` 에러 발생\n\n```shell\n# ping 192.168.1.1  ## IP주소로 ping 날리면 잘 날아감\nPING 192.168.1.1: 64 byte packets\n64 bytes from 192.168.1.1 icmp_seq=0, time=0. ms\n64 bytes from 192.168.1.1 icmp_seq=1, time=0. ms\n----192.168.1.1 PING Statistics----\n2 packets transmitted, 2 packs received, 0% packet loss\n\n# ping avamar.co.kr  ## but 도메인 네임으로 날리면 에러 발생\nping: unknown host avamar.co.kr\n# ping datadomain.co.kr\nping: unknown host datadomain.co.kr\n```\n\n`/etc/hosts` 파일에 도메인 정보가 잘 등록되어 있음.\n```shell\n### Avamar\n192.168.1.1   avamar.co.kr avamar\n192.168.1.2   datadomain.co.kr datadomain\n```\n\n`/etc/resolv.conf` 파일에도 DNS 정보가 잘 등록되어 있음. 뭐임? 대체 뭐임?\n\n![뭐임? 대체 뭐임?](./images/what_what_is_it.jpg)\n\n\n## 원인\n\n`/etc/nsswitch.conf` 파일이 없어서 문제가 발생했던 것.\n\nHP-UX 서버인 경우 `/etc/nsswitch.hp_defaults` 파일을 `/etc/nsswitch.conf` 이름으로 복사하고, 이 파일의 `hosts: ` 값을 `files dns`로 수정 후 저장하니 ping unknown host 에러와 Avamar(DataDomain) DNS resolve 에러 해결됨.\n\n```shell\n#\n# /etc/nsswitch.conf\n#\n# @(#)\n#\n# An example file that could be copied over to /etc/nsswitch.conf; it gives\n# the default Name Service Switch behaviour for HP-UX prior to release 10.30.\n#\n\n# 아래 값은 서버마다 다를 것임...\n\npasswd:     files ldap\ngroup:      files ldap\nhosts:      files dns  # hosts: 값을 files dns로 수정하니 해결됨\nnetworks:   ldap [NOTFOUND=return] files\nprotocols:  ldap [NOTFOUND=return] files\nrpc:        ldap [NOTFOUND=return] files\nethers:     ldap [NOTFOUND=return] files\nnetmasks:   ldap [NOTFOUND=return] files\nbootparams: ldap [NOTFOUND=return] files\npublickey:  ldap [NOTFOUND=return] files\nnetgroup:   ldap\nautomount:  files ldap\naliases:    files ldap\nservices:   files ldap\n```"},{"excerpt":"증상 Avamar Administrator에서 백업 스케쥴 설정 시 시간을 추가하려 하면 아무런 반응이 없음 백업 시작-종료 시간 설정 시 와 같은 에러 발생 원인 언어가 영어로 설정되지 않은 컴퓨터에서 타임스탬프 접미사가 AM/PM이 아닌 다른 값으로 대체되어 발생 해결  파일에  추가 수정 전:   수정 후:    파일 경로:  참고 Avamar Se…","fields":{"slug":"/system/backup/avamar-administrator-backup-schedule-setting-error/"},"frontmatter":{"date":"February 20, 2022","title":"Avamar Administrator 백업 스케쥴 설정 오류","description":"Avamar Administrator 백업 스케쥴 설정 오류","tags":["system","backup"],"series":"시스템 관리","previewImage":"system.jpg","isPrivate":null},"rawMarkdownBody":"\n## 증상\n\n* Avamar Administrator에서 백업 스케쥴 설정 시 시간을 추가하려 하면 아무런 반응이 없음\n* 백업 시작-종료 시간 설정 시 `Invalid time input in time field`와 같은 에러 발생\n\n\n## 원인\n\n언어가 영어로 설정되지 않은 컴퓨터에서 타임스탬프 접미사가 AM/PM이 아닌 다른 값으로 대체되어 발생\n\n\n## 해결\n\n`mcgui.bat` 파일에 `-Duser.language=en -Duser.country=US` 추가\n* 수정 전:  `.\\bin\\runcmd \"%1\\bin\\javaw\" -Djava.util.prefs.userRoot=\\\"%USERPROFILE% ...생략`\n* 수정 후:  `.\\bin\\runcmd \"%1\\bin\\javaw\" -Duser.language=en -Duser.country=US -Djava.util.prefs.userRoot=\\\"%USERPROFILE% ...생략`\n\n`mcgui.bat` 파일 경로: `C:\\Program Files (x86)\\avs\\administrator\\<AVAVMAR_VERSION>\\bin`\n\n\n## 참고\n\n[Avamar Server: Unable to update schedule in Avamar GUI with error \"Invalid Time Input\" when the local computer is not set to English language](https://www.dell.com/support/kbdoc/ko-kr/000171535/unable-to-update-schedule-in-avamar-gui-with-error-invalid-time-input-when-the-local-computer-is-not-set-to-english-language)"},{"excerpt":"문제 A기관에 Avamar + DataDomain, B기관에 Avamar + DataDomain 설치 후 A기관의 백업 데이터를 B기관으로 복제(Replication)하려 함 Avamar 백업 데이터는 잘 복제되지만, DataDomain 백업 데이터는 복제되지 않고 오류 발생 증상 복제 작업 실행 시 Avamar와 DataDomain 간 세션 수립이 되지…","fields":{"slug":"/system/backup/datadomain-replication-error/"},"frontmatter":{"date":"February 20, 2022","title":"DataDomain 백업 데이터 복제(Replication) 오류","description":"DataDomain 백업 데이터 복제(Replication) 오류","tags":["system","backup"],"series":"시스템 관리","previewImage":"system.jpg","isPrivate":null},"rawMarkdownBody":"\n## 문제\n\n* A기관에 Avamar + DataDomain, B기관에 Avamar + DataDomain 설치 후 A기관의 백업 데이터를 B기관으로 복제(Replication)하려 함\n* Avamar 백업 데이터는 잘 복제되지만, DataDomain 백업 데이터는 복제되지 않고 오류 발생\n\n\n## 증상\n\n* 복제 작업 실행 시 Avamar와 DataDomain 간 세션 수립이 되지만 곧 끊어짐\n* 복제 작업 실행 전엔 Source Avamar와 Destination DataDomain 간 ping 송수신, SSH 연결 등의 통신이 원활히 되지만 복제 작업을 실행하면 ping 응답이 없고 SSH 연결도 되지 않음\n* 두 기관의 방화벽 로그를 조회해보니 허용로그가 있고 차단로그는 발견되지 않음...\n\n\n## 해봤던 삽질들\n\n* 네트워크 대역폭 문제인가? 대역폭을 10Mbps까지도 줄여봤으나 해결 안 됨\n* 방화벽에 Avamar 및 DataDomain의 IP가 블랙리스트로 등록되어 있는가? No...\n* DataDomain의 이더넷 케이블 불량인가? No...\n* DataDomain의 이더넷 포트 고장인가? No...\n* Avamar, DataDomain 둘 다 재기동 해볼까? 해봤으나 해결 안 됨\n* Source DataDomain OS 버전은 6.1.1.20이고 Destination DataDomain OS 버전은 6.2.1.30인데, 미세한 버전 차이(?)로 인해 문제가 발생할 수 있는가? 당연히 No...\n* 두 기관 사이에 있는 상위기관의 통신장비 문제인가? No... (상위기관의 통신장비는 라우팅만 수행할 뿐 포트, 서비스, 시간대 및 대역폭에 따라 통신을 차단하지 않는 것 확인)\n\n\n## 원인분석\n\nDataDomain 원격지 백업 작업 시작 후 Avamar Administrator에서 로그 확인 결과 `Replication failed: could not open connection to dest DDR` 에러 발생\n\n```log\n2021-06-29 15:06:17 avtar FATAL <0000>: <10608>Replication failed: could not open connection to dest DDR DATA_DOMAIN_DOMAIN, dest LSU: avamar-1234567890, handle: -1, DDR result code: 5037, desc: illegal operation\n2021-06-29 15:06:17 avtar FATAL <40009>: DDR encountered errors.\n2021-06-29 15:06:17 avtar Info <9772>: Starting graceful (staged) termination, DDR_ERROR event received (fatal severity) (wrap-up stage)\n2021-06-29 15:06:17 avtar Info <0000>: Entering the 'final' phase of termination, DDR_ERROR need to exit)\n2021/06/29-06:06:17.04880 [avtar]  INTERNAL ERROR: <0001> assert error (result == MSG_ERR_NONE), /local/jenkins/workspace/client_Rooster_SLES11-64/abs2/work/src/avtar/ade/adelib/interfaceade.cpp line 396\n2021-06-29 15:06:17 avtar Error <5674>: Could not locate requested backup for replication\n2021-06-29 15:06:17 avtar Error <6655>: Replicate interrupted.\n2021-06-29 15:06:17 avtar Info <7925>: Restored 0 bytes from selection(s) with 0 bytes in 0 files\n2021-06-29 15:06:17 avtar Info <7883>: Finished at 2021-06-29 15:06:17 KST, Elapsed time: 0000h:12m:20s\n2021-06-29 15:06:17 avtar Info <40176>: - Multi-stream restore summary (current 0, max active 0, max cloned 0, total cloned 0, ddr handle 1): \n2021-06-29 15:06:17 avtar Info <6149>: Error summary: 5 errors: 6655, 5674, 40009, 0\n2021-06-29 15:06:17 avtar Info <8468>: Sending wrapup message to parent\n2021-06-29 15:06:17 avtar Info <5314>: Command failed (5 errors, 2 warnings, exit code 10007: miscellaneous error)\n```\n\nA기관의 Avamar에서 SSH 접속 후 ddpconnchk라는 툴로 B기관의 DataDomain 접속 테스트 해봤더니 RPC 오류 발생\n\n```shell\nroot@avamar:/data01/home/admin/# ./ddpconnchk -s DATA_DOMAIN_IP -u ddboost -p P@SsW0rd\nDDP CLIENT LIBRARY VERSION 3:5:0:2-635767\n\nSERVER: DATA_DOMAIN_IP\n--------------------\n*** CONNECT SERVER TEST, DATA_DOMAIN_IP\nDDLOG: WARN: [1B50:9B0EA0] Port lookup for program 100003 failed. Retry number: 1\nDDLOG: WARN: [1B50:9B0EA0] clnt_process_a_send_job RPC error, Will fail all jobs later for status=5\n# ... 생략\nDDLOG: ERR: [1B50:9B0EA0] Port lookup for program 100003 failed.\n\n********************************************************\n** DDP connect FAILED\n**   Servername: DATADOMAIN_IP\n**   Username: svc_dd_boost\n**   Password: **************\n**   Error: rpc operation/connection failure\n**\n** - Verify OST is licensed and enabled on the server\n** - Verify username/passwd matches values\n**   configured on server\n** - Verify that access by this host is allowed\n********************************************************\nDDP Connect Server Test FAILED\n```\n\nnetstat 명령어 확인 결과 111번 포트 상태가 ESTABLISHED지만 Send-Q 값이 빠지지 않고 몇 분 후 상태가 변하면서 해제됨\n\n```shell\n# 원격지 복제 작업 걸어놓은 후 A기관의 Avamar에서 111번 포트 확인\nadmin@avamar:~/> netstat -an | grep 111\ntcp        0     60 AVAMAR_IP:44537     DATA_DOMAIN_IP:111        ESTABLISHED  # B기관의 DataDomain과 연결되어 있음 but Send-Q 값이 줄어들지 않음...\ntcp        0      1 AVAMAR_IP:44528     DATA_DOMAIN_IP:111        SYN_SENT\n\n# 시간이 꽤 지나면 ESTABLISHED → FIN_WAIT1 상태로 변경됨\nadmin@avamar:~/> netstat -an | grep 111\ntcp        0      1 AVAMAR_IP:49740     DATA_DOMAIN_IP:111        FIN_WAIT1\n\n# B기관의 DataDomain에서 111번 포트 확인\nddboost@datadomain# netstat\nProto Recv-Q Send-Q Local Address           Foreign Address         State\ntcp        0     32 DATA_DOMAIN_IP:111      AVAMAR_IP:44361         ESTABLISHED  # A기관의 Avamar와 연결되어 있음 but Send-Q 값이 줄어들지 않음...\ntcp        0     32 DATA_DOMAIN_IP:111      AVAMAR_IP:44419         ESTABLISHED \ntcp        0     32 DATA_DOMAIN_IP:111      AVAMAR_IP:44380         ESTABLISHED\n```\n\niperf로 A기관의 Avamar → B기관의 DataDomain으로 데이터 전송 잘 되는 것 확인함\n\n```shell\nsysadmin@datadomain# net iperf server  # DataDomain에서 iperf Server 모드 실행\n----------------------------------------------j--------------\nServer listening on TCP port 5001\nTCP window size:  256 KByte (default)\n------------------------------------------------------------\n[  4] local DATA_DOMAIN_IP port 5001 connected with AVAMAR_IP port 14376\n[ ID] Interval       Transfer     Bandwidth\n[  4]  0.0-10.0 sec   574 MBytes   480 Mbits/sec\n```\n\n복제 작업을 실행하지 않았을 때 traceroute 명령어로 A기관의 Avamar → B기관의 DataDomain 정상 도달 확인\n\n```shell\nroot@avamar:~/# traceroute -I DATA_DOMAIN_IP\nNote: the -i and -I options were exchangedfor compability with LBL traceroute\nUse -I for ICMP, and -i <ifname> to specify the interface name\ntraceroute to DATA_DOMAIN_IP (DATA_DOMAIN_IP), 30 hops max, 40 byte packets using ICMP\n 1  A_SWITCH (A_BACKBONE_SWITCH)  0.791 ms   0.740 ms   0.612 ms\n 2  A_SWITCH (A_FAILOVER_SWITCH)  0.947 ms   0.577 ms   0.496 ms\n 3  A_SWITCH (A_SWITCH)  1.640 ms   4.393 ms   3.013 ms              -> 여기까지 A기관 통신장비\n 4  SERIAL_IP (SERIAL_IP)  2.632 ms   1.908 ms   6.154 ms            -> 여기서부터 상위기관 통신장비\n 5  SERIAL_IP (SERIAL_IP)  5.667 ms   4.795 ms   2.980 ms\n 6  SERIAL_IP (SERIAL_IP)  1.834 ms   1.838 ms   5.145 ms\n 7  SERIAL_IP (SERIAL_IP)  2.080 ms   4.899 ms   3.812 ms\n 8  SERIAL_IP (SERIAL_IP)  3.283 ms   7.983 ms   6.874 ms\n 9  SERIAL_IP (SERIAL_IP)  5.754 ms   4.021 ms   1.940 ms\n10  SERIAL_IP (SERIAL_IP)  2.118 ms   5.800 ms   4.956 ms\n11  SERIAL_IP (SERIAL_IP)  1.671 ms   5.913 ms   4.803 ms\n12  SERIAL_IP (SERIAL_IP)  1.723 ms   6.091 ms   4.984 ms\n13  SERIAL_IP (SERIAL_IP)  1.893 ms   5.966 ms   4.859 ms            -> 여기까지 상위기관 통신장비\n14  B_SWITCH (B_SWITCH)  2.242 ms   6.426 ms   5.318 ms              -> 여기서부터 B기관 통신장비\n15  DATA_DOMAIN_IP (DATA_DOMAIN_IP)  4.260 ms   4.238 ms   3.178 ms  -> 정상 도달\n```\n\nbut 복제 작업을 시작하면 도달 불가\n\n```shell\nroot@avamar:~/# traceroute -I DATA_DOMAIN_IP\nNote: the -i and -I options were exchangedfor compability with LBL traceroute\nUse -I for ICMP, and -i <ifname> to specify the interface name\ntraceroute to DATA_DOMAIN_IP (DATA_DOMAIN_IP), 30 hops max, 40 byte packets using ICMP\n 1  A_SWITCH (A_BACKBONE_SWITCH)  0.791 ms   0.740 ms   0.612 ms\n 2  A_SWITCH (A_FAILOVER_SWITCH)  0.947 ms   0.577 ms   0.496 ms\n 3  A_SWITCH (A_SWITCH)  1.640 ms   4.393 ms   3.013 ms      -> 여기까지 A기관 통신장비\n 4  SERIAL_IP (SERIAL_IP)  1.989 ms   1.316 ms   7.284 ms    -> 여기서부터 상위기관 통신장비\n 5  SERIAL_IP (SERIAL_IP)  6.761 ms   6.337 ms   14.864 ms\n 6  SERIAL_IP (SERIAL_IP)  1.574 ms   6.055 ms   4.946 ms\n 7  SERIAL_IP (SERIAL_IP)  2.084 ms   5.247 ms   4.066 ms\n 8  SERIAL_IP (SERIAL_IP)  1.347 ms   5.288 ms   4.180 ms\n 9  SERIAL_IP (SERIAL_IP)  2.546 ms   6.469 ms   5.360 ms\n10  SERIAL_IP (SERIAL_IP)  4.273 ms   3.875 ms   3.190 ms\n11  SERIAL_IP (SERIAL_IP)  3.214 ms   5.936 ms   4.826 ms\n12  SERIAL_IP (SERIAL_IP)  3.856 ms   5.789 ms   2.686 ms\n13  SERIAL_IP (SERIAL_IP)  4.453 ms   7.945 ms   6.836 ms   -> 여기까지 상위기관 통신장비\n14  * * *                                                   -> B기관 Area에서 timeout 발생. B기관 통신장비에서 가로막고 있는 것으로 추정...\n15 ~ 29 * * *\n30  * * *\n```\n\n마찬가지로 복제 작업을 실행하지 않았을 때 traceroute 명령어로 B기관의 DataDomain → A기관의 Avamar 정상 도달 확인\n\n```shell\nsysadmin@datadomain# net route trace AVAMAR_IP\ntraceroute to AVAMAR_IP (AVAMAR_IP), 30 hops max, 60 byte packets\n 1  B_SWITCH (B_SWITCH)  54.464 ms  54.837 ms  54.858 ms\n 2  B_SWITCH (B_SWITCH)  0.655 ms  1.883 ms  1.905 ms    -> 여기까지 B기관 통신장비\n 3  SERIAL_IP (SERIAL_IP)  1.375 ms  2.035 ms  2.052 ms  -> 여기서부터 상위기관 통신장비\n 4  SERIAL_IP (SERIAL_IP)  1.630 ms  1.829 ms  2.023 ms\n 5  SERIAL_IP (SERIAL_IP)  1.796 ms  1.894 ms  1.897 ms\n 6  SERIAL_IP (SERIAL_IP)  1.964 ms  1.340 ms  2.638 ms\n 7  SERIAL_IP (SERIAL_IP)  2.005 ms  1.997 ms  2.016 ms  -> 여기까지 상위기관 통신장비\n 8  A_SWITCH (A_SWITCH)  2.928 ms  2.992 ms  3.800 ms    -> 여기서부터 A기관 통신장비\n 9  A_SWITCH (A_SWITCH)  2.984 ms  3.983 ms  3.987 ms\n10  AVAMAR_IP (AVAMAR_IP)  3.476 ms  3.497 ms  3.736 ms  -> 정상 도달\n```\n\nbut 원격지 백업 작업을 시작하면 도달 불가\n\n```shell\nsysadmin@datadomain# net route trace AVAMAR_IP\ntraceroute to AVAMAR_IP (AVAMAR_IP), 30 hops max, 60 byte packets\n 1  B_SWITCH (B_SWITCH)  12.280 ms  13.585 ms  13.606 ms  -> B 기관 통신장비\n 2  * * *                                                 -> timeout 발생. B기관 통신장비에서 가로막고 있는 것으로 추정...\n 3 ~ 29 * * *\n30  * * *\n```\n\n이런 정황들을 봤을 때, B기관의 통신장비에서 통신을 가로막고 있는 느낌적인 느낌이...\n\n## 원인\n\n* Source DataDomain의 백업 데이터를 Destination DataDomain으로 복제할 때 Source Avamar와 Destination DataDomain간 세션을 수립한 후 통신을 수행함\n* 이 때 두 서버간 SSH 연결이 가능해야 하며, RPC(원격 프로시저 호출) 프로토콜을 사용함\n* 그런데 침입방지시스템(IPS)에서 RPC를 침입으로 간주하여 차단했기 때문에 원격지 백업 데이터 복제 오류 발생\n* 알고보니 방화벽에만 포트 허용 설정이 되어 있었고 IPS에는 아무런 설정이 되어있지 않아 발생한 문제였음...\n\n\n## 해결\n\n침입방지시스템(IPS) 설정하여 해결 ~~너무 간단한 방법이었다니!~~\n\n\n## 참고\n\n* [Avamar Replication - undocumented but required port (SSH / Port 22)](https://www.dell.com/support/kbdoc/ko-kr/000019734/avamar-replication-undocumented-but-required-port-ssh-port-22)\n* [Dell EMC Data Domain® Security Configuration Guide 302-005-263 REV 03의 27Page](https://www.delltechnologies.com/asset/en-us/products/data-protection/technical-support/docu91808.pdf): DataDomain에서 사용하는 포트 설명"}]}},"pageContext":{}},"staticQueryHashes":[],"slicesMap":{}}